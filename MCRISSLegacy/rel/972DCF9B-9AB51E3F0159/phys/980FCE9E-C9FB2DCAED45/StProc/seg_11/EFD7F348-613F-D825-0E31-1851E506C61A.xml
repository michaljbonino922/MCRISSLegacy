<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertOrUpdateJROTC]" directorySegmentName="seg_11" id="EFD7F348-613F-D825-0E31-1851E506C61A">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@JROTCID  uniqueiden..er,  
       @Service varchar(30), 
       @SchoolName varchar(60), 
       @SchoolYear int, 
       @Popula.on smallint, 
       @Organiza.onID int, 
       @UserLogin varchar(50) 
        
 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT CollegePro.leJROTCID FROM CollegePro.leJROTC WHERE CollegePro.leJROTCID = @JROTCID) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   [USMC].[CollegePro.leJROTC] 
  SET  
   Service = @Service,   
   SchoolName = @SchoolName,    
   SchoolYear = @SchoolYear, 
   Popula.on = @Popula.on,   
   Organiza.onID = @Organiza.onID, 
   UserLogin = @UserLogin, 
            UpdateDate = GETDATE() 
  WHERE  
   CollegePro.leJROTCID = @JROTCID 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 
 INSERT INTO [USMC].[CollegePro.leJROTC] (CollegePro.leJROTCID, 
       Service, 
       SchoolName, 
       SchoolYear, 
       Popula.on, 
       Organiza.onID, 
       UserLogin, 
       UpdateDate) 
        
     VALUES (@JROTCID, 
       @Service, 
       @SchoolName, 
       @SchoolYear, 
       @Popula.on, 
       @Organiza.onID, 
       @UserLogin, 
       GETDATE()) 
        
 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>