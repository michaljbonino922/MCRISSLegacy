<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateCurrentFyVisitRecap]" directorySegmentName="seg_11" id="E1C0CDF3-952A-D647-7DC6-B9BC39C6FA0C">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@CurrentFyVisitRecapId uniqueiden..er, 
     @Organiza.onId     int,  
     @Appointments     int, 
     @Contacts         int, 
     @Interviews         int,  
     @Nwas             int, 
     @Date             DateTime, 
     @Purpose            varchar(75), 
     @LastUpdateUserId uniqueiden..er, 
     @SchoolCode   int, 
     @FiscalYear   int 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT CurrentFyVisitRecapId FROM [MCRISS].[USMC].[CurrentFYVisitRecap] WHERE CurrentFyVisitRecapId = @CurrentFyVisitRecapId) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   [MCRISS].[USMC].[CurrentFYVisitRecap] 
  SET  
   CurrentFyVisitRecapId = @CurrentFyVisitRecapId, 
   Organiza.onId = @Organiza.onId, 
   Appointments  = @Appointments,    
   Contacts = @Contacts,   
   Interviews = @Interviews, 
   Nwas  = @Nwas,    
   Date = @Date,   
   Purpose = @Purpose,    
   LastUpdatedDate = GETDATE(), 
   LastUpdateUserId= @LastUpdateUserId, 
   School_Code = @SchoolCode, 
   FiscalYear = @FiscalYear 
    
  WHERE  
   CurrentFyVisitRecapId = @CurrentFyVisitRecapId 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 
 INSERT INTO [MCRISS].[USMC].CurrentFYVisitRecap(CurrentFyVisitRecapId, 
       Organiza.onId, 
       Appointments, 
       Contacts, 
       Interviews,   
       Nwas, 
       Date, 
       Purpose,        
       LastUpdatedDate, 
       LastUpdateUserId, 
       School_Code, 
       FiscalYear) 
     VALUES (@CurrentFyVisitRecapId, 
       @Organiza.onId, 
       @Appointments, 
       @Contacts, 
       @Interviews, 
       @Nwas,  
       @Date, 
       @Purpose,       
       GETDATE(), 
       @LastUpdateUserId, 
       @SchoolCode, 
       @FiscalYear) 
 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>