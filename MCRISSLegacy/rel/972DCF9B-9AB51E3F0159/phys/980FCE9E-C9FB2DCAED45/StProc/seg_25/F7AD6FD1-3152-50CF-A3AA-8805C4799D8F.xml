<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_UpdateSchoolAssignment]" directorySegmentName="seg_25" id="F7AD6FD1-3152-50CF-A3AA-8805C4799D8F">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@SchoolCode   int = 0, 
 @SchoolType   varchar(2), 
 @SchoolName   varchar(60), 
 @StreetAddress   varchar(40), 
 @StreetAddress2  varchar(40), 
 @City    varchar(20), 
 @State    varchar(2), 
 @ZipCode   varchar(9), 
 @AreaCode   varchar(3)  = NULL, 
        @PhoneNumberPre.x  varchar(3)  = NULL, 
 @PhoneNumberExchange  varchar(4)  = NULL, 
 @DODCode   varchar(9)  = NULL, 
 @Organiza.onID  integer, 
 @E.ec.veDate   date.me, 
 @UserLogin   varchar(15),  
 @ID   int   = @SchoolCode OUTPUT  
AS 
 
SET NOCOUNT ON 
 
DECLARE @PhoneNumber varchar(10) 
 
IF (@DODCode = '') OR (@DODCode = 'CCEP') 
BEGIN 
 SET @DODCode = NULL 
END 
 
--- DEFINE THE SCHOOL TELEPHONE NUMBER AND DOD CODE 
--- IF THE DOD CODE IS NULL, CREATE A TEMPORARY "DUMMY" CODE 
SET @PhoneNumber = COALESCE(@AreaCode, SPACE(0)) + COALESCE(@PhoneNumberPre.x, SPACE(0)) + COALESCE(@PhoneNumberExchange, SPACE(0)) 
SET @DODCode   = COALESCE(@DODCode, dbo.CreateDummyDODCode(@SchoolType)) 
 
 
IF NOT EXISTS (SELECT 1 FROM HIGH_SCHOOL WHERE SCHOOL_CODE = @SCHOOLCODE) 
BEGIN 
 --- INSERT NEW RECORD  
 INSERT INTO HIGH_SCHOOL  
  (SCHOOL_TYPE, HIGHSCHOOL_NAME, STREET, STREET2, CITY, STATE_CODE,  
  ZIP_CODE, TELEPHONE_NUMBER, DOD_CODE, ORGANIZATION_ID, EFFECTIVE_DATE,  
  USER_LOGIN, UPDATE_DATE, DELETED) 
 VALUES  
  (@SchoolType, @SchoolName, @StreetAddress, @StreetAddress2, @City, @State,  
  @ZipCode, @PhoneNumber, @DODCode, @Organiza.onID, @E.ec.veDate,  
  @UserLogin, GETDATE(), 'N') 
 
 --- RETURN THE ID OF THE NEW RECORD 
 SET @ID = @@IDENTITY 
 
 --- IF THE RSS IS NOT HQ OF ALBANY THEN PROCEED TO INSERT 
 IF  @ORGANIZATIONID <> 1550 
 BEGIN 
  
  
 --NEED TO GET SCHOOL CODE OF HIGH SCHOOL THAT WAS JUST INSERTED AND ADD SCHOOL TO PROFILE TABLE 
 DECLARE @SCHOOL_CODE INT 
 DECLARE @SCHOOL_YEAR INT 
  
 SET @SCHOOL_CODE=(SELECT SCHOOL_CODE FROM HIGH_SCHOOL WHERE DOD_CODE=@DODCODE) 
 SET @SCHOOL_YEAR=(SELECT dbo.GetSchoolYear(@E.ec.veDate)) 
  
 INSERT INTO [HIGH_SCHOOL_PROFILE] 
 ( 
 [SCHOOL_CODE], 
 [SCHOOL_YEAR], 
 [PRIORITY_CODE], 
 [STATUS_CODE], 
 [ACCESS_CODE], 
 [RECRUITER_ID], 
 [PERCENT_TO_COLLEGE], 
 [MALE_SENIORS], 
 [FEMALE_SENIORS], 
 [ASVAB_RESP], 
 [ASVAB_MONTH], 
 [ASVAB_NUM], 
 [SCHEDULED_GRAD_DATE], 
 [USER_LOGIN], 
 [UPDATE_DATE] 
 ) 
 VALUES 
 ( 
 @SCHOOL_CODE, 
 @SCHOOL_YEAR, 
 NULL, 
 NULL, 
 NULL, 
 NULL, 
 NULL, 
 0, 
 0, 
 'N', 
 NULL, 
 NULL, 
 NULL, 
 'SA', 
 GETDATE() 
 ) 
 END 
  
  
 
 
 
 
 
END 
ELSE 
BEGIN 
 --- UPDATE EXISTING RECORD 
 UPDATE  
  HIGH_SCHOOL  
 
 SET      
  HIGHSCHOOL_NAME  = @SchoolName,  
  STREET    = @StreetAddress, 
  STREET2   = @StreetAddress2,  
  CITY    = @City,  
  STATE_CODE   = @State,  
  ZIP_CODE   = @ZipCode,  
  TELEPHONE_NUMBER = @PhoneNumber,  
  DOD_CODE   = @DODCode,  
  ORGANIZATION_ID  = @Organiza.onID,  
  EFFECTIVE_DATE   = @E.ec.veDate,  
  USER_LOGIN   = @UserLogin,  
  UPDATE_DATE   = GETDATE()  
 WHERE  
  SCHOOL_CODE   = @SchoolCode 
 
 --- RETURN THE ID OF THE RECORD 
 SET @ID = @SchoolCode 
END 
 
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>