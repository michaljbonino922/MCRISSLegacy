<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_UpdateCandidateWaiver]" directorySegmentName="seg_24" id="E9BA5057-1F1B-8F31-C2B1-8D72034CA8AA">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@CandidateWaiverID int = 0, 
 @NWAID int, 
 @SubmissionDate date.me, 
 @OccasionID int, 
 @CategoryID int, 
 @TypeID int, 
 @LevelID int, 
 @Details varchar(255), 
 @StatusCode char(1), 
 @ApprovalDate date.me, 
 @UserLogin varchar(15), 
 @ID int OUTPUT 
AS 
 
SET NOCOUNT ON 
 
DECLARE @ApprovalNumber int 
DECLARE @DateApproved date.me 
DECLARE @WaiverID  int 
 
DECLARE @WaiverCategory char(1) 
DECLARE @WaiverLevel char(1) 
DECLARE @WaiverType char(1) 
DECLARE @WaiverStatus char(1) 
DECLARE @WaiverCode char(3) 
 
DECLARE @DBID INT 
DECLARE @DBNAME NVARCHAR(128) 
 
SET @DBID = DB_ID()  
SET @DBNAME = DB_NAME() 
 
--- GET THE WAIVER ID 
SELECT  
 @WaiverID = WAIVER_ID  
FROM  
 WAIVER  
WHERE  
 WAIVER_CATEGORY_ID = @CategoryID AND  
 WAIVER_TYPE_ID = @TypeID AND  
 WAIVER_LEVEL_ID = @LevelID 
 
--- DEFINE THE CATEGORY, TYPE AND LEVEL 
SELECT @WaiverCategory = WAIVER_CATEGORY_CODE FROM WAIVER_CATEGORY WHERE WAIVER_CATEGORY_ID = @CategoryID 
SELECT @WaiverLevel = WAIVER_LEVEL_CODE FROM WAIVER_LEVEL WHERE WAIVER_LEVEL_ID = @LevelID 
SELECT @WaiverType = WAIVER_TYPE_CODE FROM WAIVER_TYPE WHERE WAIVER_TYPE_ID = @TypeID 
 
--- DEFINE THE WAIVER CODE 
SET @WaiverCode = @WaiverCategory + @WaiverType + @WaiverLevel 
 
--- DEFINE THE WAIVER STATUS AND DATE APPROVED 
--- AUTOMATICALLY APPROVE YYY WAIVERS 
SELECT 
 @WaiverStatus = CASE @WaiverCode  
   WHEN 'YYY' THEN 'A' 
   ELSE @StatusCode 
   END, 
 @DateApproved = CASE @WaiverCode  
   WHEN 'YYY' THEN @SubmissionDate 
   ELSE  @ApprovalDate 
   END 
 
IF EXISTS(SELECT 1 FROM CANDIDATE_WAIVER WHERE CANDIDATE_WAIVER_ID = @CandidateWaiverID) 
BEGIN  
 --- IF THE WAIVER IS APPROVED SET THE APPROVAL NUMBER TO THE RECORD ID 
 --- IF NOT SET THE APPROVAL NUMBER = NULL 
 SET @ApprovalNumber = CASE @WaiverStatus  
    WHEN 'A' THEN @CandidateWaiverID 
    ELSE NULL 
    END 
 
   
 --- UPDATE THE WAIVER 
 UPDATE  
  CANDIDATE_WAIVER 
 SET  
  NWA_ID = @NWAID, 
  WAIVER_ID = @WaiverID, 
  --- WAIVER_STATUS_CODE = @StatusCode, 
  WAIVER_STATUS_CODE = @WaiverStatus, 
  WAIVER_SUBMISSION_DATE = @SubmissionDate, 
  WAIVER_DETAILS = @Details, 
  APPROVAL_NUMBER = @ApprovalNumber, 
  --- APPROVAL_DATE = @ApprovalDate, 
  APPROVAL_DATE = @DateApproved, 
  OCCASION_ID = @OccasionID, 
  USER_LOGIN = @UserLogin, 
  UPDATE_DATE = GetDate() 
 WHERE  
  CANDIDATE_WAIVER_ID = @CandidateWaiverID 
 
 --- SET THE ID FOR THE OUTPUT PARAMETER 
 SET @ID = @CandidateWaiverID 
END 
 
ELSE 
 
BEGIN 
 --- INSERT THE WAIVER 
 INSERT INTO CANDIDATE_WAIVER  
  (NWA_ID, WAIVER_ID, WAIVER_STATUS_CODE, WAIVER_SUBMISSION_DATE, 
   WAIVER_DETAILS, APPROVAL_DATE, OCCASION_ID, USER_LOGIN, UPDATE_DATE) 
 VALUES 
  (@NWAID, @WaiverID, @WaiverStatus, @SubmissionDate,  
   @Details, @DateApproved, @OccasionID, @UserLogin, GETDATE()) 
  
 --- GET THE WAIVER ID IMMEDIATELY AFTER INSERT 
 --- SET @ID = @@IDENTITY 
 SELECT @ID = CASE  
   WHEN @@IDENTITY IS NULL THEN (SELECT MAX(CANDIDATE_WAIVER_ID) FROM CANDIDATE_WAIVER  
       WHERE NWA_ID = @NWAID) 
   ELSE @@IDENTITY 
   END 
    
 --- IF THE WAIVER IS APPROVED SET THE APPROVAL NUMBER TO THE RECORD ID 
 --- IF @STATUSCODE = 'A' 
 IF @WaiverStatus = 'A' 
 BEGIN 
  SET @ApprovalNumber = @ID 
 
  UPDATE  
   CANDIDATE_WAIVER 
  SET  
   APPROVAL_NUMBER = @ApprovalNumber 
  WHERE  
   CANDIDATE_WAIVER_ID = @ApprovalNumber 
 END 
END]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>