<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1125" directorySegmentName="seg_16" id="73F3BFC2-4767-E661-46CC-C1FD1F3ECD8E">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@ID       uniqueiden..er, 
 @PersonID     uniqueiden..er, 
 @Recrui.ngOrganiza.onID uniqueiden..er, 
 @Recrui.ngPersonID   uniqueiden..er = NULL, 
 @Gradua.onYear    smallint = NULL, 
 @ProspectDisposi.onID  smallint = NULL,  
 @PACCreateDate    date.me = null, 
 @Ac.vity     varchar(10) = NULL, 
 @Ac.vityDate    date.me = NULL, 
 @CareerDecision    varchar(50) = NULL, 
 @Ini.alContactType   varchar(10) = NULL, 
 @ASVABDate     date.me = NULL, 
 @Source      varchar(10) = NULL, 
 @NoChildLe.BehindOptIn  bit = null, 
 @Suppression    bit = null, 
 @ContactTimeIndicator  char(1) = NULL, 
 @Note      varchar(500) = NULL, 
 @LastUpdateUserId   uniqueiden..er, 
 @SubSta.onType    char(1), 
 @NWAId      uniqueiden..er = NULL, 
 @AcpApplicantId    uniqueiden..er = NULL, 
 @TDQRemark     varchar(50) = NULL, 
 @PriorityCode    smallint = NULL, 
 @SourceDual     varchar(10) = NULL, 
 @SourceDualDesc    varchar(15) = NULL,  
 @PPC      varchar(8) = NULL, 
 @ReferralSSN    varchar(9) = NULL, 
 @CategoryCode    varchar(6) = NULL, 
 @Interest     varchar(500) = NULL, 
 @ProgramType    varchar(4) = NULL, 
 @ProgramCode    varchar(4) = NULL, 
 @ReferOSODate    date.me = NULL, 
 @Ini.alContactDate   date.me = NULL, 
 @MonthWorkFor    date.me = NULL, 
 @BirthDocumentCode   smallint = NULL, 
 @DriverLicenseNumber  varchar(20) = NULL, 
 @DriverLicenseState      varchar(2) =NULL, 
 @DriverLicenseExp   date.me = NULL, 
 @HasDriversLicense   bit = NULL, 
 @HasDrugUse     bit = NULL, 
 @HasMoralO.ense   bit = NULL, 
 @HasPhysicalProblems  bit = NULL, 
 @WaverInfo     varchar(500) = NULL, 
 @Expira.onDate    date.me = null, 
 @RecruiterComments   varchar(500) = null, 
 @SncoicComments    varchar(500) = null, 
 @AvablTime     int = null, 
 @AvablLoca.on    int = null, 
 @AvablOtherDesc    varchar(50) = null, 
 @StsChgDepcy    bit = null, 
 @StsChgEdu     bit = null, 
 @StsChgPhys     bit = null, 
 @StsChgDrug     bit = null, 
 @StsChgMoral    bit = null, 
 @StsChgAtrRisk    bit = null, 
 @StsChgOther    bit = null, 
 @StsChgOtherDesc   varchar(20) = null, 
 @StsChgRemark    varchar(500) = null,  
 @ASVABScore     int = null, 
 @DigitalCommunica.on  varchar(1000) = NULL  
AS 
BEGIN 
      
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ProspectId FROM Prospec.ng.USMC.Prospect WHERE ProspectId = @ID) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   Prospec.ng.USMC.Prospect 
  SET  
   PersonId = @PersonID, 
   Recrui.ngOrganiza.onId =  @Recrui.ngOrganiza.onID, 
   Recrui.ngPersonId = @Recrui.ngPersonID,    
   Gradua.onYear = @Gradua.onYear, 
   ProspectDisposi.onId = @ProspectDisposi.onID, 
   PACCreateDate = @PACCreateDate, 
   Ac.vity = @Ac.vity, 
   Ac.vityDate = @Ac.vityDate, 
   CareerDecision = @CareerDecision, 
   Ini.alContactType = @Ini.alContactType, 
   ASVABDate = @ASVABDate, 
   Source = @Source,       
   NoChildLe.BehindOptIn = @NoChildLe.BehindOptIn, 
   Suppression=@Suppression, 
   ContactTimeIndicator=@ContactTimeIndicator, 
   Note=@Note, 
   LastUpdateDate = GETDATE(), 
   LastUpdateUserId = @LastUpdateUserId, 
   SubSta.onType = @SubSta.onType, 
   NWAId = @NWAId, 
   AcpApplicantId = @AcpApplicantId, 
   TDQRemark = @TDQRemark,  
   PriorityCode =@PriorityCode, 
   SourceDual =@SourceDual, 
   SourceDualDesc =@SourceDualDesc, 
   PPC = @PPC, 
   ReferralSSN = @ReferralSSN, 
   CategoryCode = @CategoryCode, 
   Interest = @Interest, 
   ProgramType = @ProgramType, 
   ProgramCode = @ProgramCode, 
   ReferOSODate = @ReferOSODate, 
   Ini.alContactDate = @Ini.alContactDate, 
   MonthWorkFor = @MonthWorkFor, 
   BirthDocumentCode = @BirthDocumentCode, 
   DriverLicenseNumber = @DriverLicenseNumber, 
   DriverLicenseState = @DriverLicenseState, 
   DriverLicenseExp = @DriverLicenseExp, 
   HasDriversLicense = @HasDriversLicense, 
   HasDrugUse = @HasDrugUse, 
   HasMoralO.ense = @HasMoralO.ense, 
   HasPhysicalProblems = @HasPhysicalProblems, 
   WaverInfo = @WaverInfo, 
      Expira.onDate = @Expira.onDate, 
      RecruiterComments = @RecruiterComments, 
      SncoicComments = @SncoicComments, 
   AvablTime =  @AvablTime, 
   AvablLoca.on =  @AvablLoca.on, 
   AvablOtherDesc =  @AvablOtherDesc, 
   StsChgDepcy =  @StsChgDepcy, 
   StsChgEdu =  @StsChgEdu, 
   StsChgPhys =  @StsChgPhys, 
   StsChgDrug =  @StsChgDrug, 
   StsChgMoral =  @StsChgMoral, 
   StsChgAtrRisk =  @StsChgAtrRisk, 
   StsChgOther =  @StsChgOther, 
   StsChgOtherDesc =  @StsChgOtherDesc, 
   StsChgRemark =  @StsChgRemark, 
   DigitalCommunica.on = @DigitalCommunica.on 
  WHERE  
   ProspectId = @ID 
 
   
  IF @ProspectDisposi.onID = 4 -- Perm DQ  
  BEGIN 
   --make sure the above update statemnet worked 
   IF @ProspectDisposi.onID = (SELECT ProspectDisposi.onId FROM Prospec.ng.USMC.Prospect WHERE ProspectId = @ID) 
   BEGIN 
  
    DECLARE @Now date 
 
    SET @Now = GETDATE() 
 
    -- update PAC expira.on date  
    UPDATE  
     Prospec.ng.USMC.Prospect  
    SET  
     Expira.onDate = @Now 
    WHERE  
     ProspectId = @ID 
  
    -- delete all future PAC event when Perm DQ 
    DECLARE @EventToDeleteId uniqueiden..er 
 
    DECLARE eventDelete_cursor CURSOR FOR 
     SELECT e.ID  
     FROM  
      RSSOSS.USMC.Event e 
      INNER JOIN RssOss.USMC.EventSubject s ON e.ID = s.EventId 
     WHERE  
      s.SubjectId = @ID 
      AND e.EventSourceId = 16 
      AND e.StartDate > DATEADD(day, 2, @Now)  -- per government request to give 2 days bu.er zone for the events dele.on 
  
    OPEN eventDelete_cursor   
 
    FETCH NEXT FROM eventDelete_cursor    
    INTO @EventToDeleteId 
 
    WHILE @@FETCH_STATUS = 0   
    BEGIN 
      
     EXEC RssOss.USMC.DeleteEvent @EventToDeleteId 
 
     FETCH NEXT FROM eventDelete_cursor    
     INTO @EventToDeleteId 
    END 
 
    CLOSE eventDelete_cursor;   
    DEALLOCATE eventDelete_cursor;  
 
   END 
  END 
 
  IF @ProspectDisposi.onID = 3 -- Temp DQ 
  BEGIN 
   --make sure the above update statemnet worked 
   IF @ProspectDisposi.onID = (SELECT ProspectDisposi.onId FROM Prospec.ng.USMC.Prospect WHERE ProspectId = @ID) 
   BEGIN 
 
    DECLARE @NowPlus30 date 
    SET @NowPlus30 = DATEADD(day, 30, GETDATE()) 
 
    IF NOT EXISTS( 
        SELECT e.ID  
        FROM  
         RSSOSS.USMC.Event e 
         INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId 
        WHERE  
         e.EventTypeId = 179  
         AND s.SubjectId = @ID 
         AND e.StartDate >= @NowPlus30 
         AND e.StartDate < DATEADD(day, 1, @NowPlus30) 
       ) 
    BEGIN 
     SET XACT_ABORT ON  
      
     BEGIN TRANSACTION 
 
     DECLARE @NewEventId uniqueiden..er 
     SET @NewEventId = NEWID() 
 
     -- Event unallocated "DQ Temp Review" Event 30 days from now 
     INSERT INTO RSSOSS.USMC.Event 
       (   ID 
        ,Organiza.onId 
        ,EventSourceId 
        ,EventTypeId 
        ,Loca.on 
        ,IsComplete 
        ,StartDate 
        ,EndDate 
        ,LastUpdateDate 
        ,LastUpdateUserId 
        ,EventPrecision 
        ,IsApproved 
        ,SeriesID 
       ) 
     SELECT 
      @NewEventId 
      ,(SELECT ORGANIZATION_ID FROM MCRISS.dbo.RECRUITING_ORGANIZATION WHERE rowguid = @Recrui.ngOrganiza.onID) 
      ,16 
      ,179 
      ,'RSS' 
      ,0 
      ,@NowPlus30 
      ,@NowPlus30 
      ,GETDATE() 
      ,@Recrui.ngPersonID 
      ,2 
      ,0 
      ,0 
      
     -- EventSubject 
     INSERT INTO RSSOSS.USMC.EventSubject 
      (Id 
      ,EventId 
      ,SubjectId 
      ,SubjectName) 
     SELECT 
      NEWID() 
      ,@NewEventId 
      ,@ID 
      ,( SELECT TOP 1  
        p.LastName + ' ' + p.FirstName  
       FROM  
        Prospec.ng.USMC.Person p 
        INNER JOIN Prospec.ng.USMC.Prospect pr 
         ON p.PersonId = pr.PersonId 
       WHERE 
        pr.ProspectId = @ID 
      ) 
      
     -- EventOwners 
     INSERT INTO RSSOSS.USMC.EventOwners 
        (ID 
        ,EventID 
        ,OwnerID 
        ,LastUpdateDate 
        ,LastUpadteUserID 
        ,CreatorID) 
     SELECT 
      NEWID() 
      ,@NewEventId 
      ,@Recrui.ngPersonID 
      ,GETDATE() 
      ,@Recrui.ngPersonID 
      ,@Recrui.ngPersonID 
 
      
     -- Event Person Visibility 
     INSERT INTO RSSOSS.USMC.EventPersonVisibility 
       (ID 
       ,EventId 
       ,Recrui.ngPersonId 
       ,LastUpdateDate 
       ,LastUpdateUserId) 
     SELECT 
      NEWID() 
      ,@NewEventId 
      ,@Recrui.ngPersonID 
      ,GETDATE() 
      ,@Recrui.ngPersonID 
 
     COMMIT TRANSACTION 
    END 
   END 
  END 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 INSERT INTO Prospec.ng.USMC.Prospect( 
    ProspectId,  
    PersonId,  
    Recrui.ngOrganiza.onId,  
    Recrui.ngPersonId,     
    Gradua.onYear, 
    ProspectDisposi.onId,  
    PACCreateDate,  
    Ac.vity,  
    Ac.vityDate,  
    CareerDecision,  
    Ini.alContactType,  
    ASVABDate,  
    Source,  
    NoChildLe.BehindOptIn,  
    Suppression,  
    ContactTimeIndicator,  
    Note,  
    LastUpdateDate,  
    LastUpdateUserId,  
    SubSta.onType,  
    NWAId, 
    AcpApplicantId, 
    TDQRemark, 
    PriorityCode, 
    SourceDual, 
    SourceDualDesc, 
    PPC, 
    ReferralSSN, 
    CategoryCode, 
    Interest, 
    ProgramType, 
    ProgramCode, 
    ReferOSODate, 
    Ini.alContactDate, 
    MonthWorkFor, 
    BirthDocumentCode, 
    DriverLicenseNumber, 
    DriverLicenseState, 
    DriverLicenseExp, 
    HasDriversLicense, 
    HasDrugUse, 
    HasMoralO.ense, 
    HasPhysicalProblems, 
    WaverInfo, 
    Expira.onDate, 
    RecruiterComments, 
    SncoicComments, 
    AvablTime, 
    AvablLoca.on, 
    AvablOtherDesc, 
    StsChgDepcy, 
    StsChgEdu, 
    StsChgPhys, 
    StsChgDrug, 
    StsChgMoral, 
    StsChgAtrRisk, 
    StsChgOther, 
    StsChgOtherDesc, 
    StsChgRemark, 
    DigitalCommunica.on 
    ) 
  VALUES (@ID,  
    @PersonID,  
    @Recrui.ngOrganiza.onID,  
    @Recrui.ngPersonID,     
    @Gradua.onYear, 
    @ProspectDisposi.onID,  
    @PACCreateDate,  
    @Ac.vity,  
    @Ac.vityDate,  
    @CareerDecision, 
    @Ini.alContactType,  
    @ASVABDate,  
    @Source,  
    @NoChildLe.BehindOptIn, 
    @Suppression, 
    @ContactTimeIndicator, 
    @Note, 
    GETDATE(), 
    @LastUpdateUserId, 
    @SubSta.onType,  
    @NWAId, 
    @AcpApplicantId, 
    @TDQRemark, 
    @PriorityCode, 
    @SourceDual, 
    @SourceDualDesc, 
    @PPC, 
    @ReferralSSN, 
    @CategoryCode, 
    @Interest, 
    @ProgramType, 
    @ProgramCode, 
    @ReferOSODate, 
    @Ini.alContactDate, 
    @MonthWorkFor, 
    @BirthDocumentCode, 
    @DriverLicenseNumber, 
    @DriverLicenseState, 
    @DriverLicenseExp, 
    @HasDriversLicense, 
    @HasDrugUse, 
    @HasMoralO.ense, 
    @HasPhysicalProblems, 
    @WaverInfo, 
    @Expira.onDate, 
    @RecruiterComments, 
    @SncoicComments, 
    @AvablTime, 
    @AvablLoca.on, 
    @AvablOtherDesc, 
    @StsChgDepcy, 
    @StsChgEdu, 
    @StsChgPhys, 
    @StsChgDrug, 
    @StsChgMoral, 
    @StsChgAtrRisk, 
    @StsChgOther, 
    @StsChgOtherDesc, 
    @StsChgRemark, 
    @DigitalCommunica.on 
    ) 
 
 
 
END 
 
 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>