<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetBadQsn]" directorySegmentName="seg_16" id="4E18CEB5-EC56-C2F5-1358-F1CD06A2816C">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:47 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[As 
  
 
SET NOCOUNT ON 
SET ANSI_WARNINGS OFF 
 
 
 
-- UPDATE THE DATETIME COLUMN 
UPDATE TEMP_QSN 
SET DATEANDTIME = CONVERT(VARCHAR(20), GetDate(), 109) 
 
--- CHECK FOR BAD PIVDATES 
--IF NOT EXISTS (SELECT 1 FROM BAD_EDUC_TIER) 
BEGIN  
 PRINT 'UPDATE RECORDS WITH BAD PIVDATES' 
 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_PIVDATE = 1  
 WHERE ISDATE(PIVDATE) = 0 --ISDATE(PIVDATE) ^ 1  
 
END 
 
 
-- CHECK FOR MOSs WHICH ARE NOT ALREADY IN MCRISS 
 
BEGIN  
 PRINT 'UPDATE RECORDS WITH EXISTING MOSs' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_MOS = dbo.IsBadMos(IMOS) 
  
END 
 
 
-- CHECK FOR QSNs WHICH ARE ALREADY IN MCRISS 
 
BEGIN  
 PRINT 'UPDATE RECORDS WITH FOR EXISTING QSNs' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_QSNID = dbo.IsBadQsnIds(QSN) 
END 
 
 
-- CHECK FOR BAD RESRUC 
BEGIN 
 PRINT 'UPDATE RECORDS BAD RESRUC' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_RESRUC = dbo.IsBadResRuc(RESRUC) 
END 
 
 
-- CHECK FOR BAD DISTRICT 
BEGIN 
 PRINT 'UPDATE RECORDS BAD DISTRICT' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_DISTRICT = 1 
 WHERE DISTRICT NOT IN ('01','02','03','04','05','06','07','08','09','10','11','12') 
END 
 
-- CHECK FOR BAD RESRUC 
BEGIN 
 PRINT 'UPDATE RECORDS BAD RS' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_RS = dbo.IsBadRS(RS) 
END 
 
 
-- CHECK FOR BAD SEX COLUMN 
BEGIN 
 PRINT 'UPDATE RECORDS BAD SEX' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_SEX = 1 
 WHERE UPPER(SEX) NOT IN ('M','F') 
END 
 
 
-- CHECK FOR BAD MSC 
BEGIN 
 PRINT 'UPDATE RECORDS BAD MSC' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_MSC = 1 
 WHERE UPPER(MSC_CODE) IS NULL 
END 
 
 
-- CHECK FOR BAD IIADT 
BEGIN 
 PRINT 'UPDATE RECORDS BAD IIADT' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_IIADT = 1 
 WHERE IIADT IS NULL 
END 
 
 
-- CHECK FOR BAD COMPONENT CODE 
BEGIN 
 PRINT 'UPDATE RECORDS BAD COMPONENT CODE' 
 
 UPDATE MCRISS..TEMP_QSN 
 SET ERROR_COMPCODE = dbo.IsBadCompCode(COMPCODE) 
END 
 
 
-- POPULATE TEMP_BAD_QSN 
 
INSERT INTO TEMP_BAD_QSN 
SELECT * FROM TEMP_QSN  
WHERE ERROR_PIVDATE = 1 OR  
ERROR_MOS = 1 OR  
ERROR_QSNID = 1 OR  
ERROR_RESRUC = 1 OR  
ERROR_DISTRICT = 1 OR  
ERROR_RS = 1 OR  
ERROR_SEX = 1 OR  
ERROR_MSC = 1 OR  
ERROR_IIADT = 1 OR  
ERROR_COMPCODE = 1 
 
 
 
-- REMOVE INVALID QSNs FROM TEMP_QSN 
 
DELETE TEMP_QSN 
WHERE ERROR_PIVDATE = 1 OR  
ERROR_MOS = 1 OR  
ERROR_QSNID = 1 OR  
ERROR_RESRUC = 1 OR  
ERROR_DISTRICT = 1 OR  
ERROR_RS = 1 OR  
ERROR_SEX = 1 OR  
ERROR_MSC = 1 OR  
ERROR_IIADT = 1 OR  
ERROR_COMPCODE = 1 
 
-- MOVE GOOD QSN TO READY_TO_IMPORT_QSN TABLE 
 
INSERT INTO READY_TO_IMPORT_QSN 
SELECT * FROM TEMP_QSN 
 
 
DELETE TEMP_QSN 
--WHERE ERROR_PIVDATE = 1 OR ERROR_MOS = 1 OR ERROR_QSNID = 1 
 
 
-- UPDATE THE FISCAL YEAR COLUMN DERIVED FROM THE FIRST 4 DIGITS OF THE QSN 
UPDATE READY_TO_IMPORT_QSN 
SET FISCAL_YEAR = (SELECT TOP 1 SUBSTRING(QSN, 1, 4) FROM READY_TO_IMPORT_QSN) 
 
 
-- CHECK THE PIVDATES ARE WITHIN THE FISCAL YEAR 
UPDATE READY_TO_IMPORT_QSN  
SET ERROR_PIVDATE = 1 
WHERE dbo.sp_mg_GetFY(pivdate) != (SUBSTRING(QSN, 1, 4)) 
 
INSERT INTO TEMP_BAD_QSN 
SELECT * FROM READY_TO_IMPORT_QSN WHERE ERROR_PIVDATE = 1 
 
 
-- CLEAN UP READY_TO_IMPORT_QSN TABLE 
DELETE READY_TO_IMPORT_QSN  
WHERE dbo.sp_mg_GetFY(pivdate) != (SUBSTRING(QSN, 1, 4)) 
 
-- UPDATE THE ASSIGNED_ORG_ID COLUMN IN TEMP_QSN 
 
UPDATE READY_TO_IMPORT_QSN 
SET ASSIGNED_ORG_ID = RO.ORGANIZATION_ID 
FROM MCRISS..RECRUITING_ORGANIZATION RO, READY_TO_IMPORT_QSN TQ 
WHERE RO.MCC_CODE = TQ.RS 
 
-- UPDATE THE RECRUITING_ORGANIZATION_ID COLUMN IN TEMP_QSN 
UPDATE READY_TO_IMPORT_QSN 
SET RECRUITING_ORGANIZATION_ID = RO.ORGANIZATION_ID 
FROM RECRUITING_ORGANIZATION RO, READY_TO_IMPORT_QSN TQ 
WHERE RO.MCC_CODE = TQ.RS 
 
-- UPDATE THE MCC_CODE COLUMN IN TEMP_QSN 
UPDATE READY_TO_IMPORT_QSN 
SET MCC_CODE = MO.PRESENT_MCC 
FROM READY_TO_IMPORT_QSN TQ, MARINE_ORGANIZATION MO 
WHERE TQ.RESRUC = MO.PRESENT_RUC 
 
 
-- UPDATE THE COMPONENT CODE TO K4 6X2 AS DEFAULT 
--UPDATE READY_TO_IMPORT_QSN 
--SET COMPCODE = 'K4' 
 
 
SET NOCOUNT OFF 
SET ANSI_WARNINGS ON]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>