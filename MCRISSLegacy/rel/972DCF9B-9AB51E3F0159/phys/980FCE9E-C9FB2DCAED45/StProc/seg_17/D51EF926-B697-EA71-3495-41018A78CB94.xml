<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetEnlistedMEPSView]" directorySegmentName="seg_17" id="D51EF926-B697-EA71-3495-41018A78CB94">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@ScheduleDate date.me, 
 @OrgID  int = NULL, 
 @SortBy  int = NULL, 
 @FilterBy bit = 0  
AS 
  
SET NOCOUNT ON 
 
-- If NULL, assume MCRC level (OrgID 900) 
SET @OrgID = COALESCE(@OrgID, 900) 
 
/* 
------------------------------------------------------------------------------ 
--- Create Temp Tables --- 
 
The #SUBORGS table will be populated with all OrgIDs that are in the child hierarchy 
of the input @OrgID.  USED is a bit that is necessary for popula.ng the data 
to .ag whether an OrgID's children have been joined yet.  This is to make 
sure the direct children of an OrgID are only inserted once. 
 
The #IDS table is used only to temporarily store the OrgIDs that children are being 
retrieved for.  Because it is an itera.ve process, this table is necessary so that 
we know which OrgIDs to toggle the USED .ag on in the #SUBORGS table. 
------------------------------------------------------------------------------ 
*/ 
CREATE TABLE #SUBORGS (ORG_ID int NOT NULL, ORG_TYPE varchar(3), USED bit NOT NULL) 
CREATE TABLE #IDS (ORG_ID int NOT NULL) 
 
-- Seed the temp table with the input OrgID 
INSERT INTO #SUBORGS 
SELECT ORGANIZATION_ID, 
 ORGANIZATION_TYPE, 
 0 
FROM RECRUITING_ORGANIZATION 
WHERE ORGANIZATION_ID = CASE WHEN @FilterBy = 1 THEN @OrgID ELSE 900 END 
 
-- Con.nue processing un.l we have goten to the RS level 
WHILE (SELECT COUNT(1) FROM #SUBORGS WHERE USED = 0 AND ORG_TYPE = 'RS') = 0 
 BEGIN 
  
 -- Save all OrgIDs in the #SUBORGS table that we haven't goten children for yet. 
 INSERT INTO #IDS 
 SELECT ORG_ID 
 FROM #SUBORGS 
 WHERE USED = 0 
  
 -- Insert new children (with Used .ag = 0) into the #SUBORGS table. 
 INSERT INTO #SUBORGS 
 SELECT OM.CHILD_ORGANIZATION_ID, RO.ORGANIZATION_TYPE, 0 
 FROM ORGANIZATION_MAP OM INNER JOIN #SUBORGS SO ON OM.PARENT_ORGANIZATION_ID = SO.ORG_ID AND SO.USED = 0 
  INNER JOIN RECRUITING_ORGANIZATION RO ON OM.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID 
  
 -- Set the USED .ag to 1 for the OrgIDs that we just processed. 
 UPDATE #SUBORGS 
 SET USED = 1 
 WHERE ORG_ID IN (SELECT * FROM #IDS) 
  
 -- No need to save the OrgIDs that we just got children for.  They will remain in the #SUBORGS table 
 -- and are now marked as used/processed. 
 DELETE FROM #IDS 
END 
 
CREATE TABLE #MEPS_VIEW  
 (PERSON_ID INT, NWA_ID INT, CONTRACT_ID INT,  
 PERSON_NAME VARCHAR(62), GENDER CHAR (1), RSS VARCHAR(45),  
 EDUCATION VARCHAR(10), [QT/GT] VARCHAR(10), [MENTAL RESULT] VARCHAR(5), MEDICAL_EXAM_TYPE CHAR(4),  
 PROCESSING_NOTES VARCHAR(250), PROCESSING_STATUS VARCHAR(15),  
 SSN CHAR(9), CATEGORY_CODE VARCHAR(15), PROJECTED_SHIP_MONTH INT, 
 [(QT/GT)DATE] DATETIME, [(DEP)RESULT] VARCHAR(3), [(SHIP)RESULT] VARCHAR(3), 
 [HOTEL-TRANSP-LAST MEPS] VARCHAR(50), STATUS_DESCRIPTION VARCHAR(40), DISPOSITION_DESCRIPTION VARCHAR(40), 
 SCHEDULE_ID INT, MEPS_ORGANIZATION_ID INT, RSS_ID INT,  
 RS VARCHAR(45), MEDICAL_MEPS_ID INT, MEDICAL_EXAM_DATE DATETIME,  
 ASVAB_MEPS_ID INT, ASVAB_DATE DATETIME, SORT_ORDER INT, SORT_ORDER_2 INT, 
  MEPS_NAME VARCHAR(20)) 
 
INSERT INTO #MEPS_VIEW   
 (PERSON_ID, NWA_ID, PERSON_NAME, GENDER, RSS, PROCESSING_NOTES, PROCESSING_STATUS,  
 SSN, CATEGORY_CODE, PROJECTED_SHIP_MONTH,  
 [MENTAL RESULT], [(DEP)RESULT], [(SHIP)RESULT],  
 [HOTEL-TRANSP-LAST MEPS], STATUS_DESCRIPTION, DISPOSITION_DESCRIPTION,  
 SCHEDULE_ID, MEPS_ORGANIZATION_ID, RSS_ID, RS, MEPS_NAME) 
SELECT  
 P.PERSON_ID, NWA.NWA_ID,  
 RTRIM(P.LAST_NAME) + SPACE(1) + RTRIM(P.FIRST_NAME) + SPACE(1) +  
  COALESCE(P.LEGAL_MIDDLE_NAME, SPACE(0)) AS PERSON_NAME, 
 MC.GENDER_CODE,  
 RSS.NAME AS RSS, 
 MS.PROCESSING_NOTES,  
 PS.PROCESSING_STATUS_DESCRIPTION AS PROCESSING_STATUS, 
 P.SOCIAL_SECURITY_NUMBER, 
 CASE CS.STATUS_TYPE 
  WHEN 'E' THEN  
   CASE NWA.CATEGORY_CODE   
    WHEN 'R' THEN 'Regular' 
    WHEN 'G' THEN 'Reserve-Ground' 
    WHEN 'A' THEN 'Reseve-Air' 
    WHEN 'P' THEN 'Prior-Service' 
    WHEN 'O' THEN 'President''s Own' 
    ELSE SPACE(0) 
   END  
  WHEN 'O' THEN COALESCE(CC.COMPONENT_DESCRIPTION, SPACE(0)) 
  ELSE SPACE(0) 
 END AS CATEGORY_CODE, 
 NWA.PROJECTED_SHIP_MONTH,  
 [MENTAL RESULT] =  CASE   
    WHEN MS.ASVAB = 'Y' THEN 'ASVAB' 
    WHEN MS.SPECIAL_EXAM = 'Y' THEN MS.SPECIAL_EXAM_TYPE 
    ELSE SPACE(0) 
    END, 
 CASE MS.CONTRACT 
  WHEN 'Y' THEN 'YES' 
  ELSE 'NO' 
 END AS [(DEP)RESULT], 
 CASE MS.SHIP  
  WHEN 'Y' THEN 'YES' 
  ELSE 'NO' 
 END AS [(SHIP)RESULT], 
 COALESCE(MS.LODGING_REQUIRED, SPACE(0)) + '-' +  
  COALESCE(MS.TRANSPORTATION_REQUIRED, SPACE(0)) + '-' AS [HOTEL-TRANSP-LAST MEPS], 
 SD.STATUS_DESCRIPTION, 
 SD.DISPOSITION_DESCRIPTION, 
 MS.SCHEDULE_ID,  
 MS.MEPS_ORGANIZATION_ID,  
 RSS.ORGANIZATION_ID AS RSS_ID, 
 RS.NAME AS RS, 
 MOL.MEPS_NAME 
FROM 
 MEPS_SCHEDULE MS INNER JOIN NWA ON  
  (MS.NWA_ID = NWA.NWA_ID AND 
  NWA.NWA_ID = dbo.GetMaxNWAIDByDateDeclared(NWA.MARINE_CANDIDATE_ID, NWA.NWA_DECLARED_DATE) AND 
  NWA.NWA_ID = (SELECT MAX(N2.NWA_ID) FROM NWA N2  
    WHERE N2.MARINE_CANDIDATE_ID = NWA.MARINE_CANDIDATE_ID AND 
    DATEDIFF(DAY, @ScheduleDate, N2.NWA_DECLARED_DATE) <= 0) AND 
  MS.MEPS_ORGANIZATION_ID = CASE WHEN @FilterBy = 0 THEN @OrgID ELSE MS.MEPS_ORGANIZATION_ID END AND  
  MS.PROCESSING_DATE = @ScheduleDate AND  
  MS.DELETED != 'Y') 
 INNER JOIN PROCESSING_STATUS PS ON MS.PROCESSING_STATUS = PS.PROCESSING_STATUS_CODE 
 INNER JOIN MEPS_ORGANIZATION_LOOKUP MOL ON MS.MEPS_ORGANIZATION_ID = MOL.MEPS_ORGANIZATION_ID 
 INNER JOIN RECRUITING_ORGANIZATION RSS ON NWA.ORGANIZATION_OF_RECORD_ID = RSS.ORGANIZATION_ID 
 INNER JOIN ORGANIZATION_MAP OM ON RSS.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID 
 INNER JOIN RECRUITING_ORGANIZATION RS ON OM.PARENT_ORGANIZATION_ID = RS.ORGANIZATION_ID 
 INNER JOIN #SUBORGS SO ON 
  (RS.ORGANIZATION_ID = SO.ORG_ID AND 
  SO.ORG_TYPE = 'RS') 
 INNER JOIN MARINE_CANDIDATE MC ON NWA.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID 
 INNER JOIN PERSON P ON MC.MARINE_CANDIDATE_ID = P.PERSON_ID 
 INNER JOIN CANDIDATE_STATUS CS ON  
  (NWA.NWA_ID = CS.NWA_ID AND 
  CS.CANDIDATE_STATUS_ID = dbo.GetMaxStatusIDByE.ec.veDate(CS.NWA_ID, @ScheduleDate)) 
 INNER JOIN STATUS_DISPOSITION SD ON  
  (CS.STATUS_TYPE = SD.STATUS_TYPE AND  
  CS.STATUS_CODE = SD.STATUS_CODE AND  
  CS.DISPOSITION_CODE = SD.DISPOSITION_CODE) 
 LEFT OUTER JOIN COMPONENT_CODE CC ON NWA.OFFICER_COMPONENT_CODE = CC.COMPONENT_CODE 
 
--- EDUCATION DATA 
UPDATE 
 #MEPS_VIEW 
SET 
 EDUCATION = COALESCE(CE.EDUCATION_LEVEL, SPACE(0)) + COALESCE(CE.EDUCATION_CODE, SPACE(0)) 
FROM 
 #MEPS_VIEW MV INNER JOIN CANDIDATE_EDUCATION CE ON  
  (MV.PERSON_ID = CE.MARINE_CANDIDATE_ID AND 
  CE.SCHOOL_END_DATE = dbo.GetMaxSchoolEndDate(CE.MARINE_CANDIDATE_ID) AND 
  CE.EDUCATION_LEVEL = (SELECT MAX(CE2.EDUCATION_LEVEL) FROM CANDIDATE_EDUCATION CE2 
     WHERE CE2.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID)) 
 
 
--- CONTRACT DATA 
UPDATE 
 #MEPS_VIEW 
SET 
 CONTRACT_ID = C.CONTRACT_ID 
FROM 
 #MEPS_VIEW MV INNER JOIN CONTRACT C ON MV.NWA_ID = C.NWA_ID 
 
 
--- MEDICAL DATA 
UPDATE 
 #MEPS_VIEW 
SET 
 MEDICAL_EXAM_TYPE = CME.MEDICAL_EXAM_TYPE, 
 MEDICAL_EXAM_DATE = CME.MEDICAL_EXAM_DATE, 
 MEDICAL_MEPS_ID = CME.MEPS_ORGANIZATION_ID 
FROM 
 #MEPS_VIEW MV INNER JOIN CANDIDATE_MEDICAL_EXAM CME ON  
  (MV.PERSON_ID = CME.MARINE_CANDIDATE_ID AND  
  CME.MEDICAL_EXAM_DATE = dbo.GetMaxMedicalExamDate(CME.MARINE_CANDIDATE_ID, NULL)) 
 
--- ASVAB DATA 
UPDATE 
 #MEPS_VIEW 
SET 
 [QT/GT] = CONVERT(VARCHAR(4), CA.AFQT_SCORE) + '/' + CONVERT(VARCHAR(4), CA.GT_SCORE), 
 [(QT/GT)DATE] = CA.ASVAB_DATE,  
 ASVAB_DATE = CA.ASVAB_DATE, 
 ASVAB_MEPS_ID = CA.MEPS_ORGANIZATION_ID 
FROM 
 #MEPS_VIEW MV INNER JOIN CANDIDATE_ASVAB CA ON  
  (MV.PERSON_ID = CA.MARINE_CANDIDATE_ID AND  
  CA.ASVAB_DATE = dbo.GetMaxASVABDate(CA.MARINE_CANDIDATE_ID)) 
 
 
--- UPDATE LAST MEPS  
UPDATE 
 #MEPS_VIEW 
SET 
 [HOTEL-TRANSP-LAST MEPS] = [HOTEL-TRANSP-LAST MEPS] +  
 CASE  
  WHEN DATEDIFF(DAY, MV.MEDICAL_EXAM_DATE, MV.ASVAB_DATE) >= 0 
  THEN COALESCE((SELECT MOL.MEPS_NAME FROM MEPS_ORGANIZATION_LOOKUP MOL  
    WHERE MOL.MEPS_ORGANIZATION_ID = MV.ASVAB_MEPS_ID), SPACE(0)) 
  ELSE COALESCE((SELECT MOL.MEPS_NAME FROM MEPS_ORGANIZATION_LOOKUP MOL  
    WHERE MOL.MEPS_ORGANIZATION_ID = MV.MEDICAL_MEPS_ID), SPACE(0)) 
 END 
FROM 
 #MEPS_VIEW MV 
 
--- RETURN THE MEPS VIEW 
SELECT 
 PERSON_ID, NWA_ID, CONTRACT_ID, 
 PERSON_NAME, GENDER, RSS,  
 COALESCE(EDUCATION, SPACE(0)) AS ED,  
 COALESCE([QT/GT], SPACE(0)) AS [QT/GT], 
 COALESCE([MENTAL RESULT], SPACE(0)) AS [MENTAL RESULT],  
 COALESCE(MEDICAL_EXAM_TYPE, SPACE(0)) AS MEDICAL_EXAM_TYPE,  
 COALESCE(PROCESSING_NOTES, SPACE(0)) AS PROCESSING_NOTES,  
 PROCESSING_STATUS,  
 SSN,  
 COALESCE(CATEGORY_CODE, SPACE(0)) AS CATEGORY_CODE, 
 COALESCE(PROJECTED_SHIP_MONTH, MONTH(GETDATE())) AS PROJECTED_SHIP_MONTH, 
 COALESCE(CONVERT(CHAR(11), [(QT/GT)DATE], 106), SPACE(0)) AS [(QT/GT)DATE], 
 [(DEP)RESULT],  
 [(SHIP)RESULT],  
 [HOTEL-TRANSP-LAST MEPS], 
 STATUS_DESCRIPTION,  
 DISPOSITION_DESCRIPTION, 
 SCHEDULE_ID,  
 MEPS_NAME,  
 RSS_ID, 
 RS 
FROM  
 #MEPS_VIEW 
ORDER BY 
 CASE @SortBy 
  WHEN 1 THEN PERSON_NAME 
  WHEN 2 THEN  
   CASE PROCESSING_STATUS 
    WHEN 'PENDING' THEN '1' 
    WHEN 'PROJECT TO MIRS' THEN '2' 
    WHEN 'SHOW' THEN '3' 
    WHEN 'NO SHOW' THEN '4' 
   END 
  WHEN 3 THEN 
   CASE GENDER 
    WHEN 'M' THEN '1' 
    WHEN 'F' THEN '2' 
   END 
  WHEN 4 THEN RSS 
  WHEN 5 THEN STATUS_DESCRIPTION 
  WHEN 6 THEN MEPS_NAME 
 END 
 
--- CLEAN UP 
DROP TABLE #MEPS_VIEW  
DROP TABLE #SUBORGS 
DROP TABLE #IDS 
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>