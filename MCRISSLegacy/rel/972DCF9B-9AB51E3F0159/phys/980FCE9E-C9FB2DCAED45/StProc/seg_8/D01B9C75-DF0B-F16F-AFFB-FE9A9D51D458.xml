<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetOSOStandings]" directorySegmentName="seg_8" id="D01B9C75-DF0B-F16F-AFFB-FE9A9D51D458">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[( 
 @FY int = null 
) 
AS 
 
-- If FY was not provided, calculate based on current date 
IF(@FY IS NULL) 
BEGIN 
 IF(DATEPART(month, GetDate()) > 9) 
  SET @FY = DATEPART(year, GetDate()) + 1 
 ELSE 
  SET @FY = DATEPART(year, GetDate()) 
END 
 
DECLARE @OsoYTDStart date.me 
DECLARE @OsoYTDEnd date.me 
 
-- The O.cer Fiscal Year Starts on 7/1 
SET @OsoYTDStart = '7/1/' + CONVERT(char(4), @FY-1) 
 
-- The O.cer Fiscal Year Ends on 6/30 
SET @OsoYTDEnd = '6/30/' + CONVERT(char(4), @FY) 
 
SET NOCOUNT ON 
 
CREATE TABLE #OSO_NATIONAL_TICKET_LIST ( 
 RECRUITER_ID INT NULL,  
 RECRUITER_NAME VARCHAR(100) NULL,  
 OSS VARCHAR(50) NULL,  
 SubmitedDistrict int NULL, 
 DistrictSelected int NULL, 
 ReportedToTraining int NULL, 
 GraduatedOCS int NULL) 
 
INSERT INTO #OSO_NATIONAL_TICKET_LIST (RECRUITER_ID, RECRUITER_NAME, OSS) 
SELECT  
 RP.RECRUITING_PERSON_ID, 
 LTRIM(RTRIM(RP.RANK_CODE)) +  
 CASE  
  WHEN LEN(RP.RANK_CODE) > 0 THEN SPACE(1) 
  ELSE SPACE(0)  
 END +  
 COALESCE(LTRIM(RTRIM(P.LAST_NAME)) + ', ', SPACE(0)) +  
 COALESCE(LTRIM(RTRIM(P.FIRST_NAME)), SPACE(0)) +  
 COALESCE(SPACE(1) + LTRIM(RTRIM(P.LEGAL_MIDDLE_NAME)), SPACE(0)) AS RECRUITER_NAME, 
 LTRIM(RTRIM(OSS.NAME)) + ', ' + LTRIM(RTRIM(OSS.STATE_CODE))  AS OSS 
FROM 
 RECRUITING_PERSON RP WITH (NOLOCK)  
 INNER JOIN PERSON P ON RP.RECRUITING_PERSON_ID = P.PERSON_ID 
 INNER JOIN RECRUITING_ORGANIZATION OSS ON RP.ORGANIZATION_ID = OSS.ORGANIZATION_ID 
WHERE  
 (RP.TOUR_END_DATE IS NULL OR RP.TOUR_END_DATE BETWEEN @OsoYTDStart AND @OsoYTDEnd) 
 AND 
 (RP.TOUR_BEGIN_DATE IS NULL OR RP.TOUR_BEGIN_DATE < @OsoYTDEnd) 
 AND  
 RP.RECRUITING_ROLE_ID = 'O' 
  
--GET MARINES WHO ARE DISTRICT SELECTED AND SUBMITTED FOR THIS DATE AND RECRUITER LIST 
SELECT OC.CONTRACT_ID, OC.CONTRACT_BEGIN_DATE, CS.STATUS_TYPE, CS.STATUS_CODE, CS.DISPOSITION_CODE, 
    N.RECRUITER_OF_RECORD_ID, N.MARINE_CANDIDATE_ID, N.OFFICER_COMPONENT_CODE, N.NWA_ID      
INTO #DISTRICT 
FROM  
 OFFICER_CONTRACT OC  
 INNER JOIN NWA N ON OC.NWA_ID = N.NWA_ID 
 INNER JOIN CANDIDATE_STATUS CS ON N.NWA_ID = CS.NWA_ID  
 INNER JOIN MARINE_CANDIDATE MC ON  MC.MARINE_CANDIDATE_ID = N.MARINE_CANDIDATE_ID 
 INNER JOIN #OSO_NATIONAL_TICKET_LIST L ON N.RECRUITER_OF_RECORD_ID = L.RECRUITER_ID 
WHERE  
 CS.STATUS_TYPE = 'O' AND CS.STATUS_CODE = 'B'  
 AND 
 (CS.DISPOSITION_CODE = 'R' OR CS.DISPOSITION_CODE = 'W') 
 AND 
 CS.STATUS_EFFECTIVE_DATE BETWEEN @OsoYTDStart AND @OsoYTDEnd 
 
  
--GET NWA SUBMITTED TO DISTRICT WHO ARE NOT RESERVIST. EXCLUDE RECORDS FOR THE SAME MARINE ORG COMBO 
SELECT CONTRACT_ID, STATUS_TYPE, STATUS_CODE, DISPOSITION_CODE, RECRUITER_OF_RECORD_ID, 
   NWA_ID, D.MARINE_CANDIDATE_ID, CONTRACT_BEGIN_DATE  
INTO #SUBMITTED_SELECTED 
FROM  
 #DISTRICT D 
WHERE   
 D.DISPOSITION_CODE = 'R'   
AND D.CONTRACT_BEGIN_DATE =  
         (SELECT MIN(CONTRACT_BEGIN_DATE) 
       FROM #DISTRICT DD                  
       WHERE DD.MARINE_CANDIDATE_ID = D.MARINE_CANDIDATE_ID 
       AND DD.OFFICER_COMPONENT_CODE != '1E' 
       AND DD.DISPOSITION_CODE = 'R' 
       AND DD.RECRUITER_OF_RECORD_ID = D.RECRUITER_OF_RECORD_ID) 
AND 
 D.OFFICER_COMPONENT_CODE NOT IN ('1E') 
 
 
 
--GET NWA SUBMITTED TO DISTRICT WHO ARE  RESERVIST. EXCLUDE RECORDS FOR THE SAME MARINE ORG COMBO 
INSERT INTO #SUBMITTED_SELECTED 
SELECT CONTRACT_ID, STATUS_TYPE, STATUS_CODE, DISPOSITION_CODE, RECRUITER_OF_RECORD_ID, 
    NWA_ID, D.MARINE_CANDIDATE_ID, CONTRACT_BEGIN_DATE  
FROM  
 #DISTRICT D 
WHERE   
 D.DISPOSITION_CODE = 'R'   
AND D.CONTRACT_BEGIN_DATE =  
         (SELECT MIN(CONTRACT_BEGIN_DATE) 
       FROM #DISTRICT DD                  
       WHERE DD.MARINE_CANDIDATE_ID = D.MARINE_CANDIDATE_ID 
       AND DD.OFFICER_COMPONENT_CODE = '1E' 
       AND DD.DISPOSITION_CODE = 'R' 
       AND DD.RECRUITER_OF_RECORD_ID = D.RECRUITER_OF_RECORD_ID) 
AND 
 D.OFFICER_COMPONENT_CODE IN ('1E') 
 
  
--GET NWA SELECTED TO DISTRICT WHO ARE NOT RESERVIST. EXCLUDE RECORDS FOR THE SAME MARINE ORG COMBO 
INSERT INTO #SUBMITTED_SELECTED 
SELECT CONTRACT_ID, STATUS_TYPE, STATUS_CODE, DISPOSITION_CODE, RECRUITER_OF_RECORD_ID, 
   NWA_ID, D.MARINE_CANDIDATE_ID, CONTRACT_BEGIN_DATE  
FROM  
 #DISTRICT D 
WHERE   
 D.DISPOSITION_CODE = 'W'   
AND D.CONTRACT_BEGIN_DATE =  
         (SELECT MIN(CONTRACT_BEGIN_DATE) 
       FROM #DISTRICT DD                  
       WHERE DD.MARINE_CANDIDATE_ID = D.MARINE_CANDIDATE_ID 
       AND DD.OFFICER_COMPONENT_CODE != '1E' 
       AND DD.DISPOSITION_CODE = 'W' 
       AND DD.RECRUITER_OF_RECORD_ID = D.RECRUITER_OF_RECORD_ID) 
AND 
 D.OFFICER_COMPONENT_CODE NOT IN ('1E') 
  
  
--GET NWA SELECTED TO DISTRICT WHO ARE  RESERVIST. EXCLUDE RECORDS FOR THE SAME MARINE ORG COMBO 
INSERT INTO #SUBMITTED_SELECTED 
SELECT CONTRACT_ID, STATUS_TYPE, STATUS_CODE, DISPOSITION_CODE, RECRUITER_OF_RECORD_ID, 
  NWA_ID, D.MARINE_CANDIDATE_ID, CONTRACT_BEGIN_DATE  
FROM  
 #DISTRICT D 
WHERE   
 D.DISPOSITION_CODE = 'W'   
AND D.CONTRACT_BEGIN_DATE =  
         (SELECT MIN(CONTRACT_BEGIN_DATE) 
       FROM #DISTRICT DD                  
       WHERE DD.MARINE_CANDIDATE_ID = D.MARINE_CANDIDATE_ID 
       AND DD.OFFICER_COMPONENT_CODE = '1E' 
       AND DD.DISPOSITION_CODE = 'W' 
       AND DD.RECRUITER_OF_RECORD_ID = D.RECRUITER_OF_RECORD_ID) 
AND 
 D.OFFICER_COMPONENT_CODE IN ('1E') 
 
 
 
 
--- COUNT THE NUMBER OF CONTRACTS FOR EACH OSO 
UPDATE  
 #OSO_NATIONAL_TICKET_LIST 
SET 
 SubmitedDistrict =  
  ( 
  SELECT COUNT(CONTRACT_ID)  
  FROM  
   #SUBMITTED_SELECTED DC   
  WHERE    
   DC.STATUS_TYPE = 'O' AND DC.STATUS_CODE = 'B' AND DC.DISPOSITION_CODE = 'R' 
   AND 
   DC.RECRUITER_OF_RECORD_ID = L.RECRUITER_ID        
  ), 
 DistrictSelected =  
  ( 
  SELECT COUNT(CONTRACT_ID)  
  FROM  
   #SUBMITTED_SELECTED DC 
  WHERE    
   DC.STATUS_TYPE = 'O' AND DC.STATUS_CODE = 'B' AND DC.DISPOSITION_CODE = 'W' 
   AND 
   DC.RECRUITER_OF_RECORD_ID = L.RECRUITER_ID    
  ), 
 ReportedToTraining = 
  ( 
  SELECT COUNT(C.CONTRACT_ID)  
  FROM  
   OFFICER_CONTRACT C  
   INNER JOIN NWA N ON C.NWA_ID = N.NWA_ID 
   INNER JOIN OCS O ON N.NWA_ID = O.NWA_ID 
   INNER JOIN OCS_CLASS OC ON O.OCS_CLASS_ID = OC.CLASS_ID    
  WHERE 
   N.RECRUITER_OF_RECORD_ID = L.RECRUITER_ID  
   AND  
   OC.FISCAL_YEAR = @FY  
   AND  
   OC.TRAINING_TYPE_CODE != 'PLCSR' -- BIZ: Do not count the PLC Senior class. 
   AND 
   O.CLASS_RESULT_CODE IN ('I','D','C') -- IN TRAINING, TRAINING DROP, or COMPLETE 
  ),          
 GraduatedOCS = 
  ( 
  SELECT COUNT(C.CONTRACT_ID)  
  FROM  
   OFFICER_CONTRACT C  
   INNER JOIN NWA N ON C.NWA_ID = N.NWA_ID 
   INNER JOIN CANDIDATE_STATUS CS ON N.NWA_ID = CS.NWA_ID  
   INNER JOIN OCS O ON N.NWA_ID = O.NWA_ID 
   INNER JOIN OCS_CLASS OC ON O.OCS_CLASS_ID = OC.CLASS_ID    
  WHERE 
   N.RECRUITER_OF_RECORD_ID = L.RECRUITER_ID  
   AND  
   OC.FISCAL_YEAR = @FY  
   AND  
   OC.TRAINING_TYPE_CODE != 'PLCSR' -- BIZ: Do not count the PLC Senior class. 
   AND 
   O.CLASS_RESULT_CODE = 'C' -- COMPLETE 
  ) 
FROM  
 #OSO_NATIONAL_TICKET_LIST L 
  
--- RETURN THE DATA 
SELECT  
 ROW_NUMBER() OVER(ORDER BY GraduatedOCS DESC, SubmitedDistrict DESC, DistrictSelected DESC, ReportedToTraining DESC, RECRUITER_NAME) as RowNumber, 
 RECRUITER_ID,  
 RECRUITER_NAME,  
 OSS,  
 SubmitedDistrict, 
 DistrictSelected, 
 ReportedToTraining, 
 GraduatedOCS 
FROM  
 #OSO_NATIONAL_TICKET_LIST  
ORDER BY  
 RowNumber 
 
--- CLEAN UP  
DROP TABLE #OSO_NATIONAL_TICKET_LIST 
DROP TABLE #DISTRICT 
DROP TABLE #SUBMITTED_SELECTED 
SET NOCOUNT OFF]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>