<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertYearInSightNote]" directorySegmentName="seg_8" id="9532C9CA-EC74-8C05-DC7B-5F1DA832A901">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@Organiza.onId int, 
 @SchoolYear int, 
 @SchoolMonth int, 
 @Ac.onDate date.me, 
 @YearInSightNote varchar(500) 
AS 
BEGIN 
 
DECLARE @Objec.veMonth date.me 
DECLARE @YearInSightID uniqueidentifier 
 
IF (@SchoolMonth IN (8,9,10,11,12)) 
BEGIN 
 SET @Objec.veMonth = CAST( CONVERT(varchar(4), @SchoolYear-1) + '-' + CONVERT(varchar(2), @SchoolMonth) + '-1' as Date.me); 
END 
ELSE 
BEGIN 
 SET @Objec.veMonth = CAST( CONVERT(varchar(4), @SchoolYear) + '-' + CONVERT(varchar(2), @SchoolMonth) + '-1' as Date.me); 
END 
 
SET @YearInSightID = (SELECT ID 
   FROM [RSSOSS].[USMC].[YearInSight]  
   WHERE Organiza.onId = @Organiza.onId  
   AND SchoolYear = @SchoolYear 
   AND Objec.veMonth = @Objec.veMonth) 
 
IF (@YearInSightID IS NULL) -- create a blank YearInSightRow with only the required columns 
BEGIN 
 SET @YearInSightID = newid() 
 INSERT INTO [RSSOSS].[USMC].[YearInSight] 
     ( 
   ID, 
   Organiza.onID, 
   SchoolYear, 
   Objec.veMonth 
     ) 
 VALUES 
   ( 
    @YearInSightID, 
    @Organiza.onID, 
    @SchoolYear, 
    @Objec.veMonth 
   ) 
END 
 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 
BEGIN 
 -- if @intCount = 0, then the Record does not exist.  INSERT. 
 INSERT INTO [RSSOSS].[USMC].[YearInSightNote] 
     ( 
   ID, 
   YearInSightID, 
   Ac.onDate, 
   Note 
   ) 
  VALUES 
     (  
   newid(), 
   @YearInSightID, 
   @Ac.onDate, 
   @YearInSightNote 
    ) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>