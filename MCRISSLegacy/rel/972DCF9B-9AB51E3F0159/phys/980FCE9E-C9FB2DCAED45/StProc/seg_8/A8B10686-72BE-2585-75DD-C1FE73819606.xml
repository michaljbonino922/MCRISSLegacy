<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[RCTAPI_GetPersonData]" directorySegmentName="seg_8" id="A8B10686-72BE-2585-75DD-C1FE73819606">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@edipi varchar(10) 
AS 
 
 
SET NOCOUNT ON 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
DECLARE @result   varchar(max) 
 
--RssOss.[dbo].[RCTAPI_GetPersonData] 1266694055 
--DECLARE @edipi varchar(10) 
--SET @edipi = 1266694055 
 
 
DECLARE  
 @nowMinusTwoYear date.me, 
 @nowMinusOneYear date.me 
 
SET @nowMinusTwoYear = DATEADD(year, -2, GETDATE()) 
SET @nowMinusOneYear = DATEADD(year, -1, GETDATE()) 
 
-- Recruiter Info 
SELECT TOP 1 
  u.FirstName 
 ,u.LastName 
 ,rp.RECRUITING_PERSON_ID AS Recrui.ngPersonId 
 ,rp.rowguid AS Recrui.ngPersonGuid  
 ,ro.ORGANIZATION_ID 
 ,ro.rowguid as OrgGuid 
 ,ro.COUNTY_CODE 
 ,ro.STATE_CODE 
 ,ro.CITY_CODE 
 ,ro.Street 
 ,ro.Street2 
 ,ro.ZIP_CODE 
INTO #Recruiter  
FROM  
 UserMgmt.dbo.[User] u 
 INNER JOIN MCRISS.dbo.PERSON p ON u.FirstName = p.FIRST_NAME AND u.LastName=p.LAST_NAME 
 INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION ro ON u.Sta.on_OrgUnitID = ro.OrgUnitId 
 INNER JOIN MCRISS.dbo.RECRUITING_PERSON rp ON rp.RECRUITING_PERSON_ID = p.PERSON_ID AND rp.ORGANIZATION_ID = ro.ORGANIZATION_ID 
WHERE  
 Dis.nguishedName like '%' + @edipi AND u.IsAc.ve = 1 AND rp.ORGANIZATION_ID = ro.ORGANIZATION_ID 
ORDER BY 
 LastAc.vityDate DESC 
 
-- Nwa related to the recruiter 
SELECT  
 rowguid 
INTO #nwaList 
FROM ( 
  SELECT  
   n.rowguid 
  FROM  
   MCRISS.dbo.NWA n 
   INNER JOIN #Recruiter r  
    ON n.WORKING_RECRUITER_ID = r.Recrui.ngPersonId 
  UNION 
 
  SELECT  
   n.rowguid 
  FROM  
   MCRISS.dbo.NWA n 
   INNER JOIN #Recruiter r  
    ON n.RECRUITER_OF_RECORD_ID = r.Recrui.ngPersonId 
 ) T1 
 
-- Prospect related to the recruiter 
SELECT * 
INTO #prospectList 
FROM 
 (SELECT  
  pr.ProspectId 
  FROM  
  Prospec.ng.USMC.Prospect pr 
  INNER JOIN Prospec.ng.USMC.Person p ON pr.PersonId = p.PersonId 
  INNER JOIN #Recruiter recrut ON pr.Recrui.ngPersonId = recrut.Recrui.ngPersonGuid 
  UNION 
  SELECT  
  pr.ProspectId 
  FROM  
  Prospec.ng.USMC.Prospect pr 
  INNER JOIN Prospec.ng.USMC.Person p ON pr.PersonId = p.PersonId 
  INNER JOIN #nwaList n ON pr.NwaId = n.rowguid 
 ) T 
 
-- .rst school code for the prospect 
SELECT  
  ps2.ProspectId, hs.School_Code 
INTO #.rstSchoolCode 
FROM  
 Prospec.ng.USMC.ProspectSchool ps2 
 INNER JOIN  
 ( 
  SELECT  
   ps.ProspectId, MIN(ps.LastUpdateDate) AS LastUpdateDate 
  FROM  
   --Prospec.ng.USMC.Prospect pr INNER JOIN  
   Prospec.ng.USMC.ProspectSchool ps --ON pr.ProspectId = ps.ProspectId 
   INNER JOIN #prospectList pl ON ps.ProspectId = pl.ProspectId 
  GROUP BY  
   ps.ProspectId 
 ) T 
 ON ps2.ProspectId = T.ProspectId AND ps2.LastUpdateDate = T.LastUpdateDate 
 INNER JOIN MCRISS.dbo.HIGH_SCHOOL hs ON ps2.SchoolId = hs.rowguid 
 
-- current nwa disposi.on for the prospect 
SELECT 
 cs2.NWA_ID, cs2.DISPOSITION_CODE 
INTO #CurrentCandidateStatus 
FROM  
 MCRISS.dbo.CANDIDATE_STATUS cs2 
 INNER JOIN  
  ( SELECT 
   cs.NWA_ID, MAX(CANDIDATE_STATUS_ID) AS CANDIDATE_STATUS_ID 
    FROM  
   Prospec.ng.USMC.Prospect pr 
   INNER JOIN #prospectList pl ON pr.ProspectId = pl.ProspectId 
   INNER JOIN MCRISS.dbo.NWA n ON pr.NwaId = n.rowguid 
   INNER JOIN MCRISS.dbo.CANDIDATE_STATUS cs ON cs.NWA_ID = n.NWA_ID 
    WHERE 
    pr.NwaId IS NOT NULL 
    GROUP BY 
   cs.NWA_ID 
  ) T 
 ON --cs2.NWA_ID = T.NWA_ID AND  
 cs2.CANDIDATE_STATUS_ID = T.CANDIDATE_STATUS_ID 
 
--.nal output 
SET @result = ( 
    SELECT 
     pr.PersonId          AS personId 
       ,ctznGeo.COUNTRY_DESCRIPTION      AS ci.zenshipCountryId 
       ,p.Ci.zenshipStatus        AS ci.zenshipTypeCode 
       ,dualCtznGeo.COUNTRY_DESCRIPTION     AS secondCi.zenshipCountryId 
       ,COALESCE( 
        pob1Geo.rowguid 
       ,pob2Geo.rowguid 
       ,pob3Geo.rowguid 
       ,pob4Geo.rowguid 
       )           AS pobCityId 
     ,(lcnsGeo.COUNTRY_DESCRIPTION  
       + '-'  
       + lcnsGeo.STATE_CODE 
      )            AS licenseStateId 
     ,ISNULL(pr.ReligionCode, p.Religion)   AS religionCode 
     ,ISNULL(pr.EthnicCode, p.Ethnicity)    AS ethnicityCode 
     ,ISNULL(pr.MepcomEthnicCode, p.MepcomEthnicity) AS mepcomEthnicityCode 
     ,p.Gender          AS genderCode 
     ,ISNULL(pr.MepcomRaceCode, p.MepcomRace)  AS mepcomRaceCode 
     ,ISNULL(pr.RaceCode, p.Race)     AS raceCode 
     ,pr.BirthDocumentCode       AS birthVeri.ca.onCode 
     ,prog.PROGRAM_ID        AS programId 
     ,pr.CategoryCode        AS categoryCode 
     ,pr.PriorityCode        AS priorityCode 
     ,pr.ContactTimeIndicator      AS contactTimeCode 
     ,ISNULL( 
        ccs.DISPOSITION_CODE 
       ,pr.ProspectDisposi.onId  
         )          AS candidateDisposi.onCode 
     ,pr.SourceDual         AS dualRecrui.ngSourceCode 
     ,pr.Source          AS recrui.ngSourceCode 
     ,pr.ProspectId         AS prospectId 
     ,pr.NwaId          AS nwaId 
     ,p.FirstName         AS .rstName 
     ,p.LastName          AS lastName 
     ,p.MiddleName         AS middleName 
     ,p.Su.x          AS su.x 
     ,pr.DigitalCommunica.on      AS digitalCommunica.on 
     ,p.DateOfBirth         AS dateOfBirth 
     ,ISNULL(pr.PCReceived, p.ParentConsentReceived) AS pcReceived 
     ,p.AlienRegistra.onNumber      AS alienRegistra.onNumber 
     ,p.SsnCard          AS hasSocialSecurityCard 
     ,p.SocialSecurityNumber       AS socialSecurityNumber 
     ,pr.HasDriversLicense       AS hasLicense 
     ,pr.DriverLicenseExp       AS licenseExpira.onDate 
     ,pr.DriverLicenseNumber       AS licenseNumber 
     ,pr.HasDrugUse         AS hasDrugUse 
     ,pr.HasMoralO.ense        AS hasMoralO.ense 
     ,pr.HasPhysicalProblems       AS hasPhysicalProblem 
     ,pr.PACCreateDate        AS datePrepared 
     ,pr.PPC           AS eppcControlNumber 
     ,pr.ReferralSSN         AS referrerEdipiSsn 
     ,pr.MonthWorkFor        AS monthWorkingFor 
     ,pr.ReferOSODate        AS referToOsoDate 
     ,pr.Interest         AS interest 
     ,pr.WaverInfo         AS addi.onalInforma.on 
     ,n.NWA_DECLARED_DATE       AS dateDeclared 
     ,pr.TDQRemark         AS tdqNote 
     ,(CASE  
        WHEN pr.ProspectDisposi.onId = 3  
        THEN pr.LastUpdateDate 
        ELSE NULL 
      END)           AS tdqDate 
     ,pr.Expira.onDate        AS expira.onDate 
     ,c.CONTRACT_ID         AS contractId 
     ,c.CONTRACT_BEGIN_DATE       AS enlistmentDate 
     ,ISNULL(c.PROJECTED_SHIP_DATE, 
       mic.PROJECTED_SHIP_DATE)    AS dateToMcrd 
     ,c.MISSING_DOCS         AS missingDocuments 
     ,c.DISCHARGE_DATE        AS depDischargeDate 
     ,c.DISCHARGE_CODE        AS depDischargeReason 
     ,fsc.School_Code        AS .rstSchoolId 
     ,pr.Gradua.onYear        AS .rstSchoolGradua.onYear 
     ,pr.AvablTime         AS availableTime 
     ,pr.AvablLoca.on        AS availableLoca.on 
     ,pr.AvablOtherDesc        AS availableOtherLoca.on 
     ,pr.RecruiterComments       AS recruiterNotes 
     ,pr.SncoicComments        AS sncoicNotes 
     ,pr.StsChgDepcy         AS isChangeDependency 
     ,pr.StsChgEdu         AS isChangeEduca.on 
     ,pr.StsChgPhys         AS isChangePhysical 
     ,pr.StsChgDrug         AS isChangeDrug 
     ,pr.StsChgMoral         AS isChangeMoral 
     ,pr.StsChgAtrRisk        AS isChangeAtri.onRisk 
     ,pr.StsChgOther         AS isChangeOther 
     ,pr.StsChgOtherDesc        AS isChangeOtherDescrip.on 
     ,pr.StsChgRemark        AS isChangeNote 
     ,n.Evalua.on         AS evalua.on 
     ,n.[1stDutySta.on]        AS .rstDutySta.on 
     ,n.ReferralSSN         AS mcrdReferralSSN 
     ,ISNULL(m.EXPIRATION_OF_ACTIVE_SERVICE, 
      DATEADD(day, c.TERM_OF_ENLISTMENT-1, 
      s.AFADBD))          AS endOfAc.veService 
     ,n.ProvenPerformer        AS provenPerformer 
     --,rcrt.STREET         AS recrui.ngOrganiza.onStreet1 
     --,rcrt.STREET2         AS recrui.ngOrganiza.onStreet2 
     --,rcrt.ZIP_CODE         AS recrui.ngOrganiza.onZip 
     --,rcrtGeo.rowguid        AS recrui.ngOrganiza.onCityId 
 
     ,trainAdd.STREET_ADDRESS      AS recrui.ngOrganiza.onStreet1 
     ,trainAdd.STREET_ADDRESS_2      AS recrui.ngOrganiza.onStreet2 
     ,trainAdd.ZIPCODE        AS recrui.ngOrganiza.onZip 
     ,trainAddGeo.rowguid       AS recrui.ngOrganiza.onCityId 
 
     ,s.TRAINING_ORGANIZATION_ID      AS trainingOrganiza.onId 
     ,ISNULL(s.SHIP_DATE, 
       c.PROJECTED_SHIP_DATE)     AS mcrdDateToMcrd 
     ,s.DateDueHome         AS es.matedDateOfReturn 
     ,rtrn.DROP_REASON        AS mcrdDischargeReasonCode 
     ,rtrn.DROP_DATE         AS mcrdDischargeDate 
     ,pr.CreatedDate         AS leadCreateDate 
     ,pr.Ac.vity         AS ac.vityCode 
     ,pr.Ac.vityDate        AS ac.vityDate 
     ,pmc.PROGRAM_MOS_CODE       AS programMosName 
     ,ISNULL(c.MEPS_CONTRACT_DATE, 
       mic.CONTRACT_BEGIN_DATE)    AS mepsContractDate 
     ,programShortName =  
       CASE  
       WHEN c.COMPONENT_CODE in ('K4','B5','K8','K9' ) THEN  
        ( 
         SELECT TOP 1  
          qsn.MOS 
         FROM MCRISS.dbo.QSN qsn 
         WHERE qsn.CONTRACT_id=c.CONTRACT_ID 
         ORDER BY qsn.PROGRAM_ASSIGNMENT_DATE DESC    
        ) 
       ELSE (SELECT TOP 1  
         p.PROGRAM_CODE 
        FROM  
         MCRISS.dbo.PROGRAM_AVAILABILITY pa 
        INNER JOIN MCRISS.dbo.PROGRAM p 
         ON p.PROGRAM_ID = pa.PROGRAM_ID 
        WHERE  
         pa.CONTRACT_ID = c.CONTRACT_ID 
        ORDER BY  
         pa.PROGRAM_ASSIGNMENT_DATE DESC) 
       END 
 
    FROM  
     (Prospec.ng.USMC.Prospect pr 
     INNER JOIN Prospec.ng.USMC.Person p ON pr.PersonId = p.PersonId 
     INNER JOIN #prospectList pl ON pr.ProspectId = pl.ProspectId 
  
     LEFT OUTER JOIN MCRISS.dbo.NWA n ON pr.NwaId = n.rowguid 
     LEFT OUTER JOIN MCRISS.dbo.[CONTRACT] c ON c.NWA_ID = n.NWA_ID 
     LEFT OUTER JOIN MCRISS.dbo.[MICONTRACT] mic ON mic.NWA_ID = n.NWA_ID 
     LEFT OUTER JOIN MCRISS.dbo.MARINE m ON m.MARINE_ID = n.MARINE_CANDIDATE_ID 
     LEFT OUTER JOIN MCRISS.dbo.SHIPPER s ON s.CONTRACT_ID = c.CONTRACT_ID 
     LEFT OUTER JOIN MCRISS.dbo.RECRUIT_TRAINING rtrn ON rtrn.SHIP_ID = s.SHIP_ID 
     LEFT OUTER JOIN MCRISS.dbo.PROGRAM_MOS_CODES pmc ON pmc.Contract_ID = c.Contract_ID 
     LEFT OUTER JOIN #.rstSchoolCode fsc ON fsc.ProspectId = pr.ProspectId 
     LEFT OUTER JOIN #CurrentCandidateStatus ccs ON ccs.NWA_ID = n.NWA_ID 
     LEFT OUTER JOIN  MCRISS.dbo.PROGRAM prog ON prog.PROGRAM_CODE = pr.ProgramCode AND prog.PROGRAM_TYPE = pr.ProgramType 
 
     LEFT OUTER JOIN MCRISS.dbo.CANDIDATE_ADDRESS trainAdd ON (n.MARINE_CANDIDATE_ID = trainAdd.MARINE_CANDIDATE_ID AND trainAdd.ADDRESS_TYPE = 'T') 
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION trainAddGeo --City 
      ON trainAddGeo.CITY_CODE = trainAdd.CITY_CODE AND trainAddGeo.COUNTY_CODE = trainAdd.COUNTY_CODE AND trainAddGeo.STATE_CODE = trainAdd.STATE_CODE AND trainAddGeo.COUNTRY_DESCRIPTION = 'UNITED STATES' 
         AND (trainAddGeo.STATE_CODE <> '00' AND trainAddGeo.COUNTY_CODE <> '000' AND (trainAddGeo.CITY_CODE NOT IN ('0000', '0'))) 
 
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION ctznGeo --Country 
      ON  ctznGeo.CITY_CODE = 0 AND ctznGeo.COUNTY_CODE = 0 AND ctznGeo.STATE_CODE = p.COUNTRY_OF_ORIGIN 
      
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION dualCtznGeo --Country 
      ON dualCtznGeo.CITY_CODE = 0 AND dualCtznGeo.COUNTY_CODE = 0 AND dualCtznGeo.STATE_CODE = p.DualCountryCi.zen 
      
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION pob1Geo --City 
      ON pob1Geo.CITY_CODE = p.BirthCity AND pob1Geo.STATE_CODE = p.BirthCountry AND pob1Geo.COUNTRY_DESCRIPTION <> 'UNITED STATES' 
         AND (pob1Geo.STATE_CODE <> '00' AND pob1Geo.COUNTY_CODE <> '000' AND (pob1Geo.CITY_CODE NOT IN ('0000', '0'))) 
          
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION pob2Geo --City 
      ON pob2Geo.CITY_CODE = p.BirthCity AND pob2Geo.COUNTY_CODE = p.BirthCounty AND pob2Geo.STATE_CODE = p.BirthCountry AND pob2Geo.COUNTRY_DESCRIPTION = 'UNITED STATES' 
         AND (pob2Geo.STATE_CODE <> '00' AND pob2Geo.COUNTY_CODE <> '000' AND (pob2Geo.CITY_CODE NOT IN ('0000', '0'))) 
      
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION pob3Geo --City 
      ON pob3Geo.CITY_CODE = pr.BirthCity AND pob3Geo.STATE_CODE = pr.BirthState AND pob3Geo.COUNTRY_DESCRIPTION <> 'UNITED STATES' 
         AND (pob3Geo.STATE_CODE <> '00' AND pob3Geo.COUNTY_CODE <> '000' AND (pob3Geo.CITY_CODE NOT IN ('0000', '0'))) 
      
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION pob4Geo --City 
      ON pob4Geo.CITY_CODE = pr.BirthCity AND pob4Geo.COUNTY_CODE = pr.BirthCounty AND pob4Geo.STATE_CODE = pr.BirthState AND pob4Geo.COUNTRY_DESCRIPTION = 'UNITED STATES' 
         AND (pob4Geo.STATE_CODE <> '00' AND pob4Geo.COUNTY_CODE <> '000' AND (pob4Geo.CITY_CODE NOT IN ('0000', '0'))) 
 
     LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION lcnsGeo --STATE 
      ON lcnsGeo.STATE_CODE = pr.DriverLicenseState AND 
       ( 
         (ISNUMERIC(lcnsGeo.STATE_CODE) = 1) AND (lcnsGeo.STATE_CODE <> '00') AND (lcnsGeo.COUNTY_CODE IN ('000', '0')) AND (lcnsGeo.CITY_CODE IN ('0', '0000'))  
        OR  
        (lcnsGeo.STATE_CODE = 'RQ') AND (lcnsGeo.COUNTY_CODE IN ('000', '0')) AND (lcnsGeo.CITY_CODE IN ('0', '0000')) AND (lcnsGeo.STATE_CODE <> '00')  
        OR  
        (lcnsGeo.STATE_CODE = 'GQ') AND (lcnsGeo.COUNTY_CODE IN ('000', '0')) AND (lcnsGeo.CITY_CODE IN ('0', '0000')) AND (lcnsGeo.STATE_CODE <> '00') 
        OR  
        (lcnsGeo.STATE_CODE = 'VQ') AND (lcnsGeo.COUNTY_CODE IN ('000', '0')) AND (lcnsGeo.CITY_CODE IN ('0', '0000')) AND (lcnsGeo.STATE_CODE <> '00') 
       ) 
     ) 
     , 
     ( #Recruiter rcrt  
      LEFT OUTER JOIN MCRISS.dbo.GEO_LOCATION rcrtGeo --City 
      ON rcrtGeo.CITY_CODE = rcrt.CITY_CODE AND rcrtGeo.COUNTY_CODE = rcrt.COUNTY_CODE AND rcrtGeo.STATE_CODE = rcrt.STATE_CODE AND rcrtGeo.COUNTRY_DESCRIPTION = 'UNITED STATES' 
         AND (rcrtGeo.STATE_CODE <> '00' AND rcrtGeo.COUNTY_CODE <> '000' AND (rcrtGeo.CITY_CODE NOT IN ('0000', '0'))) 
     ) 
  
    WHERE 
     pr.Ac.ve = 1  
     AND  
       (  
      (  
         (pr.Expira.onDate >= @nowMinusOneYear OR pr.PACCreateDate >= @nowMinusOneYear) AND 
         pr.ProspectDisposi.onId = 2 
      ) 
      OR 
      ( 
        (pr.Gradua.onYear >= DATEPART(year, @nowMinusTwoYear) OR  pr.CreatedDate >= @nowMinusOneYear) AND 
        pr.ProspectDisposi.onId = 1 
      ) 
      OR  
      pr.ProspectDisposi.onId IN (3) OR 
      pr.NwaId IS NOT NULL   
       ) 
     AND pr.ProspectDisposi.onId <> 5 
 
     -- Eject CANDIDATE_STATUS DISPOSITION_CODE 
     -- Contract DEP Discharge (L), NWA DQ-Medical (G), NWA DQ-Mental (H), NWA DQ-Moral (I), NWA DQ-Other (J) 
     -- Eject ProspectDisposi.on PDQ (4) 
 
     AND pr.ProspectDisposi.onId <> 4 
     AND 
      ( 
       ccs.DISPOSITION_CODE IS NULL 
       OR 
       ccs.DISPOSITION_CODE NOT IN ('L', 'G', 'H', 'I', 'J') 
      ) 
      
 
    FOR JSON PATH, ROOT('people'), INCLUDE_NULL_VALUES   
) 
 
SELECT ISNULL(@result, '{"people":[]}')  
 
DROP TABLE #Recruiter 
DROP TABLE #CurrentCandidateStatus 
DROP TABLE #.rstSchoolCode 
DROP TABLE #nwaList 
DROP TABLE #prospectList]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>