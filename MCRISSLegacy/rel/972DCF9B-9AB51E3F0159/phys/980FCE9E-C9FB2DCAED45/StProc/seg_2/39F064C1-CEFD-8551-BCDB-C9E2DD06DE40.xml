<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetEventsLite]" directorySegmentName="seg_2" id="39F064C1-CEFD-8551-BCDB-C9E2DD06DE40">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@StartDate    date.me, 
 @EndDate    date.me, 
 @EventSourceId   int, 
 @EventSourceTypeId  int = 1, 
 @EventTypeId   int, 
 @Organiza.onId   int, 
 @SubjectId    uniqueidentifier = null, 
 @RecruiterId   uniqueidentifier = null, 
 @IsEventOwnerOnly  bit = 0 
WITH RECOMPILE 
AS 
BEGIN 
 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
 IF (@Organiza.onId = 0 AND @SubjectId IS NULL AND @RecruiterId IS NULL) 
 BEGIN 
  SELECT 
     NULL AS ID, 
     NULL AS Organiza.onId, 
     NULL AS Loca.on, 
     NULL AS Comments, 
     NULL AS IsComplete, 
     NULL AS StartDate, 
     NULL AS EndDate, 
     NULL AS EventTypeOther, 
     NULL AS LastUpdateDate, 
     NULL AS LastUpdateUserId, 
     NULL AS Remarks, 
     NULL AS EventPrecision, 
     NULL AS MISApprovedEventStartDate, 
     NULL AS MISApprovedEventEndDate, 
     NULL AS WISApprovedEventStartDate, 
     NULL AS WISApprovedEventEndDate, 
     NULL AS EventSourceId, 
     NULL AS EventSourceName, 
     NULL AS EventTypeId, 
     NULL AS EventTypeName, 
     NULL AS EventSubjects, 
     NULL AS EventOwners, 
     NULL AS EventPersonVisibili.es, 
     NULL AS EventOutcomes 
  WHERE 1 = 2 
 END 
 ELSE 
 BEGIN 
   
  DECLARE @orgGuid uniqueidentifier 
  SELECT @orgGuid = rowguid FROM MCRISS.dbo.RECRUITING_ORGANIZATION WHERE ORGANIZATION_ID = @Organiza.onId 
 
  DECLARE @SchoolYear int = case 
   WHEN MONTH(GETDATE()) < 7 
   THEN YEAR(GETDATE()) 
   ELSE (YEAR(GETDATE()) + 1) 
   END 
 
  SELECT DISTINCT e.ID 
  INTO #EventList 
  FROM  
   [RSSOSS].[USMC].[Event] E 
   INNER JOIN [RSSOSS].[USMC].[EventSubject] ESub ON E.ID = ESub.Even.d 
   INNER JOIN [RSSOSS].[USMC].[EventSource] ES ON E.EventSourceId = ES.ID 
   INNER JOIN [RSSOSS].[USMC].[EventType] ET ON E.EventTypeId = ET.ID 
   
  WHERE  
   ((@SubjectId = ESub.SubjectId AND @SubjectId IS NOT NULL) OR (@SubjectId IS NULL)) and 
   (@EventTypeId = 0 or (E.EventTypeId = @EventTypeId)) and 
   (@EventSourceId = 0 or (E.EventSourceId = @EventSourceId)) and  
   ES.EventSourceTypeId = @EventSourceTypeId and 
   (@Organiza.onId = 0 or (E.Organiza.onId = @Organiza.onId)) and 
   ( ( @StartDate is null AND @EndDate is null) OR 
     ( (E.StartDate <= @EndDate AND @EndDate IS NOT NULL)  AND (E.EndDate >= @StartDate AND @StartDate IS NOT NULL ) ) 
   ) 
 
  SELECT 
     E.ID, 
     E.Organiza.onId, 
     E.Loca.on, 
     E.Comments, 
     E.IsComplete, 
     E.StartDate, 
     E.EndDate, 
     E.EventTypeOther, 
     E.LastUpdateDate, 
     E.LastUpdateUserId, 
     E.Remarks, 
     E.EventPrecision, 
     EA.MISApprovedEventStartDate, 
     EA.MISApprovedEventEndDate, 
     EA.WISApprovedEventStartDate, 
     EA.WISApprovedEventEndDate, 
     ES.Id EventSourceId, 
     ES.Name EventSourceName, 
     ET.Id EventTypeId, 
     ET.Type EventTypeName, 
     (SELECT es.SubjectId AS '@SubjectId', es.SubjectName AS '@SubjectName', (isnull(wk.SectorDesignator,'OA')  + isnull(convert(varchar(2),wk.DESIGNATOR), '')) AS '@WorkingArea' 
      FROM USMC.EventSubject es 
   LEFT JOIN 
   ( 
   SELECT hsp.rowguid, ms.SectorDesignator, hsp.DESIGNATOR, mz.LastUpdateDate 
   from 
   [MCRISS].[DBO].[HIGH_SCHOOL] hs 
   INNER JOIN [MCRISS].[DBO].[HIGH_SCHOOL_PROFILE] hsp ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE 
   INNER JOIN [RSSOSS].[USMC].[MapsSector] ms on ms.Recrui.ngOrganiza.onId = @orgGuid 
   INNER JOIN [RSSOSS].[USMC].[MapsSectorZip] mz on mz.SectorID = ms.SectorID 
   WHERE hs.ORGANIZATION_ID = @Organiza.onId 
   and mz.LastUpdateDate IN (SELECT MAX(mz2.LastUpdateDate) FROM [RSSOSS].[USMC].[MapsSectorZip] mz2 WHERE mz2.Zip = le.(hs.ZIP_CODE,5)) 
   ) --wk on wk.rowguid = SubjectId 
   wk on wk.rowguid = CASE E.EventSourceId 
   --get School GUID from subjectID, which is a PAC(16), a Pool(17), or a MCRD(18) 
     
    WHEN 16 THEN 
     --PAC - eventSubject = ProspectID 
     (SELECT top 1 hsp.rowguid 
     FROM MCRISS.dbo.HIGH_SCHOOL hs 
     INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE AND hsp.SCHOOL_YEAR = @SchoolYear 
     INNER JOIN Prospec.ng.USMC.ProspectEduca.on pe ON pe.SchoolCode = hs.SCHOOL_CODE 
     INNER JOIN Prospec.ng.USMC.Prospect p ON pe.ProspectId = p.ProspectId 
     WHERE p.ProspectId = es.SubjectId 
     AND pe.CompletedDate IN (SELECT MAX(pe2.CompletedDate) FROM Prospec.ng.USMC.ProspectEduca.on pe2 WHERE pe2.SchoolCode = hs.SCHOOL_CODE AND pe2.ProspectId = p.ProspectId)) 
    WHEN 17 THEN 
     --Pool - eventSubject = nwaID 
     (SELECT top 1 hsp.rowguid 
     FROM MCRISS.dbo.HIGH_SCHOOL hs 
     INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE AND hsp.SCHOOL_YEAR = @SchoolYear 
     INNER JOIN Prospec.ng.USMC.ProspectEduca.on pe ON pe.SchoolCode = hs.SCHOOL_CODE 
     INNER JOIN Prospec.ng.USMC.Prospect p ON pe.ProspectId = p.ProspectId 
     INNER JOIN MCRISS.dbo.NWA nwa ON nwa.rowguid = p.nwaid 
     WHERE nwa.rowguid = es.SubjectId 
     AND pe.CompletedDate IN (SELECT MAX(pe2.CompletedDate) FROM Prospec.ng.USMC.ProspectEduca.on pe2 WHERE pe2.SchoolCode = hs.SCHOOL_CODE AND pe2.ProspectId = p.ProspectId)) 
    WHEN 18 THEN 
     --MCRD - eventSubject = nwaID 
     (SELECT top 1 hsp.rowguid 
     FROM MCRISS.dbo.HIGH_SCHOOL hs 
     INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE AND hsp.SCHOOL_YEAR = @SchoolYear 
     INNER JOIN Prospec.ng.USMC.ProspectEduca.on pe ON pe.SchoolCode = hs.SCHOOL_CODE 
     INNER JOIN Prospec.ng.USMC.Prospect p ON pe.ProspectId = p.ProspectId 
     INNER JOIN MCRISS.dbo.NWA nwa ON nwa.rowguid = p.nwaid 
     WHERE nwa.rowguid = es.SubjectId 
     AND pe.CompletedDate IN (SELECT MAX(pe2.CompletedDate) FROM Prospec.ng.USMC.ProspectEduca.on pe2 WHERE pe2.SchoolCode = hs.SCHOOL_CODE AND pe2.ProspectId = p.ProspectId)) 
 
    --If Event Source is List Scheduling or HS/CC Visit, the subject is already a school id. 
    WHEN 19 THEN 
    es.SubjectId 
    WHEN 20 THEN 
    es.SubjectId 
    ELSE 
    es.SubjectId 
    END 
 
   WHERE EventId = E.ID FOR XML PATH('EventSubject'), TYPE, ROOT('EventSubjects') 
     ) AS 'EventSubjects', 
     (SELECT DISTINCT 
    RTrim(rp.Rank_Code) as '@RankCode',  
    RTrim(p.Last_Name) as '@LastName', 
    RTrim(p.First_Name) as '@FirstName',  
    RTrim(p.LEGAL_MIDDLE_NAME) as '@MiddleName',  
    rp.rowguid as '@RecruiterID' 
   FROM USMC.EventOwners eo 
    INNER JOIN MCRISS.dbo.Recrui.ng_Person rp  ON rp.rowguid = eo.OwnerId 
    INNER JOIN MCRISS.dbo.Person p ON rp.Recrui.ng_Person_ID = p.Person_ID   
   WHERE  eo.EventId = E.ID FOR XML PATH('Owner'), TYPE, ROOT('Owners')   
     ) AS 'EventOwners', 
     (SELECT Recrui.ngPersonId as '@Recrui.ngPersonId', 
     RTrim(rp.Rank_Code) + ' ' + 
        RTrim(p.Last_Name) + ' ' + 
        RTrim(p.First_Name) + ' ' +  
        LEFT(RTrim(p.LEGAL_MIDDLE_NAME),1) as '@DisplayName'  
      FROM  
    USMC.EventPersonVisibility epv 
    INNER JOIN MCRISS.dbo.Recrui.ng_Person rp  ON rp.rowguid = epv.Recrui.ngPersonId 
    INNER JOIN MCRISS.dbo.Person p ON rp.Recrui.ng_Person_ID = p.Person_ID 
   WHERE  EventId = E.ID FOR XML PATH('Visibility'), TYPE, ROOT('Visibili.es')   
     ) AS 'EventPersonVisibili.es', 
     (SELECT  
    eo.ID AS '@EventOutcomeId' 
    ,eo.AppointmentOutcomeId AS '@AppointmentOutcomeId' 
    ,ao.Type AS '@AppointmentOutcomeType' 
    ,eo.InterviewOutcomeId AS '@InterviewOutcomeId' 
    ,ino.Type AS '@InterviewOutcomeType' 
    ,( SELECT  
      eb.ID AS '@ID' 
     ,Comment AS '@Comment' 
     ,Bene.tPriority AS '@Bene.tPriority' 
     ,ebt.ID AS '@TypeId'  
     ,ebt.Name AS '@TypeName' 
       FROM USMC.EventBene.t eb 
      INNER JOIN USMC.EventBene.tType ebt ON ebt.ID = eb.Bene.tTypeId 
       WHERE eb.EventOutcomeId = eo.ID FOR XML PATH('EventBene.t'), TYPE 
     ) AS 'EventBene.ts' 
      
   FROM USMC.EventOutcome eo 
    LEFT OUTER JOIN USMC.AppointmentOutcome ao  
     ON eo.AppointmentOutcomeId = ao.ID 
    LEFT OUTER JOIN USMC.InterviewOutcome ino 
     ON eo.InterviewOutcomeId = ino.ID 
   WHERE 
    EventId = E.ID FOR XML PATH('EventOutcome'), TYPE, ROOT('EventOutcomes') 
   ) AS 'EventOutcomes' 
     
  FROM [RSSOSS].[USMC].[Event] E 
  INNER JOIN #EventList el ON E.ID = el.ID 
  INNER JOIN [RSSOSS].[USMC].[EventSource] ES ON E.EventSourceId = ES.ID 
  INNER JOIN [RSSOSS].[USMC].[EventType] ET ON E.EventTypeId = ET.ID 
  LEFT OUTER JOIN [RSSOSS].[USMC].[EventApproval] EA on E.ID = EA.ID 
  WHERE  
   (@EventTypeId = 0 or (E.EventTypeId = @EventTypeId)) and 
   (@EventSourceId = 0 or (E.EventSourceId = @EventSourceId)) and  
   ES.EventSourceTypeId = @EventSourceTypeId and 
   (@Organiza.onId = 0 or (E.Organiza.onId = @Organiza.onId)) and 
   ( ( @StartDate is null AND @EndDate is null) OR 
     ( (E.StartDate <= @EndDate AND @EndDate IS NOT NULL)  AND (E.EndDate >= @StartDate AND @StartDate IS NOT NULL ) ) 
   ) 
  ORDER BY E.StartDate desc 
   
  DROP TABLE #EventList 
 END 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>