<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetDailyRptByYearMonth]" directorySegmentName="seg_2" id="CD5E08FC-FDA5-92B0-C8A3-506862F84E68">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@Year varchar(4), 
 @Month  varchar(2), 
 @RecruiterId uniqueidentifier = null, 
 @OrgId int 
AS 
BEGIN 
 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
DECLARE @counter INT 
DECLARE @days INT 
DECLARE @date DATETIME 
DECLARE @datecomp DATETIME 
declare @rtDayofWeek varchar(10) 
declare @sDw varchar(2) 
declare @vDate varchar(20) 
--DECLARE @monthTable TABLE (monthName VARCHAR(20), DayNo INT, dayName varchar(15), dt date.me, contracts int, nwa int, interviews int, appointments int) 
--SELECT @fyst = str(@.scalYear -1) + '/10/1' 
 
 CREATE TABLE #MonthTable   
 (  
   [rowid] INT NOT NULL IDENTITY(1,1), 
   DayNo INT,  
   dayName varchar(15), 
   contracts int, 
   nwa int, 
   interviews int,  
   appointments int, 
   edulevel varchar(2)    
 ) 
 
 CREATE UNIQUE CLUSTERED INDEX IX_rowid ON #MonthTable (rowid) 
 
 CREATE TABLE #DailyCounts 
 ( 
   [rowid] INT NOT NULL IDENTITY(1,1), 
   DayNo INT, 
      contracts int, 
   nwa int, 
   interviews int,  
   appointments int, 
   edulevel varchar(2)  
 ) 
 
 CREATE UNIQUE CLUSTERED INDEX IX_rowid ON #DailyCounts (rowid) 
select @datecomp = getdate() 
--if (@Month >=10) 
--select @datecomp = dateadd(y,1,getdate()) 
SELECT @vDate = '/01/' + @Year 
SET @date = CONVERT(DATETIME, STR(@Month) + @vDate) 
  SELECT @days = DAY(DATEADD (m, 1, DATEADD (d, 1 - DAY(@date), @date)) - 1)  
   
   
 
BEGIN 
 SET @counter = 0 
 WHILE (@counter < @days) 
 BEGIN      
 
    SET @counter = @counter + 1 
 SELECT @vDate = '/' + str(@counter) + '/' + @Year 
  --print @vDate  
 SET @date = CONVERT(DATETIME, @Month + @vDate) 
 
    if ( DATENAME(dw, @date) != 'Sunday') 
    begin 
        select @sDw =  ltrim(rtrim(le.(DATENAME(dw, @date),2))) 
  INSERT INTO #MonthTable(DayNo,dayName,contracts,nwa,interviews, appointments, edulevel) VALUES (@counter, @sDw + ' ' + str(@counter,2,0),0,0,0,0, 'GR') 
  INSERT INTO #MonthTable(DayNo,dayName,contracts,nwa,interviews, appointments, edulevel) VALUES (@counter, @sDw + ' ' + str(@counter,2,0),0,0,0,0, 'SR') 
 
 end   
  
  --print @date 
END 
 
-- Get all Contracts within .lter 
SELECT DISTINCT 
  c.CONTRACT_ID, 
  n.MARINE_CANDIDATE_ID, 
  c.CONTRACT_BEGIN_DATE, 
  e.Educa.on_Code, 
  e.EDUCATION_LEVEL, 
  e.Update_Date 
 INTO #Contract 
 FROM MCRISS.dbo.Contract c 
  INNER JOIN MCRISS.dbo.Nwa n ON n.NWA_ID = c.NWA_ID   
  INNER JOIN MCRISS.dbo.Recrui.ng_Person AS rp ON rp.RECRUITING_PERSON_ID = n.RECRUITER_OF_RECORD_ID 
  INNER JOIN MCRISS.DBO.Candidate_Educa.on e on  e.Marine_Candidate_id = n.Marine_Candidate_id  
 WHERE (rp.rowguid=@RecruiterID or @RecruiterID is null)  
 AND (rp.ORGANIZATION_ID= @OrgID) 
 AND (YEAR(c.CONTRACT_BEGIN_DATE)=@Year) 
 AND (MONTH (c.CONTRACT_BEGIN_DATE) = @Month) 
 
-- Get all the senior contracts 
 SELECT   
  c.CONTRACT_ID AS ContractNo,  
  DAY(c.CONTRACT_BEGIN_DATE) AS DayNo 
 INTO #ContractSenior  
 FROM #Contract c 
 WHERE c.Educa.on_Code IN ('H','M','S') 
 AND c.EDUCATION_LEVEL = '11' 
 and c.Update_Date = (SELECT max(e2.update_date)  
       FROM  MCRISS.DBO.Candidate_Educa.on e2 
       WHERE e2.Marine_Candidate_id = c.Marine_Candidate_id  
       AND e2.Marine_Candidate_id = c.Marine_Candidate_id 
       )       
 
-- Get Senior contract No 
INSERT INTO #DailyCounts(contracts, DayNo, edulevel) 
SELECT    
 COUNT(rst.ContractNo),  
 rst.DayNo,   
 rst.EduLevel  
FROM ( 
   SELECT DISTINCT  
    ContractNo,  
    DayNo,  
    'SR' AS EduLevel 
    FROM #ContractSenior 
   )rst      
GROUP BY DayNo, EduLevel 
  
UPDATE #MonthTable SET contracts = dc.contracts FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo and dc.edulevel=yt.edulevel 
 
-- Get all the graduate contracts 
SELECT   
 c.CONTRACT_ID AS ContractNo,  
 DAY(c.CONTRACT_BEGIN_DATE) AS DayNo 
INTO #ContractGraduate  
FROM #Contract c 
WHERE c.Educa.on_Code NOT IN ('H','M','S') 
and c.Update_Date = (SELECT max(e2.update_date)  
      FROM  MCRISS.DBO.Candidate_Educa.on e2 
      WHERE e2.Marine_Candidate_id = c.Marine_Candidate_id  
      AND e2.Marine_Candidate_id = c.Marine_Candidate_id 
      )       
 
-- Get Graduate contract No 
INSERT INTO #DailyCounts(contracts, DayNo, edulevel) 
SELECT    
 COUNT(rst.ContractNo),  
 rst.DayNo,   
 rst.EduLevel  
FROM ( 
   SELECT DISTINCT  
    ContractNo,  
    DayNo,  
    'GR' AS EduLevel 
    FROM #ContractGraduate 
   )rst      
GROUP BY DayNo, EduLevel 
  
UPDATE #MonthTable SET contracts = dc.contracts FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo and dc.edulevel=yt.edulevel 
 
-- Get All Nwas within .lter 
 SELECT DISTINCT 
  n.NWA_ID, 
  n.MARINE_CANDIDATE_ID, 
  n.NWA_DECLARED_DATE, 
  e.Educa.on_Code, 
  e.EDUCATION_LEVEL, 
  e.Update_Date 
 INTO #NWA 
 FROM MCRISS.dbo.Nwa AS n   
  INNER JOIN MCRISS.dbo.Recrui.ng_Person AS rp ON rp.RECRUITING_PERSON_ID = n.RECRUITER_OF_RECORD_ID 
  INNER JOIN  MCRISS.dbo.CANDIDATE_STATUS cs on CS.NWA_ID = N.NWA_ID 
  INNER JOIN MCRISS.DBO.Candidate_Educa.on e on  e.Marine_Candidate_id = n.Marine_Candidate_id  
 WHERE (rp.rowguid=@RecruiterID or @RecruiterID is null)  
 AND (ORGANIZATION_ID= @OrgID) 
 AND (YEAR(n.NWA_DECLARED_DATE)=@Year) 
 AND (MONTH (n.NWA_DECLARED_DATE) = @Month) 
 AND CS.STATUS_CODE = 'A' AND (CS.DISPOSITION_CODE = 'F' OR CS.DISPOSITION_CODE = 'DH')  
 
-- Get SR Nwas  
 SELECT 
  n.NWA_ID, 
  day(n.NWA_DECLARED_DATE) AS DayNo 
 INTO #NWASenior  
 FROM #NWA n 
 WHERE n.Educa.on_Code IN ('H','M','S') 
 AND n.EDUCATION_LEVEL = '11' 
 and n.Update_Date = (SELECT max(e2.update_date)  
       FROM  MCRISS.DBO.Candidate_Educa.on e2 
       WHERE e2.Marine_Candidate_id = n.Marine_Candidate_id  
       AND e2.Marine_Candidate_id = n.Marine_Candidate_id 
       )    
--Get SR NWA No 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(nwa, DayNo, edulevel) 
SELECT  
 count(rst.NWA_ID),  
 rst.DayNo,  
 rst.EduLevel  
 FROM ( 
   SELECT DISTINCT  
    NWA_ID,  
    DayNo,  
    'SR' AS EduLevel 
    FROM #NwaSenior 
   )rst     
 GROUP BY DayNo, EduLevel 
     
UPDATE  #MonthTable SET nwa = dc.nwa FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo AND dc.edulevel=yt.edulevel 
 
-- Get GR Nwas 
 SELECT 
  n.NWA_ID, 
  day(n.NWA_DECLARED_DATE) AS DayNo 
 INTO #NWAGraduate  
 FROM #NWA n 
 WHERE n.Educa.on_Code NOT IN ('H','M','S') 
 and n.Update_Date = (SELECT max(e2.Update_Date)  
       FROM  MCRISS.DBO.Candidate_Educa.on e2 
       WHERE e2.Marine_Candidate_id = n.Marine_Candidate_id  
       AND e2.Marine_Candidate_id = n.Marine_Candidate_id 
       )     
--Get GR NWA No 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(nwa, DayNo, edulevel) 
SELECT  
 count(rst.NWA_ID),  
 rst.DayNo,  
 rst.EduLevel  
 FROM ( 
   SELECT DISTINCT  
    NWA_ID,  
    DayNo,  
    'GR' AS EduLevel 
    FROM #NwaGraduate 
   )rst     
 GROUP BY DayNo, EduLevel 
     
UPDATE  #MonthTable SET nwa = dc.nwa FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo AND dc.edulevel=yt.edulevel 
 
--Get all the Graduate Prospects 
SELECT 
 p.ProspectId, 
 pe.Educa.onCode 
INTO #GraduateProspect  
FROM Prospec.ng.USMC.Prospect p  
INNER JOIN Prospec.ng.USMC.ProspectEduca.on pe ON pe.ProspectId = p.ProspectId 
WHERE pe.Educa.onCode NOT IN ('H','M','S') 
-- ERR *NOT THIS RELEASE - following what we already have* IN ('5','7','8','B','C','D','E','F','G','J','K','L','N','R','U','W','X') 
AND Ac.vity IN ('TC','OT','AC','HV','DC') 
and pe.LastUpdateDate = (SELECT max(pe2.LastUpdateDate)  
       FROM  Prospec.ng.USMC.ProspectEduca.on pe2 
       WHERE pe2.ProspectId = pe.ProspectId 
       )  
 
--Get all the Senior Prospects 
SELECT 
 p.ProspectId, 
 pe.Educa.onCode 
INTO #SeniorProspect  
FROM Prospec.ng.USMC.Prospect p  
INNER JOIN Prospec.ng.USMC.ProspectEduca.on pe ON pe.ProspectId = p.ProspectId 
WHERE pe.Educa.onCode IN ('H','M','S') 
AND pe.Educa.onLevel = '11' 
-- ERR *NOT THIS RELEASE - following what we already have* IN ('1','2','H','M','S') 
AND Ac.vity IN ('TC','OT','AC','HV','DC') 
and pe.LastUpdateDate = (SELECT max(pe2.LastUpdateDate)  
       FROM  Prospec.ng.USMC.ProspectEduca.on pe2 
       WHERE pe2.ProspectId = pe.ProspectId 
       )  
 
--Get Interview No for Graduate Prospects 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(interviews, DayNo, edulevel) 
SELECT Count(*), DAY(StartDate), 'GR' 
FROM RSSOSS.USMC.Event e 
 INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId  
 INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
 INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
 INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.EventID = e.ID 
 INNER JOIN #GraduateProspect p ON s.subjectId = p.ProspectId 
WHERE (InterviewOutcomeId=1 or InterviewOutcomeId=2) -- New Working Applicant or Follow-up 
AND et.Type != 'Follow Up' 
AND (@RecruiterID = eo.CreatorID or @RecruiterID is null) 
AND (e.Organiza.onId = @OrgID)  
AND e.IsApproved = 1  
AND YEAR(StartDate) = @Year 
AND MONTH(StartDate) = @Month      
GROUP BY day(StartDate) 
 
UPDATE #MonthTable SET interviews = dc.interviews FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo  and dc.edulevel=yt.edulevel 
 
--Get Interview No for Senior Prospects 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(interviews, DayNo, edulevel) 
SELECT Count(*), DAY(StartDate), 'SR' 
FROM RSSOSS.USMC.Event e 
 INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId  
 INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
 INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
 INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.EventID = e.ID 
 INNER JOIN #SeniorProspect p ON s.subjectId = p.ProspectId 
WHERE (InterviewOutcomeId=1 or InterviewOutcomeId=2) -- New Working Applicant or Follow-up 
 AND et.Type != 'Follow Up' 
 AND (@RecruiterID = eo.CreatorID or @RecruiterID is null) 
 AND (e.Organiza.onId = @OrgID) 
 AND e.IsApproved = 1  
 AND YEAR(StartDate) = @Year 
 AND MONTH(StartDate) = @Month      
GROUP BY day(StartDate) 
UPDATE #MonthTable SET interviews = dc.interviews FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo AND dc.edulevel=yt.edulevel 
 
--Get Appointment No for Graduate Prospects 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(appointments, DayNo,edulevel)   
SELECT  
 Count(*),  
 day(StartDate),  
 'GR' 
FROM RSSOSS.USMC.Event e 
 INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId  
 INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.EventID = e.ID 
 INNER JOIN #GraduateProspect p ON s.subjectId = p.ProspectId 
WHERE  
(e.EventTypeId = 1 OR e.EventTypeId = 85) 
AND (@RecruiterID = eo.CreatorID or @RecruiterID is null) 
AND (e.Organiza.onId = @OrgID)  
AND YEAR(StartDate) = @YEAR 
AND e.IsApproved = 1 
AND MONTH(StartDate) = @MONTH  
GROUP BY day(StartDate)    
  
UPDATE #MonthTable SET appointments = dc.appointments FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo and dc.edulevel=yt.edulevel 
 
 --Get Appointment No for Senior Prospects 
DELETE FROM #DailyCounts 
INSERT INTO #DailyCounts(appointments, DayNo,edulevel)   
SELECT  
 Count(*),  
 day(StartDate),  
 'SR' 
FROM RSSOSS.USMC.Event e 
 INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId  
 INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.EventID = e.ID 
 INNER JOIN #SeniorProspect p ON s.subjectId = p.ProspectId 
WHERE  
(e.EventTypeId = 1 OR e.EventTypeId = 85) 
AND (@RecruiterID = eo.CreatorID or @RecruiterID is null) 
AND (e.Organiza.onId = @OrgID)  
AND YEAR(StartDate) = @YEAR 
AND e.IsApproved = 1 
AND MONTH(StartDate) = @MONTH  
GROUP BY day(StartDate)    
 
UPDATE #MonthTable SET appointments = dc.appointments FROM #MonthTable yt 
INNER JOIN #DailyCounts dc ON dc.DayNo = yt.DayNo and dc.edulevel=yt.edulevel 
 
 
 CREATE TABLE #DataTable 
 ( 
   [Date] varchar(15)   
 ) 
  
   
  
 Declare @DateValue varchar(10)  
 Declare @edulevel varchar(2)  
 Declare @SQLString nvarchar(500)  
 Declare @InsertStr nvarchar(1000) 
 Declare @ValStr nvarchar(1000) 
 declare @contrNo int 
 select @contrNo = 0 
 declare @contrTol int 
 select @contrTol = 0 
 declare @nwaNo int 
 select @nwaNo = 0 
 declare @nwaTol int 
 select @nwaTol = 0 
 declare @intNo int 
 select @intNo = 0 
 declare @intTol int 
 select @intTol = 0 
 declare @apptNo int 
 select @apptNo = 0 
 declare @apptTol int 
 select @apptTol = 0 
  
 select @InsertStr = '' 
 select @ValStr = '' 
  
 declare @nwaValStr nvarchar(1000) 
 select @nwaValStr = '' 
  
 declare @intValStr nvarchar(1000) 
 select @intValStr = '' 
  
 declare @apptValStr nvarchar(1000) 
 select @apptValStr = '' 
  
 DECLARE @iYr int 
 declare @iMh int  
 select @iYr = cast(@Year as int) 
 select @iMh = cast(@Month as int) 
  
  Declare c_Dates Cursor For 
 Select dayName, contracts, nwa, interviews, appointments,edulevel From #MonthTable 
 Open c_Dates 
 Fetch Next From c_Dates into @DateValue, @contrNo, @nwaNo, @intNo, @apptNo, @edulevel 
 While @@FETCH_STATUS = 0 
 Begin 
  
 Set @SQLString = 'ALTER TABLE #DataTable ADD ['+ @DateValue +' ' + @edulevel + '] int' 
 exec sp_executeSQL @SQLString   
 declare @iDy int 
 
  
 if (@contrNo is null) 
 select @contrNo = 0 
  
 if (@nwaNo is null) 
 select @nwaNo = 0 
  
 select @contrTol = @contrTol + @contrNo  
  
 select @nwaTol = @nwaTol + @nwaNo 
  
 select @intTol = @intTol + @intNo 
 
 select @apptTol = @apptTol + @apptNo 
    
 select @insertStr = @InsertStr + '['+ @DateValue + ' ' + @edulevel + '],' 
 select @ValStr =  @ValStr + cast(@contrNo as varchar(2)) + ','  
  
  
 select @nwaValStr = @nwaValStr + cast(@nwaNo as varchar(2)) + ','  
  
 select @intValStr = @intValStr + cast(@intNo as varchar(2)) + ','  
 select @apptValStr = @apptValStr + cast(@apptNo as varchar(2)) + ','   
  
 Fetch Next From c_Dates into @DateValue, @contrNo, @nwaNo, @intNo, @apptNo, @edulevel 
 End 
 Set @SQLString = 'ALTER TABLE #DataTable ADD [Total] int' 
  --print @SQLString 
  exec sp_executeSQL @SQLString  
   
  Set @SQLString = 'ALTER TABLE #DataTable ADD [Objec.ve] int' 
  --print @SQLString 
  exec sp_executeSQL @SQLString  
 close c_Dates 
 Deallocate c_Dates 
   
 declare @obj int 
 select @obj = 0 
 
 
 select @obj = (SELECT ContractCount FROM USMC.MonthlyObjec.ve mo 
  inner join MCRISS.DBO.RECRUITING_ORGANIZATION ro  
  on mo.Organiza.onId = ro.rowguid where Year = @Year and Month = @Month 
 and (RecruiterID=@RecruiterId  or (@RecruiterID is null and ro.ORGANIZATION_ID = @OrgId 
and RecruiterID = '00000000-0000-0000-0000-000000000000'))) 
 
 
 if (@obj is null) 
 begin 
 select @obj = 0 
 end 
  set @InsertStr = @InsertStr + '[total], [objec.ve]' 
  set @ValStr =   @ValStr  + cast(@contrTol as varchar(2)) + ',' + cast(@obj as varchar(2)) 
   
  --Insert contract records 
  set @InsertStr = 'insert into #DataTable([Date],' + @InsertStr + ') values(' 
  declare @contractStr nvarchar(1000) 
  set @contractStr = '' 
  set  @contractStr = @InsertStr +'''Contract''' + ',' + @ValStr + ')' 
  exec sp_executeSQL  @contractStr 
   
  --Insert NWA records 
  select @obj = (SELECT Nwa FROM USMC.MonthlyObjec.ve mo 
inner join MCRISS.DBO.RECRUITING_ORGANIZATION ro  
  on mo.Organiza.onId = ro.rowguid 
where Year = @Year and Month = @Month 
  and ( RecruiterID=@RecruiterId or (@RecruiterID is null and ro.ORGANIZATION_ID = @OrgId 
and RecruiterID = '00000000-0000-0000-0000-000000000000')))   
 if (@obj is null) 
 begin 
 select @obj = 0 
 end   
   set @nwaValStr =   @nwaValStr  + cast(@nwaTol as varchar(2)) + ',' + cast(@obj as varchar(2)) 
   set  @contractStr = @InsertStr +'''NWA''' + ',' + @nwaValStr + ')' 
   exec sp_executeSQL @contractStr 
    
   --Insert Interview records 
   select @obj = (SELECT Interview FROM USMC.MonthlyObjec.ve mo 
inner join MCRISS.DBO.RECRUITING_ORGANIZATION ro  
  on mo.Organiza.onId = ro.rowguid where Year = @Year and Month = @Month 
   and (RecruiterID=@RecruiterId or (@RecruiterID is null and ro.ORGANIZATION_ID = @OrgId 
and RecruiterID = '00000000-0000-0000-0000-000000000000')))  
 if (@obj is null) 
 begin 
 select @obj = 0 
 end    
   set @intValStr =   @intValStr  + cast(@intTol as varchar(2)) + ',' + cast(@obj as varchar(2)) 
   set  @contractStr = @InsertStr +'''Interview''' + ',' + @intValStr + ')' 
   exec sp_executeSQL @contractStr    
   
 select @obj = 0 
-- end    
   set @apptValStr =   @apptValStr  + cast(@apptTol as varchar(2)) + ',' + cast(@obj as varchar(2)) 
   set  @contractStr = @InsertStr +'''Appointment''' + ',' + @apptValStr + ')' 
   exec sp_executeSQL @contractStr 
 
select * from #DataTable 
 
DROP TABLE #DataTable 
DROP TABLE #MonthTable 
DROP TABLE #NWA 
DROP TABLE #Contract 
DROP TABLE #NWAGraduate 
DROP TABLE #NWASenior 
DROP TABLE #ContractSenior 
DROP TABLE #ContractGraduate 
DROP TABLE #GraduateProspect 
DROP TABLE #SeniorProspect 
DROP TABLE #DailyCounts 
  
END 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>