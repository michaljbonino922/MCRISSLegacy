<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetQSNHistory]" directorySegmentName="seg_9" id="8B568ED6-A41A-568E-E9D4-E4B0D2EB0E5C">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[( 
 @intFiscalYear  int, 
 @strQSNNumber    char(9) = NULL, 
 @intOrgID   int = NULL, 
 @strRUC   varchar(5) = NULL, 
 @strMOSCode   varchar(4) = NULL, 
 @strMSCCode  varchar(4) = NULL, 
 @dtOriginalPivotDate  date.me = NULL, 
 @dtNewPivotDate   date.me = NULL, 
 @strChangedBy  varchar(50) = NULL, 
 @dtDateMoved  date.me = NULL, 
 @intSortBy   int, 
 @strBCN varchar(20) = NULL, 
 @strKCN varchar(20) = NULL 
-- @intStar.ngRow  int = 1, 
-- @intPageSize  int = 15 
) 
AS 
 
-- from sp_GetQSNPivotDateHistory 
 
/* 
------------------------------------------------------------------------------ 
--- Create Temp Tables --- 
 
The #SUBORGS table will be populated with all OrgIDs that are in the child hierarchy 
of the input @intOrgID.  USED is a bit that is necessary for popula.ng the data 
to .ag whether an OrgID's children have been joined yet.  This is to make 
sure the direct children of an OrgID are only inserted once. 
 
The #IDS table is used only to temporarily store the OrgIDs that children are being 
retrieved for.  Because it is an itera.ve process, this table is necessary so that 
we know which OrgIDs to toggle the USED .ag on in the #SUBORGS table. 
------------------------------------------------------------------------------ 
*/ 
CREATE TABLE #SUBORGS (ORG_ID int NOT NULL, ORG_TYPE varchar(3), USED bit NOT NULL) 
CREATE TABLE #IDS (ORG_ID int NOT NULL) 
 
-- Seed the temp table with the input OrgID 
INSERT INTO #SUBORGS 
SELECT ORGANIZATION_ID, 
 ORGANIZATION_TYPE, 
 0 
FROM RECRUITING_ORGANIZATION WITH (NOLOCK) 
WHERE ORGANIZATION_ID = @intOrgID 
 
-- Con.nue processing un.l we have goten to the RS level 
WHILE (SELECT COUNT(1) FROM #SUBORGS WHERE USED = 0 AND ORG_TYPE = 'RSS') = 0 
BEGIN 
 
-- Save all OrgIDs in the #SUBORGS table that we haven't goten children for yet. 
INSERT INTO #IDS 
SELECT ORG_ID 
FROM #SUBORGS 
WHERE USED = 0 
 
-- Insert new children (with Used .ag = 0) into the #SUBORGS table. 
INSERT INTO #SUBORGS 
SELECT OM.CHILD_ORGANIZATION_ID, RO.ORGANIZATION_TYPE, 0 
FROM ORGANIZATION_MAP OM WITH (NOLOCK) INNER JOIN #SUBORGS SO ON OM.PARENT_ORGANIZATION_ID = SO.ORG_ID AND SO.USED = 0 
 INNER JOIN RECRUITING_ORGANIZATION RO ON OM.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID 
 
-- Set the USED .ag to 1 for the OrgIDs that we just processed. 
UPDATE #SUBORGS 
SET USED = 1 
WHERE ORG_ID IN (SELECT * FROM #IDS) 
 
-- No need to save the OrgIDs that we just got children for.  They will remain in the #SUBORGS table 
-- and are now marked as used/processed. 
DELETE FROM #IDS 
 
END 
 
CREATE TABLE #TEMPQSNTABLE(ROWNUMBER int, QSN_ID char(9), ORGANIZATION varchar(45),RSS varchar(45),AssignedRSSName varchar(45),RssOrgID int,Assignedrssid int, RUC varchar(50), MOS varchar(82), GENDER char(1), MSC varchar(20), PREVIOUS_PIVOT_DATE date.me, NEW_PIVOT_DATE date.me, DATE_CHANGED date.me, CHANGED_BY varchar(50),BCN varchar(20),KCN varchar(20)) 
 
INSERT INTO #TEMPQSNTABLE 
SELECT 
 ROW_NUMBER() OVER (ORDER BY 
  CASE WHEN @intSortBy = 1 THEN Q.QSN_ID END, 
  CASE WHEN @intSortBy = 2 THEN PREVIOUS_PIVOT_DATE END DESC, 
  CASE WHEN @intSortBy = 3 THEN NEW_PIVOT_DATE END DESC, 
  CASE WHEN @intSortBy = 4 THEN DATE_CHANGED END DESC, 
  CASE WHEN @intSortBy = 5 THEN MSC.DESCRIPTION END, 
  CASE WHEN @intSortBy = 6 THEN H.USER_LOGIN END, 
  Q.QSN_ID 
 ) ROWNUMBER, 
 Q.QSN_ID, 
 RO.[NAME], 
CASE WHEN Q.CONTRACT_ID > 0 THEN ( SELECT RTRIM(RO.NAME)  
      FROM RECRUITING_ORGANIZATION RO INNER JOIN NWA N ON 
       N.ORGANIZATION_OF_RECORD_ID = RO.ORGANIZATION_ID 
       INNER JOIN CONTRACT C ON N.NWA_ID = C.NWA_ID AND  
       C.CONTRACT_ID = Q.CONTRACT_ID) 
  ELSE '' 
 END 
 AS RSS, 
CASE WHEN Q.CONTRACT_ID is null  THEN ( SELECT RTRIM(RO.NAME)  
      FROM RECRUITING_ORGANIZATION RO INNER JOIN QSN QS ON 
       QS.AssignedRssOrgId = RO.ORGANIZATION_ID and QS.QSN_ID = Q.QSN_ID ) 
  ELSE '' 
  
 END AS AssignedRssName, 
CASE WHEN Q.CONTRACT_ID > 0 THEN ( SELECT RO.ORGANIZATION_ID 
      FROM RECRUITING_ORGANIZATION RO INNER JOIN NWA N ON 
       N.ORGANIZATION_OF_RECORD_ID = RO.ORGANIZATION_ID 
       INNER JOIN CONTRACT C ON N.NWA_ID = C.NWA_ID AND  
       C.CONTRACT_ID = Q.CONTRACT_ID) 
  ELSE '' 
 END 
 AS RSSOrgID, 
CASE WHEN Q.CONTRACT_ID is null  THEN ( SELECT RO.ORGANIZATION_ID 
      FROM RECRUITING_ORGANIZATION RO INNER JOIN QSN QS ON 
       QS.AssignedRssOrgId = RO.ORGANIZATION_ID and QS.QSN_ID = Q.QSN_ID ) 
  ELSE '' 
  
 END AS assignedrssid, 
 MO.UNIT_NAME + ' - ' + Q.RUC AS RUC, 
 Q.MOS + ' - ' + M.SHORT_DESCRIPTION AS MOS, 
 Q.GENDER, 
 MSC.[DESCRIPTION] AS MSC, 
 H.PREVIOUS_PIVOT_DATE, 
 H.NEW_PIVOT_DATE, 
 H.DATE_CHANGED, 
 H.USER_LOGIN AS CHANGED_BY, 
 BONUS_CONTROL_NUMBER, 
 KICKER_CONTROL 
FROM QSN_PIVOT_DATE_HISTORY H WITH (NOLOCK) 
 INNER JOIN QSN Q ON H.QSN_ID = Q.QSN_ID 
 INNER JOIN RECRUITING_ORGANIZATION RO ON Q.RECRUITING_ORGANIZATION_ID = RO.ORGANIZATION_ID 
 INNER JOIN MARINE_ORGANIZATION MO ON Q.RUC = MO.PRESENT_RUC AND Q.MCC_CODE = MO.PRESENT_MCC 
 INNER JOIN MOS M ON Q.MOS = M.MOS_CODE 
 INNER JOIN MSC ON Q.MSC = MSC.CODE 
WHERE 
 Q.FY = @intFiscalYear 
 AND Q.QSN_ID = COALESCE(@strQSNNumber, Q.QSN_ID)   
 AND DATEDIFF(MONTH, H.PREVIOUS_PIVOT_DATE, COALESCE(@dtOriginalPivotDate, H.PREVIOUS_PIVOT_DATE)) = 0 
 AND DATEDIFF(MONTH, H.NEW_PIVOT_DATE, COALESCE(@dtNewPivotDate, H.NEW_PIVOT_DATE)) = 0 
 AND H.USER_LOGIN = COALESCE(@strChangedBy, H.USER_LOGIN) 
 AND DATEDIFF(DAY, H.DATE_CHANGED, COALESCE(@dtDateMoved, H.DATE_CHANGED)) = 0 
 AND Q.RUC = COALESCE(@strRUC, Q.RUC) 
 AND Q.MOS = COALESCE(@strMOSCode, Q.MOS) 
 AND MSC.CODE IN ( 
  SELECT DISTINCT i_msc.[CODE] 
  FROM MSC i_msc 
  WHERE (@strMSCCode IS NULL OR (@strMSCCode IS NOT NULL AND i_msc.CODE = @strMSCCode)) 
 ) 
 AND  
 ( Q.RECRUITING_ORGANIZATION_ID IN ( 
  SELECT ORG_ID 
  FROM #SUBORGS 
  WHERE ORG_TYPE = 'RS' 
  ) 
   OR 
      Q.AssignedRssOrgId IN ( 
  SELECT ORG_ID 
  FROM #SUBORGS 
  WHERE ORG_TYPE = 'RSS' 
  ) 
 ) 
 AND 
 ((@strBCN IS NULL) OR (BONUS_CONTROL_NUMBER = @strBCN)) 
 AND  
 ((@strKCN IS NULL) OR (KICKER_CONTROL = @strKCN)) 
ORDER BY ROWNUMBER 
 
SELECT * 
FROM #TEMPQSNTABLE 
--WHERE ROWNUMBER BETWEEN @intStar.ngRow AND (@intStar.ngRow + @intPageSize) 
 
DROP TABLE #TEMPQSNTABLE]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>