<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectPriorService]" directorySegmentName="seg_15" id="BF8EF5E8-34DF-520F-514C-77F472B8C476">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@ID uniqueiden..er, 
 @ProspectID uniqueiden..er, 
 @Ac.veDutyStartDate date.me, 
 @Ac.veDutyEndDate date.me, 
 @ServiceID int, 
 @IsCurrentlyInReserves bit, 
 @EndObligatedServiceDate date.me, 
 @Separa.onCode varchar(4), 
 @ReenlistmentCode varchar(2), 
 @ServiceCharacter char(1), 
 @RecordStatus int, 
 @LastUpdateBy uniqueiden..er 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
 
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF EXISTS(SELECT ID FROM USMC.ProspectPriorService WHERE ID = @ID) 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE USMC.ProspectPriorService 
  SET  
   Ac.veDutyStartDate =  @Ac.veDutyStartDate, 
   Ac.veDutyEndDate =  @Ac.veDutyEndDate, 
   ServiceID =  @ServiceID, 
   IsCurrentlyInReserves =  @IsCurrentlyInReserves, 
   EndObligatedServiceDate =  @EndObligatedServiceDate, 
   Separa.onCode =  @Separa.onCode, 
   ReenlistmentCode =  @ReenlistmentCode, 
   ServiceCharacter =  @ServiceCharacter, 
   RecordStatus =  @RecordStatus, 
   LastUpdateDate =  GETDATE(), 
   LastUpdateBy =  @LastUpdateBy 
     WHERE ID = @ID   
    
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO USMC.ProspectPriorService 
           (ID 
           ,ProspectID 
           ,Ac.veDutyStartDate 
           ,Ac.veDutyEndDate 
           ,ServiceID 
           ,IsCurrentlyInReserves 
           ,EndObligatedServiceDate 
           ,Separa.onCode 
           ,ReenlistmentCode 
           ,ServiceCharacter 
           ,RecordStatus 
           ,LastUpdateDate 
           ,LastUpdateBy) 
     VALUES 
           (@ID, 
   @ProspectID, 
   @Ac.veDutyStartDate, 
   @Ac.veDutyEndDate, 
   @ServiceID, 
   @IsCurrentlyInReserves, 
   @EndObligatedServiceDate, 
   @Separa.onCode, 
   @ReenlistmentCode, 
   @ServiceCharacter, 
   @RecordStatus, 
   GETDATE(), 
   @LastUpdateBy 
   ) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>