<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[TrackAssignRecruiterChange]" directorySegmentName="seg_15" id="AC39A25D-F9E1-9A10-98C1-E85C0A7349F0">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@RecruiterChanges xml 
AS 
BEGIN 
  
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
 SELECT  
  ParamValues.ID.value('./@SchoolCode','int') AS SchoolCode 
  ,ParamValues.ID.value('./@SchoolYear','int') AS SchoolYear 
  ,ParamValues.ID.value('./@Pro.leID','varchar(40)') AS Pro.leID 
  ,ParamValues.ID.value('./@OrgID','int') AS OrgID 
  ,ParamValues.ID.value('./@OldRecruiter','int') AS OldRecruiter 
  ,ParamValues.ID.value('./@NewRecruiter','int') AS NewRecruiter 
 INTO #ChangeList 
 FROM  
 @RecruiterChanges.nodes('/SchoolChanges/Item') as ParamValues(ID) 
 
 DECLARE @BeginDate date.me 
 
 DECLARE ListCursor CURSOR FOR SELECT * FROM #ChangeList  
 
 DECLARE  
 @SchoolCode int, 
 @SchoolYear int, 
 @OrgID int, 
 @Pro.leID uniqueiden..er, 
 @OldRercruiterID int, 
 @NewRecruiterID int 
 
 OPEN ListCursor 
   
 FETCH NEXT FROM ListCursor INTO  
 @SchoolCode, @SchoolYear, @Pro.leID, @OrgID, @OldRercruiterID, @NewRecruiterID 
 
 WHILE (@@FETCH_STATUS = 0) 
 BEGIN 
  
  -- not the .rst change in the year 
  IF EXISTS (SELECT ID FROM [USMC].[SchoolRecruiterHistory]  
       WHERE SCHOOLCODE = @SchoolCode AND SCHOOLYEAR = @SchoolYear) 
  BEGIN 
   SELECT  
    @BeginDate = MAX(EndDate)  
   FROM  
    [USMC].[SchoolRecruiterHistory]  
   WHERE  
    SCHOOLCODE = @SchoolCode  
    AND SCHOOLYEAR = @SchoolYear  
      
   SET @BeginDate = DATEADD(second, 1, @BeginDate) 
        
  END 
  ELSE -- 1st recruiter change for the year 
  BEGIN 
   SET @BeginDate = CONVERT (date.me, (STR(@SchoolYear -1) + '/7/1'), 101) 
  END 
 
  INSERT INTO [USMC].[SchoolRecruiterHistory] 
       ([ID] 
       ,[SchoolCode] 
       ,[SchoolYear] 
       ,[RecruiterID] 
       ,[OrgID] 
       ,[NewRecruiterID] 
       ,[NewOrgID] 
       ,[BeginDate] 
       ,[EndDate] 
       ,[LastUpdateDate] 
       ,[LastUpdateBy]) 
    VALUES 
       ( NEWID() 
     ,@SchoolCode 
     ,@SchoolYear 
     ,@OldRercruiterID 
     ,@OrgID 
     ,@NewRecruiterID 
     ,@OrgID 
     ,@BeginDate 
     ,GETDATE() 
     ,GETDATE() 
     ,'SA') 
 
  DECLARE @SchoolRowGuid uniqueiden..er 
  DECLARE @OldRecruiterRowGuid uniqueiden..er 
  DECLARE @NewRecruiterRowGuid uniqueiden..er 
   
   
  SELECT @SchoolRowGuid = rowguid  
  FROM  
   Mcriss.dbo.HIGH_SCHOOL 
  WHERE  
   School_Code = @SchoolCode 
   
  -- Find all prospect belongs to the school with pac status  
  SELECT p.ProspectId 
  INTO #ProspectList  
  FROM  
   PROSPECTING.USMC.Prospect p 
   INNER JOIN PROSPECTING.USMC.ProspectSchool s 
    ON p.ProspectId = s.ProspectId 
  WHERE  
   s.SchoolId = @SchoolRowGuid 
   AND p.NwaId IS NULL  
   AND ProspectDisposi.onId IN (1,2,3,4) 
   
   
  SELECT @OldRecruiterRowGuid = rowguid FROM MCRISS.dbo.RECRUITING_PERSON 
  WHERE  
   RECRUITING_PERSON_ID = @OldRercruiterID 
 
  SELECT @NewRecruiterRowGuid = rowguid FROM MCRISS.dbo.RECRUITING_PERSON 
  WHERE  
   RECRUITING_PERSON_ID = @NewRecruiterID 
 
  --- reassign the recruiter to the new one 
  --- as long as the prospect is in PAC status 
  --- Gradua.on year does not mater 
  UPDATE [USMC].[Prospect] 
   SET Recrui.ngPersonId = @NewRecruiterRowGuid 
  FROM  
   [USMC].[Prospect] p 
   INNER JOIN #ProspectList l 
   ON p.ProspectId = l.ProspectId  
   
   
  SELECT DISTINCT eo.EventID 
  INTO #EventList 
  FROM  
   RSSOSS.USMC.EventOwners eo  
   INNER JOIN RSSOSS.USMC.Event e 
    ON eo.EventID = e.ID  
   INNER JOIN RSSOSS.USMC.EventSubject es 
    ON es.EventID = eo.EventID 
   INNER JOIN #ProspectList p 
    ON p.ProspectId = es.SubjectId 
  WHERE 
   e.StartDate >= GETDATE()  
    
  UPDATE RSSOSS.USMC.EventOwners  
  SET  
   OwnerID = @NewRecruiterRowGuid 
  FROM  
   RSSOSS.USMC.EventOwners eo 
   INNER JOIN #EventList el 
    ON eo.EventID = el.EventID 
   
  --- reassign HSCC visit card 
  SELECT DISTINCT eo.EventID 
  INTO #HsccList 
  FROM  
   RSSOSS.USMC.EventOwners eo  
   INNER JOIN RSSOSS.USMC.Event e 
    ON eo.EventID = e.ID  
   INNER JOIN RSSOSS.USMC.EventSubject es 
    ON es.EventID = eo.EventID 
  WHERE 
   e.StartDate >= GETDATE() 
   AND es.SubjectId = @Pro.leID 
    
  UPDATE RSSOSS.USMC.EventOwners  
  SET  
   OwnerID = @NewRecruiterRowGuid 
  FROM  
   RSSOSS.USMC.EventOwners eo 
   INNER JOIN #HsccList el 
    ON eo.EventID = el.EventID 
   
   
  DROP TABLE #ProspectList 
  DROP TABLE #EventList 
   
  FETCH NEXT FROM ListCursor INTO  
   @SchoolCode, @SchoolYear, @Pro.leID, @OrgID, @OldRercruiterID, @NewRecruiterID 
 END 
 
 CLOSE ListCursor 
 DEALLOCATE ListCursor 
  
 DROP TABLE #ChangeList 
 DROP TABLE #HsccList 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>