<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectAsvabFromMcriss]" directorySegmentName="seg_15" id="1A678631-1105-05B9-48C7-3CA175F5A6CC">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@MarineCandidateID   int 
 ,@OldRecVersion      varchar(3) 
 ,@OldRecAsvabDate    date.me 
 ,@Version       varchar(3) 
 ,@AsvabDate     date.me 
 ,@GSSubTest     varchar(2) 
 ,@ARSubTest     varchar(2) 
 ,@WKSubTest     varchar(2) 
 ,@PCSubTest     varchar(2) 
 ,@NOSubTest     varchar(2) 
 ,@CSSubTest     varchar(2) 
 ,@ASSubTest     varchar(2) 
 ,@MKSubTest     varchar(2) 
 ,@MCSubTest     varchar(2) 
 ,@EISubTest     varchar(2) 
 ,@VESubTest     varchar(2) 
 ,@AFQTScore     int 
 ,@GTScore     int 
 ,@ELScore     int 
 ,@CLScore     int 
 ,@MMScore     int 
 ,@MepsOrganiza.onID  int 
 ,@UserLogin     varchar(50) 
 ,@AOSubTest     varchar(2) = NULL 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @ProspectID uniqueiden..er 
  
 SELECT Top 1 
  @ProspectID = ProspectId 
 FROM USMC.Prospect 
 WHERE 
  NwaId IN (SELECT rowguid FROM MCRISS.dbo.NWA  
      WHERE  
      MARINE_CANDIDATE_ID = @MarineCandidateID) 
       
 IF @ProspectID IS NOT NULL 
 BEGIN 
   
  DECLARE @ID uniqueiden..er 
   
  SELECT @ID = ID FROM USMC.ProspectAsvab 
  WHERE  
   [ProspectID] = @ProspectID 
   AND [Version] = @OldRecVersion 
   AND YEAR([ExamDate]) = YEAR(@OldRecAsvabDate) 
   AND MONTH([ExamDate]) = MONTH(@OldRecAsvabDate) 
   AND DAY([ExamDate]) = DAY(@OldRecAsvabDate) 
   AND DATEPART(hour,[ExamDate]) = DATEPART(hour,@OldRecAsvabDate) 
   AND DATEPART(minute,[ExamDate]) = DATEPART(minute,@OldRecAsvabDate) 
   AND DATEPART(second,[ExamDate]) = DATEPART(second,@OldRecAsvabDate) 
     
  -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
  IF @ID IS NOT NULL 
  BEGIN 
   -- if already exists.  UPDATE. 
    
   UPDATE [PROSPECTING].[USMC].[ProspectAsvab] 
   SET   
     [ExamDate] = @AsvabDate 
     ,[GS_Score] = @GSSubTest 
     ,[AR_Score] = @ARSubTest 
     ,[AO_Score] = @AOSubTest 
     ,[WK_Score] = @WKSubTest 
     ,[PC_Score] = @PCSubTest 
     ,[NO_Score] = @NOSubTest 
     ,[CS_Score] = @CSSubTest 
     ,[AS_Score] = @ASSubTest 
     ,[MK_Score] = @MKSubTest 
     ,[MC_Score] = @MCSubTest 
     ,[EI_Score] = @EISubTest 
     ,[VE_Score] = @VESubTest 
     ,[GT_Score] = @GTScore 
     ,[EL_Score] = @ELScore 
     ,[CL_Score] = @CLScore 
     ,[MM_Score] = @MMScore 
     ,[AFQT] = @AFQTScore 
     ,[MepsOrgID] = @MepsOrganiza.onID 
     ,[Version] = @Version 
     ,[LastUpdateDate] = GETDATE() 
     ,[LastUpdateBy] = @UserLogin 
   WHERE  
    ID = @ID 
  END 
  ELSE 
  BEGIN 
   -- if does not exist.  INSERT. 
   INSERT INTO [PROSPECTING].[USMC].[ProspectAsvab] 
           ([ID] 
           ,[ProspectID] 
           ,[ExamDate] 
           ,[GS_Score] 
           ,[AR_Score] 
     ,[AO_Score] 
           ,[WK_Score] 
           ,[PC_Score] 
           ,[NO_Score] 
           ,[CS_Score] 
           ,[AS_Score] 
           ,[MK_Score] 
           ,[MC_Score] 
           ,[EI_Score] 
           ,[VE_Score] 
           ,[GT_Score] 
           ,[EL_Score] 
           ,[CL_Score] 
           ,[MM_Score] 
           ,[AFQT] 
           ,[MepsOrgID] 
           ,[Version] 
           ,[LastUpdateDate] 
           ,[LastUpdateBy]) 
     VALUES 
           (NEWID() 
           ,@ProspectID 
           ,@AsvabDate 
           ,@GSSubTest 
           ,@ARSubTest 
     ,@AOSubTest 
           ,@WKSubTest 
           ,@PCSubTest 
           ,@NOSubTest 
           ,@CSSubTest 
           ,@ASSubTest 
           ,@MKSubTest 
           ,@MCSubTest 
           ,@EISubTest 
           ,@VESubTest 
           ,@GTScore 
           ,@ELScore 
           ,@CLScore 
           ,@MMScore 
           ,@AFQTScore 
           ,@MepsOrganiza.onID 
           ,@Version 
           ,GETDATE() 
           ,@UserLogin) 
  END 
 END 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>