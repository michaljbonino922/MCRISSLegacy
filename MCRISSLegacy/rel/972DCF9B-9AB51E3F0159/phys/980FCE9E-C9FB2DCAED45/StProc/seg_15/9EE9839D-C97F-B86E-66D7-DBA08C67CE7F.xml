<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdatePhysicalIst]" directorySegmentName="seg_15" id="9EE9839D-C97F-B86E-66D7-DBA08C67CE7F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@ID uniqueiden..er, 
 @ProspectID uniqueiden..er, 
 @TestDate date.me, 
 @Height decimal(4,2), 
 @Weight int, 
 @RunTimeMinute int, 
 @RunTimeSecond int, 
 @PuHang int, 
 @Crunch int, 
 @LastUpdateBy uniqueiden..er, 
 @PullUp int = null, 
 @FlexedArmHang int = null, 
 @AmmoCanLi. int = null, 
 @PushUp int = null, 
 @PlankMinute int = null, 
 @PlankSecond int = null, 
 @Note varchar(255) = null 
    
 
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
 
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF EXISTS(SELECT ID FROM USMC.ProspectPhysicalIst WHERE ID = @ID) 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE USMC.ProspectPhysicalIst 
  SET  
   TestDate = @TestDate 
   ,Height = @Height 
   ,Weight = @Weight 
   ,RunTimeMinute = @RunTimeMinute 
   ,RunTimeSecond = @RunTimeSecond 
   ,PuHang = @PuHang 
   ,Crunch = @Crunch 
   ,LastUpdateDate = GETDATE() 
   ,LastUpdateBy = @LastUpdateBy 
   ,Pullup = @PullUp 
   ,Hang = @FlexedArmHang 
   ,AmmoCanLi. = @AmmoCanLi. 
   ,Pushup = @PushUp 
   ,PlankMinute = @PlankMinute 
   ,PlankSecond = @PlankSecond 
   ,Note = @Note 
  WHERE ID = @ID  
 
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO USMC.ProspectPhysicalIst 
           (ID 
           ,ProspectID 
           ,TestDate 
           ,Height 
           ,Weight 
           ,RunTimeMinute 
           ,RunTimeSecond 
           ,PuHang 
           ,Crunch 
           ,LastUpdateDate 
           ,LastUpdateBy 
           ,Pullup 
     ,Pushup 
           ,Hang 
           ,AmmoCanLi. 
     ,PlankMinute 
     ,PlankSecond 
     ,Note) 
  VALUES 
           (@ID 
   ,@ProspectID 
   ,@TestDate 
   ,@Height 
   ,@Weight 
   ,@RunTimeMinute 
   ,@RunTimeSecond 
   ,@PuHang 
   ,@Crunch 
   ,GETDATE() 
   ,@LastUpdateBy 
   ,@PullUp 
   ,@PushUp 
   ,@FlexedArmHang 
   ,@AmmoCanLi. 
   ,@PlankMinute 
   ,@PlankSecond 
   ,@Note) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>