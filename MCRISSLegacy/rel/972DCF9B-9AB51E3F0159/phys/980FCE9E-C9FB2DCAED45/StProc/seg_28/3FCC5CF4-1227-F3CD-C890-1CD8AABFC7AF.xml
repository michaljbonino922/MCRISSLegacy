<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc70" directorySegmentName="seg_28" id="3FCC5CF4-1227-F3CD-C890-1CD8AABFC7AF">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:47 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[as 
 
declare @objname nvarchar(776) 
set @objname = null   -- The object we want size on. 
declare @updateusage varchar(5) 
set @updateusage = 'false'  -- Param. for specifying that 
    -- usage info. should be updated. 
 
declare @id int   -- The object id of @objname. 
declare @type character(2) -- The object type. 
declare @pages int   -- Working variable for size calc. 
declare @dbname sysname 
declare @dbsize dec(15,0) 
declare @logsize dec(15) 
declare @bytesperpage dec(15,0) 
declare @pagesperMB  dec(15,0) 
 
/*Create temp tables before any DML to ensure dynamic 
**  We need to create a temp table to do the calcula.on. 
**  reserved: sum(reserved) where indid in (0, 1, 255) 
**  data: sum(dpages) where indid < 2 + sum(used) where indid = 255 (text) 
**  indexp: sum(used) where indid in (0, 1, 255) - data 
**  unused: sum(reserved) - sum(used) where indid in (0, 1, 255) 
*/ 
create table #spt_space 
( 
 rows  int null, 
 reserved dec(15) null, 
 data  dec(15) null, 
 indexp  dec(15) null, 
 unused  dec(15) null, 
 dbname  varchar(15), 
 dbsize  varchar(15),  
 unalloc_spc varchar(15) 
) 
 
/* 
**  Check to see if user wants usages updated. 
*/ 
 
 
/* 
**  Check to see that the objname is local. 
*/ 
 
/* 
**  Update usages if user speci.ed to do so. 
*/ 
 
--if @updateusage = 'true' 
 begin 
  if @objname is null 
   dbcc updateusage(0) with no_infomsgs 
  else 
   dbcc updateusage(0,@objname) with no_infomsgs 
  print ' ' 
 end 
 
 
set nocount on 
 
/* 
**  If @id is null, then we want summary data. 
*/ 
/* Space used calculated in the following way 
** @dbsize = Pages used 
** @bytesperpage = d.low (where d = master.dbo.spt_values) is 
** the # of bytes per page when d.type = 'E' and 
** d.number = 1. 
** Size = @dbsize * d.low / (1048576 (OR 1 MB)) 
*/ 
if @id is null 
begin 
 
 print ' ' 
 /* 
 **  Now calculate the summary data. 
 **  reserved: sum(reserved) where indid in (0, 1, 255) 
 */ 
 insert into #spt_space (reserved) 
  select sum(convert(dec(15),reserved)) 
   from sysindexes 
    where indid in (0, 1, 255) 
 
 /* 
 ** data: sum(dpages) where indid < 2 
 ** + sum(used) where indid = 255 (text) 
 */ 
 select @pages = sum(convert(dec(15),dpages)) 
   from sysindexes 
    where indid < 2 
 select @pages = @pages + isnull(sum(convert(dec(15),used)), 0) 
  from sysindexes 
   where indid = 255 
 update #spt_space 
  set data = @pages 
 
 
 /* index: sum(used) where indid in (0, 1, 255) - data */ 
 update #spt_space 
  set indexp = (select sum(convert(dec(15),used)) 
    from sysindexes 
     where indid in (0, 1, 255)) 
       - data 
 
 /* unused: sum(reserved) - sum(used) where indid in (0, 1, 255) */ 
 update #spt_space 
  set unused = reserved 
    - (select sum(convert(dec(15),used)) 
     from sysindexes 
      where indid in (0, 1, 255)) 
 
select @dbsize = sum(convert(dec(15),size)) 
  from dbo.sys.les 
  where (status & 64 = 0) 
 
 select @logsize = sum(convert(dec(15),size)) 
  from dbo.sys.les 
  where (status & 64 <> 0) 
 
 select @bytesperpage = low 
  from master.dbo.spt_values 
  where number = 1 
   and type = 'E' 
 select @pagesperMB = 1048576 / @bytesperpage 
/* 
 select  database_name = db_name(), 
  database_size = 
   ltrim(str((@dbsize + @logsize) / @pagesperMB,15,2) + ' MB'), 
  'unallocated space' = 
   ltrim(str((@dbsize - 
    (select sum(convert(dec(15),reserved)) 
     from sysindexes 
      where indid in (0, 1, 255) 
    )) / @pagesperMB,15,2)+ ' MB'), 'nothing'='0 KB' 
 
*/ 
--union 
 
update #spt_space 
 set dbname=db_name(), 
 dbsize= ltrim(str((@dbsize + @logsize) / @pagesperMB,15,2) + ' MB'), 
 unalloc_spc=ltrim(str((@dbsize - 
    (select sum(convert(dec(15),reserved)) 
     from sysindexes 
      where indid in (0, 1, 255) 
    )) / @pagesperMB,15,2)+ ' MB') 
 
 select dbname,dbsize,unalloc_spc, 
  reserved = ltrim(str(reserved * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  data = ltrim(str(data * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  index_size = ltrim(str(indexp * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  unused = ltrim(str(unused * d.low / 1024.,15,0) + 
    ' ' + 'KB') 
  from #spt_space, master.dbo.spt_values d 
  where d.number = 1 
   and d.type = 'E' 
   
 
end 
 
/* 
**  We want a par.cular object. 
*/ 
else 
begin 
 /* 
 **  Now calculate the summary data. 
 **  reserved: sum(reserved) where indid in (0, 1, 255) 
 */ 
 insert into #spt_space (reserved) 
  select sum(reserved) 
   from sysindexes 
    where indid in (0, 1, 255) 
     and id = @id 
 
 /* 
 ** data: sum(dpages) where indid < 2 
 ** + sum(used) where indid = 255 (text) 
 */ 
 select @pages = sum(dpages) 
   from sysindexes 
    where indid < 2 
     and id = @id 
 select @pages = @pages + isnull(sum(used), 0) 
  from sysindexes 
   where indid = 255 
    and id = @id 
 update #spt_space 
  set data = @pages 
 
 
 /* index: sum(used) where indid in (0, 1, 255) - data */ 
 update #spt_space 
  set indexp = (select sum(used) 
    from sysindexes 
     where indid in (0, 1, 255) 
      and id = @id) 
       - data 
 
 /* unused: sum(reserved) - sum(used) where indid in (0, 1, 255) */ 
 update #spt_space 
  set unused = reserved 
    - (select sum(used) 
     from sysindexes 
      where indid in (0, 1, 255) 
       and id = @id) 
 update #spt_space 
  set rows = i.rows 
   from sysindexes i 
    where i.indid < 2 
     and i.id = @id 
 
 select name = object_name(@id), 
  rows = convert(char(11), rows), 
  reserved = ltrim(str(reserved * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  data = ltrim(str(data * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  index_size = ltrim(str(indexp * d.low / 1024.,15,0) + 
    ' ' + 'KB'), 
  unused = ltrim(str(unused * d.low / 1024.,15,0) + 
    ' ' + 'KB') 
 from #spt_space, master.dbo.spt_values d 
  where d.number = 1 
   and d.type = 'E' 
end]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>