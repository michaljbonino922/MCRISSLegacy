<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetListSchedulingCardRows]" directorySegmentName="seg_13" id="985647D2-492B-F69F-07F8-39B876822333">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[( 
    @OrgId uniqueiden..er = null, 
 @LastName varchar(75) = null, 
 @FirstName varchar(75) = null, 
 @SSN varchar(9) = null, 
 @DateCreatedStart date.me = null, 
 @DateCreatedEnd date.me = null, 
 @Ac.onDatedStart date.me = null, 
 @Ac.onDatedEnd date.me =  null, 
 @RecruiterId uniqueiden..er = null 
)         
 
AS 
 
SET NOCOUNT ON 
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
DECLARE @Organiza.onID INT  
 
SELECT @Organiza.onID = ORGANIZATION_ID FROM MCRISS.DBO.RECRUITING_ORGANIZATION WHERE rowguid = @orgid   
 
SELECT 
 rp.RECRUITING_PERSON_ID,  
 rp.rowguid, 
 rp.RECRUITING_ROLE_ID, 
 rp.RANK_CODE, 
 rcrtr.LAST_NAME, 
 rcrtr.FIRST_NAME, 
 rcrtr.LEGAL_MIDDLE_NAME 
INTO #Recrui.ngPerson 
FROM [MCRISS].[dbo].[RECRUITING_PERSON] rp  
INNER JOIN [MCRISS].[dbo].[PERSON] rcrtr ON rp.RECRUITING_PERSON_ID = rcrtr.PERSON_ID 
WHERE ((rp.RowGuid = @RecruiterId AND @RecruiterId IS NOT NULL) OR (@RecruiterId IS NULL)) 
 
SELECT 
 hsp.rowguid AS SchoolPro.leId, 
 hs.rowguid AS SchoolId, 
 hsp.SCHOOL_YEAR, 
 hsp.RECRUITER_ID, 
 hs.HIGHSCHOOL_NAME 
INTO #HighSchoolPro.le 
FROM 
MCRISS.dbo.HIGH_SCHOOL hs 
INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp ON hs.SCHOOL_CODE = hsp.SCHOOL_CODE 
WHERE ((hs.ORGANIZATION_ID = @Organiza.onID AND @Organiza.onID IS NOT NULL) OR @Organiza.onID = NULL)  
  
SELECT DISTINCT  
 ie.SchoolId,  
 ie.Gradua.onYear AS SchoolYear,  
 ie.LastUpdateDate,  
 ie.ImportEventId,  
 ie.ImportEventStatusTypeId, 
 ie.Recrui.ngOrganiza.onId 
INTO #TempListSchedulingGrid 
FROM             
 USMC.ImportEvent AS ie  
WHERE         
ie.SchoolId IS NOT NULL   
AND (year(getdate())-3) < ie.Gradua.onYear  
  
SELECT DISTINCT  
 ie.SchoolId,  
 ie.SchoolYear,  
 ie.LastUpdateDate,  
 ie.ImportEventId,  
 ie.Recrui.ngOrganiza.onId 
INTO #ListSchedulingGrid 
FROM #TempListSchedulingGrid ie  
WHERE ie.LastUpdateDate = ( SELECT         
       MAX(LastUpdateDate) AS Expr1 
                            FROM             
        #TempListSchedulingGrid AS ie3 
       WHERE         
        ie3.SchoolId = ie.SchoolId  
        AND ie3.SchoolYear = ie.SchoolYear 
        AND ie3.ImportEventStatusTypeId = 3 
       )  
ORDER BY ie.SchoolId, ie.LastUpdateDate DESC 
 
CREATE TABLE #ListSchedulingCard 
 (   
   ApplicantAssetID uniqueiden..er 
  ,ApplicantAssetName VARCHAR(300) 
  ,CardID uniqueiden..er 
  ,CreateDate DATETIME 
  ,RecruiterId uniqueiden..er 
  ,Recruiter VARCHAR(300) 
  ,RecruiterShortName VARCHAR(300) 
  ,EventID uniqueiden..er 
  ,EventType varchar(300) 
  ,EventTypeOther varchar(300) 
  ,NextScheduledEvent date.me 
 ) 
 
-- Find all events with subject id of pro.le id and earliest future ac.on date 
 SELECT Pro.leId,  EventID, StartDATE, EventType,EventTypeOther 
 INTO #Event 
 FROM 
 ( 
  SELECT Rank() OVER (Par..on BY Pro.leId Order by StartDate) as RecRank 
  ,* 
  FROM 
  (  
   SELECT hsp.SchoolPro.leId as Pro.leId,  
   e.Id as EventID,  
   e.StartDATE, 
   et.[Type] as EventType, 
   e.EventTypeOther  
   FROM  
       #ListSchedulingGrid ls 
    INNER JOIN #HighSchoolPro.le hsp 
     ON ls.SchoolId = hsp.SchoolId AND hsp.School_Year = ls.SchoolYear 
    INNER JOIN RSSOSS.USMC.EventSubject es  
     ON es.SubjectID = hsp.SchoolPro.leId 
    INNER JOIN RSSOSS.USMC.Event e  
     ON e.Id = es.EventId AND  e.EventSourceId = 20  
    inner join [RSSOSS].[USMC].[EventType] et on et.ID = e.EventTypeId 
   WHERE  
    e.StartDate >= GETDATE() 
  ) t1 
 ) t2 
 WHERE RecRank =  1 
  
  
INSERT INTO #ListSchedulingCard 
SELECT 
 hsp.SchoolPro.leId AS ApplicantAssetId 
 ,hsp.HIGHSCHOOL_NAME + '-' + cast(ls.Schoolyear as varchar(5)) as ApplicantAssetName 
 ,a.ImportEventId AS CardId 
 ,a.DateStarted AS CreateDate  
 ,rp.rowguid AS RecruiterId 
 ,COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
   COALESCE(RTRIM(rp.LAST_NAME), SPACE(0))  + SPACE(1) +  
   COALESCE(RTRIM(rp.FIRST_NAME), SPACE(0)) + SPACE(1) +  
   COALESCE(RTRIM(rp.LEGAL_MIDDLE_NAME), SPACE(0)) AS Recruiter 
 ,COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
   COALESCE(RTRIM(rp.LAST_NAME), SPACE(0)) AS RecruiterShortName 
 ,hse.EventID 
 ,hse.EventType 
 ,hse.EventTypeOther 
    ,hse.StartDate AS NextScheduledEvent 
FROM    
 #ListSchedulingGrid ls 
 INNER JOIN USMC.ImportEvent AS a on ls.ImportEventId = a.importeven.d  
 INNER JOIN #HighSchoolPro.le hsp ON hsp.SchoolId = ls.SchoolId AND hsp.School_Year = ls.SchoolYear 
 INNER JOIN #Recrui.ngPerson rp ON hsp.RECRUITER_ID = rp.RECRUITING_PERSON_ID  
 LEFT OUTER JOIN #Event hse ON hse.Pro.leId = hsp.SchoolPro.leId 
WHERE (LEFT(a.DateStarted,11) >= Coalesce(@DateCreatedStart, LEFT(a.DateStarted,11))) 
 AND (LEFT(a.DateStarted,11) <= Coalesce(@DateCreatedEnd, LEFT(a.DateStarted,11))) 
 
   
IF (@Ac.onDatedStart is null and @Ac.onDatedEnd is null) 
     SELECT  DISTINCT *  
     FROM #ListSchedulingCard 
ELSE 
    SELECT DISTINCT lc.*  
 FROM #ListSchedulingCard lc  
 INNER JOIN [RSSOSS].[USMC].EventSubject es ON es.SubjectID = lc.ApplicantAssetId 
 INNER JOIN RSSOSS.USMC.Event e ON e.id = es.even.d AND e.EventSourceId = 20 
 WHERE  
  ((LEFT(e.StartDate,11) >= Coalesce(@Ac.onDatedStart, LEFT(e.StartDate,11))) 
  AND (LEFT(e.StartDate,11) <= Coalesce(@Ac.onDatedEnd, LEFT(e.StartDate,11)))  ) 
           
ORDER BY ApplicantAssetName 
 
DROP TABLE #Event     
DROP TABLE #HighSchoolPro.le 
DROP TABLE #Recrui.ngPerson 
DROP TABLE #TempListSchedulingGrid 
DROP TABLE #ListSchedulingGrid 
DROP TABLE #ListSchedulingCard]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>