<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetHSCCByFYSector]" directorySegmentName="seg_13" id="4164F6B9-D536-DFF9-B168-6A4E0EC0153A">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@OrgUnitId int, 
     @FiscalYear int, 
     @Sector varchar(10)   
   
AS 
BEGIN 
   
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
 
 DECLARE @SchoolYear int 
 DECLARE @SchoolYearStartDate date.me 
 DECLARE @SchoolYearEndDate date.me 
  
 SET @SchoolYear = @FiscalYear 
 SET @SchoolYearStartDate = Convert(date.me, str(@SchoolYear-1)+'/7/1', 101)  
 SET @SchoolYearEndDate =   Convert(date.me, str(@SchoolYear)+'/6/30', 101)   
 
 -- Get all the shcools for the org 
 -- should not be closed for the school year 
 SELECT DISTINCT hs.* 
 INTO #SchoolList 
 FROM  
  MCRISS.dbo.High_School hs 
  INNER JOIN MCRISS.USMC.vwDecendentRecrui.ngOrgs c 
   ON hs.ORGANIZATION_ID = c.decendent  
 WHERE  
  (hs.ORGANIZATION_ID = @OrgUnitId OR c.Parent = @OrgUnitId) 
  AND (  
    E.ec.ve_Date IS NULL OR 
    ( E.ec.ve_Date IS NOT NULL AND 
      ((  hs.DELETED <> 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate) OR 
       (  hs.DELETED = 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate AND UPDATE_DATE >= @SchoolYearStartDate) 
      ) 
    ) 
   ) 
  AND hs.School_Type <> 'COL' and hs.School_Type <> '4Y' 
 
 
 SELECT ie.* 
 INTO #ListScheduleCard  
 FROM  
  PROSPECTING.USMC.ImportEvent ie 
  INNER JOIN #SchoolList hs 
   ON ie.SchoolId = hs.rowguid 
  INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org 
         ON org.ORGANIZATION_ID = hs.ORGANIZATION_ID 
  INNER JOIN  
  ( 
   SELECT  
    ie3.SchoolId, Gradua.onYear,  
    Max(LastUpdateDate) as LastUpdateDate, Max(ImportEventId) ImportEventId --updated to .x dups 
   FROM  
    [USMC].[ImportEvent] ie3 
    INNER JOIN #SchoolList hs3 
     ON ie3.SchoolId = hs3.rowguid 
    INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org3 
     ON org3.ORGANIZATION_ID = hs3.ORGANIZATION_ID 
   WHERE 
      Gradua.onYear = @SchoolYear 
      AND ie3.ImportEventStatusTypeId = 3 
      AND ie3.Recrui.ngOrganiza.onId = org3.rowguid 
   GROUP BY  ie3.SchoolId, Gradua.onYear 
  ) ie2 
  ON ie.SchoolId = ie2.SchoolId AND ie.Gradua.onYear = ie2.Gradua.onYear 
     --AND ie.LastUpdateDate = ie2.LastUpdateDate 
     AND ie.ImportEventId = ie2.ImportEventId     --added 
 WHERE 
  ie.Gradua.onYear = @SchoolYear AND ie.Recrui.ngOrganiza.onId = org.rowguid 
 
     
 --- retrieve the most current sector designator for the school base on zip code 
 SELECT School_Code, SectorDesignator 
 INTO #SchoolSectorDesignator  
 FROM 
  (   
   SELECT  
    Rank() OVER (par..on by School_Code ORDER BY EndDate Desc) AS 'Rank' 
    ,* 
   FROM   
    ( 
     SELECT hs.School_Code, hs.highschool_name, SectorDesignator,E.ec.veDate, GETDATE() as EndDate 
     FROM  
      #SchoolList AS hs  
      INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org 
       ON org.ORGANIZATION_ID = hs.ORGANIZATION_ID 
      INNER JOIN RSSOSS.USMC.MapsSectorZip msz 
       ON LEFT(hs.ZIP_CODE, 5) = msz.Zip AND @SchoolYearEndDate >= E.ec.veDate 
      INNER JOIN RSSOSS.USMC.MapsSector ms  
       ON ms.SectorID = msz.SectorID AND Recrui.ngOrganiza.onId = org.rowguid AND SectorType = 'E'  
   UNION 
 
   SELECT hs.School_Code, hs.highschool_name, SectorDesignator,E.ec.veDate, EndDate  
   FROM  
    #SchoolList AS hs  
    INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org 
     ON org.ORGANIZATION_ID = hs.ORGANIZATION_ID 
    INNER JOIN RSSOSS.USMC.MapsSectorZipHist mszh 
     ON LEFT(hs.ZIP_CODE, 5) = mszh.Zip AND @SchoolYearEndDate >= E.ec.veDate AND @SchoolYearStartDate <= EndDate 
    INNER JOIN RSSOSS.USMC.MapsSector ms  
     ON ms.SectorID = mszh.SectorID AND Recrui.ngOrganiza.onId = org.rowguid AND SectorType = 'E'  
    
   ) t1 
  ) t2 
 WHERE rank = 1 
  
  
 SELECT   hs.HighSchool_Name [Name]         
   ,case when hsp.Designator is NULL then SectorDesignator else SectorDesignator + '-' +  cast(hsp.Designator as varchar(5)) end as [Sector] 
   ,hs.rowguid [SchoolId] 
   ,hsp.rowguid  [SchoolPro.leId] 
   ,ISNULL(hsp.Priority_Code, '1') as [Priority] 
   ,ISNULL(Replace(hsa.Short_Descrip.on,'Access',''), 'FULL') [Access] 
   ,lsc.ImportEventId 
   ,CASE WHEN hs.DELETED = 'Y' THEN 'Closed' ELSE 'Open' END AS Status 
 FROM          
  #SchoolList AS hs  
  INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE AS hsp  
   ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE AND hsp.SCHOOL_YEAR = @SchoolYear 
  LEFT OUTER JOIN #SchoolSectorDesignator ssd 
   ON ssd.School_Code = hs.School_Code 
     LEFT OUTER join MCRISS.DBO.HIGH_SCHOOL_ACCESS hsa  
      ON hsp.Access_Code = hsa.Access_Code 
     LEFT OUTER JOIN #ListScheduleCard lsc 
      ON hs.rowguid = lsc.SchoolId 
    where  
        (SectorDesignator=@sector or @sector ='All') 
      
 ORDER BY hs.HighSchool_Name 
  
 Drop TABLE #SchoolList  
 Drop TABLE #ListScheduleCard 
 DROP TABLE #SchoolSectorDesignator 
 
    
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>