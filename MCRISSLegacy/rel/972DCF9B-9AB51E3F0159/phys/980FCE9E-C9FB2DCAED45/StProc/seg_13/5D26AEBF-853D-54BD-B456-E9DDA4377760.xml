<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetPACCardRows_RR01102013]" directorySegmentName="seg_13" id="5D26AEBF-853D-54BD-B456-E9DDA4377760">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[(  
 @OrgId uniqueiden..er = null, 
 @LastName varchar(75) = null, 
 @FirstName varchar(75) = null, 
 @SSN varchar(9) = null, 
 @DateCreatedStart date.me = null, 
 @DateCreatedEnd date.me = null, 
 @Ac.onDatedStart date.me = null, 
 @Ac.onDatedEnd date.me =  null, 
 @RecruiterId uniqueiden..er = null 
) 
AS 
BEGIN 
  
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 CREATE TABLE #PacCardTable 
 ( 
     CreateDate date.me , 
  ApplicantAssetID uniqueiden..er, 
  ApplicantAssetName varchar(256), 
  SecondaryID uniqueiden..er, 
  RecruiterID uniqueiden..er, 
  Recruiter varchar(256), 
  RecruiterShortName varchar(256), 
  Disposi.on varchar(256), 
  EventID uniqueiden..er, 
  NextScheduledEvent date.me 
    ) 
 IF ( @OrgId IS null 
   AND @LastName IS null 
   AND @FirstName IS null 
   AND @SSN IS null 
   AND @DateCreatedStart IS null 
   AND @DateCreatedEnd IS null 
   AND @Ac.onDatedStart IS null 
   AND @Ac.onDatedEnd IS null 
   AND @RecruiterId IS null) 
 BEGIN 
  SELECT * FROM #PacCardTable 
  DROP TABLE #PacCardTable 
 END 
 ELSE 
 BEGIN 
 
 DECLARE @Organiza.onID INT 
 DECLARE @FirstNamePart VARCHAR(76) 
 DECLARE @LastNamePart VARCHAR(76) 
 DECLARE @SSNpart VARCHAR(9) 
 
 SET @FirstNamePart = CASE WHEN @FirstName IS NULL THEN NULL ELSE @FirstName + '%' END 
 SET @LastNamePart = CASE WHEN @LastName IS NULL THEN NULL ELSE @LastName + '%' END 
 SET @SSNpart = CASE WHEN LEN(@SSN) = 9 AND @SSN IS NOT NULL THEN @SSN  
      WHEN @SSN IS NOT NULL THEN '%' + @SSN 
     ELSE NULL END 
 
 SELECT @Organiza.onID = ORGANIZATION_ID FROM MCRISS.DBO.RECRUITING_ORGANIZATION WHERE rowguid = @orgid 
 
 CREATE TABLE #NWA 
 ( 
   MARINE_CANDIDATE_ID INT 
  ,NWA_ID INT 
  ,ApplicantAssetName VARCHAR(400) 
  ,NWA_DATE_STARTED_WORKING DATETIME 
  ,WORKING_RECRUITER_ID INT 
  ,RECRUITER_OF_RECORD_ID INT 
  ,update_date DATETIME 
  ,rowguid UNIQUEIDENTIFIER 
 ) 
 
 CREATE TABLE #CANDIDATE_STATUS 
 ( 
   NWA_ID INT 
  ,DISPOSITION_DESCRIPTION VARCHAR(50) 
  ,NWA_ROWGUID UNIQUEIDENTIFIER 
 ) 
 
 
 CREATE TABLE #Recrui.ngPerson 
 ( 
   RECRUITING_PERSON_ID INT 
  ,rowguid UNIQUEIDENTIFIER 
  ,ORGANIZATION_ID INT 
  ,Recruiter VARCHAR(500) 
  ,RecruiterShortName VARCHAR(500) 
 ) 
  
 INSERT INTO #Recrui.ngPerson 
 SELECT 
   rp.RECRUITING_PERSON_ID 
  ,rp.rowguid 
  ,rp.ORGANIZATION_ID 
  ,COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
   COALESCE(RTRIM(rcrtr.LAST_NAME), SPACE(0))  + SPACE(1) +  
   COALESCE(RTRIM(rcrtr.FIRST_NAME), SPACE(0)) + SPACE(1) +  
   COALESCE(RTRIM(rcrtr.LEGAL_MIDDLE_NAME), SPACE(0)) AS Recruiter 
  ,COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
   COALESCE(RTRIM(rcrtr.LAST_NAME), SPACE(0)) AS RecruiterShortName 
 FROM [MCRISS].[dbo].[RECRUITING_PERSON] rp  
 INNER JOIN [MCRISS].[dbo].[PERSON] rcrtr ON rp.RECRUITING_PERSON_ID = rcrtr.PERSON_ID 
 WHERE ((rp.RowGuid = @RecruiterId AND @RecruiterId IS NOT NULL) OR (@RecruiterId IS NULL)) 
  AND ((rp.ORGANIZATION_ID = @Organiza.onID AND @Organiza.onID IS NOT NULL) OR (@Organiza.onID IS NULL)) 
 
 INSERT INTO #NWA 
 SELECT  N.MARINE_CANDIDATE_ID 
   ,N.NWA_ID 
   ,COALESCE(RTRIM(P.LAST_NAME), SPACE(0))  + SPACE(1) +  
    COALESCE(RTRIM(P.FIRST_NAME), SPACE(0)) + SPACE(1) +  
    COALESCE(RTRIM(P.LEGAL_MIDDLE_NAME), SPACE(0)) AS ApplicantAssetName 
   ,N.NWA_DATE_STARTED_WORKING 
   ,N.WORKING_RECRUITER_ID 
   ,N.RECRUITER_OF_RECORD_ID 
   ,N.update_date 
   ,N.rowguid 
 FROM [MCRISS].[DBO].[NWA] N 
 INNER JOIN [MCRISS].dbo.PERSON P ON P.PERSON_ID = N.MARINE_CANDIDATE_ID 
 WHERE ((N.ORGANIZATION_OF_RECORD_ID = @Organiza.onID AND @Organiza.onID IS NOT NULL) OR @Organiza.onID IS NULL) 
  AND ((P.LAST_NAME LIKE @LastNamePart AND @LastNamePart IS NOT NULL) OR @LastNamePart IS NULL) 
  AND ((P.FIRST_NAME LIKE @FirstNamePart AND @FirstNamePart IS NOT NULL) OR @FirstNamePart IS NULL) 
  AND ((P.SOCIAL_SECURITY_NUMBER LIKE @SSNpart AND @SSNpart IS NOT NULL) OR @SSNpart IS NULL) 
  --CMS AND ((n.NWA_DATE_STARTED_WORKING >= @DateCreatedStart) OR @DateCreatedStart IS NULL)  
  --AND ((n.NWA_DATE_STARTED_WORKING < @DateCreatedEnd) OR @DateCreatedEnd IS NULL) 
  AND (LEFT(n.NWA_DATE_STARTED_WORKING,11) >= Coalesce(@DateCreatedStart, LEFT(n.NWA_DATE_STARTED_WORKING,11))) 
  AND (LEFT(n.NWA_DATE_STARTED_WORKING,11) <= Coalesce(@DateCreatedEnd, LEFT(n.NWA_DATE_STARTED_WORKING,11)))  
 
 INSERT INTO #CANDIDATE_STATUS 
 SELECT  CS.NWA_ID 
   ,sd.DISPOSITION_DESCRIPTION 
   ,N.rowguid AS NWA_ROWGUID 
 FROM #NWA N 
 INNER JOIN [MCRISS].[DBO].[CANDIDATE_STATUS] CS ON N.NWA_ID = CS.NWA_ID 
              AND cs.CANDIDATE_STATUS_ID IN ( SELECT MAX(cs2.CANDIDATE_STATUS_ID)  
                      FROM [mcriss].[dbo].[CANDIDATE_STATUS] CS2  
                      WHERE CS2.NWA_ID = CS.NWA_ID) 
 INNER JOIN MCRISS.dbo.STATUS_DISPOSITION sd ON cs.[STATUS_TYPE] = sd.[STATUS_TYPE] 
           AND cs.[STATUS_CODE] = sd.[STATUS_CODE]  
           AND cs.[DISPOSITION_CODE] = sd.[DISPOSITION_CODE] 
 
 
 INSERT INTO #PacCardTable  
 (   
   CreateDate, 
   ApplicantAssetID, 
   ApplicantAssetName, 
   SecondaryID, 
   RecruiterID, 
   Recruiter, 
   RecruiterShortName, 
   Disposi.on, 
   EventID, 
   NextScheduledEvent  
 ) 
 
 SELECT  
     prs.PACCreateDate AS CreateDate 
  ,prs.[ProspectID] AS ApplicantAssetID  
   
  ,COALESCE(RTRIM(per.LastName), SPACE(0))  + SPACE(1) +  
   COALESCE(RTRIM(per.FirstName), SPACE(0)) + SPACE(1) +  
   COALESCE(RTRIM(per.MiddleName), SPACE(0)) AS ApplicantAssetName 
  ,prs.NwaId AS SecondaryID 
  ,rp.[rowguid] AS RecruiterID 
  ,rp.Recruiter 
  ,rp.RecruiterShortName 
     ,COALESCE(CS.[DISPOSITION_DESCRIPTION], pd.ProspectDisposi.onDescrip.on) AS Disposi.on 
     ,CASE WHEN (PEE.StartDate IS NOT NULL AND ne.StartDate IS NULL) THEN PEE.id  
   WHEN (PEE.StartDate IS NULL AND ne.StartDate IS NOT NULL) THEN ne.id 
   WHEN (PEE.StartDate IS NOT NULL AND ne.StartDate IS NOT NULL 
    AND PEE.StartDate < ne.StartDate) THEN PEE.id 
   ELSE ne.id 
   END AS EventID 
  ,CASE WHEN (PEE.StartDate IS NOT NULL AND ne.StartDate IS NULL) THEN PEE.StartDate 
   WHEN (PEE.StartDate IS NULL AND ne.StartDate IS NOT NULL) THEN ne.StartDate 
   WHEN (PEE.StartDate IS NOT NULL AND ne.StartDate IS NOT NULL 
    AND PEE.StartDate < ne.StartDate) THEN PEE.StartDate 
   ELSE ne.StartDate 
   END AS NextScheduledEvent 
 FROM [USMC].[Prospect] prs 
 INNER JOIN [USMC].[Person] per ON per.PersonID = prs.PersonID 
 INNER JOIN [USMC].[ProspectDisposi.on] pd ON prs.ProspectDisposi.onId = pd.ProspectDisposi.onId 
 INNER JOIN #Recrui.ngPerson rp ON rp.rowguid = prs.Recrui.ngPersonId 
 LEFT OUTER JOIN ( 
      SELECT  prs2.PROSPECTID 
        ,e.ID 
        ,e.startdate 
      FROM [USMC].[Prospect] prs2 
      INNER JOIN [RSSOSS].[USMC].EventSubject es ON es.SubjectID = prs2.[ProspectID] 
      INNER JOIN [RSSOSS].[USMC].[Event] e ON e.id = es.even.d 
            AND e.StartDate IN ( SELECT MIN(e2.StartDate) 
                  FROM [RSSOSS].[USMC].[Event] e2 
                  INNER JOIN [RSSOSS].[USMC].EventSubject es2 ON e2.id = es2.even.d 
                  WHERE es2.SubjectID = es.SubjectID 
                  and e2.StartDate >= GETDATE()) 
    ) PEE ON PEE.prospec.d = prs.prospec.d  
 LEFT OUTER JOIN #CANDIDATE_STATUS cs ON prs.NwaId = cs.NWA_ROWGUID   
 LEFT OUTER JOIN ( 
      SELECT  cs2.NWA_ROWGUID 
        ,e.ID 
        ,e.startdate 
      FROM #CANDIDATE_STATUS cs2  
      INNER JOIN [RSSOSS].[USMC].EventSubject es ON es.SubjectID = cs2.NWA_ROWGUID 
      INNER JOIN [RSSOSS].[USMC].[Event] e ON e.id = es.even.d 
            AND e.StartDate IN ( SELECT MIN(e2.StartDate) 
                  FROM [RSSOSS].[USMC].[Event] e2 
                  INNER JOIN [RSSOSS].[USMC].EventSubject es2 ON e2.id = es2.even.d 
                  WHERE es2.SubjectID = es.SubjectID 
                  and e2.StartDate >= GETDATE()) 
    ) ne ON ne.NWA_ROWGUID = cs.NWA_ROWGUID  
 WHERE ((per.LastName LIKE @LastNamePart AND @LastNamePart IS NOT NULL) OR @LastNamePart IS NULL) 
  AND ((per.FirstName LIKE @FirstNamePart AND @FirstNamePart IS NOT NULL) OR @FirstNamePart IS NULL) 
  AND ((per.SocialSecurityNumber LIKE @SSNpart AND @SSNpart IS NOT NULL) OR @SSNpart IS NULL) 
  --AND (((prs.PACCreateDate >= @DateCreatedStart) OR @DateCreatedStart IS NULL)   
  --AND ((prs.PACCreateDate  < @DateCreatedEnd) OR @DateCreatedEnd IS NULL) ) 
  AND ((LEFT(prs.PACCreateDate,11) >= Coalesce(@DateCreatedStart, LEFT(prs.PACCreateDate,11))) 
  AND (LEFT(prs.PACCreateDate,11) <= Coalesce(@DateCreatedEnd, LEFT(prs.PACCreateDate,11)))  ) 
 
  AND prs.ProspectDisposi.onId > 1 
  AND (prs.ProspectId IS NOT NULL) 
  
 -- Get Candidates that in PAC status( nwa working, pending approval ) 
 -- but is not a prospect in RssOss 
 INSERT INTO #PacCardTable  
 (  
     CreateDate, 
  ApplicantAssetID, 
  ApplicantAssetName, 
  SecondaryID, 
  RecruiterID, 
  Recruiter, 
  RecruiterShortName, 
  Disposi.on, 
  EventID, 
  NextScheduledEvent  
 ) 
 SELECT  
   n.NWA_DATE_STARTED_WORKING AS CreateDate 
   ,NULL AS ApplicantAssetID 
   ,n.ApplicantAssetName 
   ,n.rowguid AS SecondaryID 
   ,rp.rowguid AS RecruiterID 
   ,rp.Recruiter 
   ,rp.RecruiterShortName 
   ,CS.[DISPOSITION_DESCRIPTION] 
   ,ne.ID AS EventID   
   ,ne.StartDate AS NextScheduledEvent 
  FROM #NWA n 
  INNER JOIN #CANDIDATE_STATUS cs ON cs.NWA_ID = n.NWA_ID 
  LEFT OUTER JOIN ( 
      SELECT  cs2.NWA_ROWGUID 
        ,e.ID 
        ,e.startdate 
      FROM #CANDIDATE_STATUS cs2  
      INNER JOIN [RSSOSS].[USMC].EventSubject es ON es.SubjectID = cs2.NWA_ROWGUID 
      INNER JOIN [RSSOSS].[USMC].[Event] e ON e.id = es.even.d 
            AND e.StartDate IN ( SELECT MIN(e2.StartDate) 
                  FROM [RSSOSS].[USMC].[Event] e2 
                  INNER JOIN [RSSOSS].[USMC].EventSubject es2 ON e2.id = es2.even.d 
                  WHERE es2.SubjectID = es.SubjectID 
                  and e2.StartDate >= GETDATE()) 
    ) ne ON ne.NWA_ROWGUID = cs.NWA_ROWGUID  
  INNER JOIN #Recrui.ngPerson rp ON rp.RECRUITING_PERSON_ID = COALESCE(n.WORKING_RECRUITER_ID,n.RECRUITER_OF_RECORD_ID)   
  LEFT OUTER JOIN USMC.Prospect Pro ON Pro.nwaid = n.rowguid 
  WHERE Pro.nwaid IS NULL 
 
  SELECT DISTINCT pct.*  
  FROM #PacCardTable pct 
     INNER JOIN  [RSSOSS].[USMC].EventSubject es ON es.SubjectID = ApplicantAssetID  
     INNER JOIN RSSOSS.USMC.Event e ON e.id = es.even.d  
  WHERE  
   ((LEFT(e.StartDate,11) >= Coalesce(@Ac.onDatedStart, LEFT(e.StartDate,11))) 
   AND (LEFT(e.StartDate,11) <= Coalesce(@Ac.onDatedEnd, LEFT(e.StartDate,11)))  ) 
  --((e.StartDate >= @Ac.onDatedStart AND @Ac.onDatedStart IS NOT NULL) OR @Ac.onDatedStart IS NULL) AND 
     --((e.startDate < @Ac.onDatedEnd AND @Ac.onDatedEnd IS NOT NULL) OR @Ac.onDatedEnd IS NULL) 
 
DROP TABLE #PacCardTable 
DROP TABLE #NWA 
DROP TABLE #CANDIDATE_STATUS 
DROP TABLE #Recrui.ngPerson 
 END 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>