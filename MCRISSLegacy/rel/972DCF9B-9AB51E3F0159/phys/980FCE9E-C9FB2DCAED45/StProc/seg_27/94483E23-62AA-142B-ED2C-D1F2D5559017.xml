<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[UpdateRecruiterHistory]" directorySegmentName="seg_27" id="94483E23-62AA-142B-ED2C-D1F2D5559017">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@PersonID int, 
 @Organiza.onID int, 
 @RecruiterHistoryID int, 
 @BilletBeginDate date.me, 
 @BilletEndDate date.me, 
 @BilletDesc varchar(15),  
 @UserLogin varchar(15), 
 @result varchar(500) OUTPUT 
AS 
 
SET NOCOUNT ON 
  
 Create Table #temp( 
 OLevel  varchar(30) NOT NULL, 
 Name  varchar(90) NULL 
 ) 
 Insert #Temp(OLevel) 
 Values ('H') 
 Insert #Temp(OLevel) 
 Values  ('R') 
 Insert #Temp(OLevel) 
 Values  ('D') 
 Insert #Temp(OLevel) 
 Values  ('RS') 
 Insert #Temp(OLevel) 
 Values  ('RSS') 
 Insert #Temp(OLevel) 
 Values  ('OSS') 
  
  
 Declare @Level varchar(20) 
 Declare @OrgIdCounter int 
 
 Select  @OrgIdCounter = @Organiza.onID 
 Select  @Level = ro.Organiza.on_Type 
 From Recrui.ng_Organiza.on ro 
 Where ro.Organiza.on_Id = @Organiza.onID  
  
 While (@Level != 'H') 
  Begin 
   Update #Temp 
   Set Name = Short_Name 
   From Recrui.ng_Organiza.on 
   Where @OrgIdCounter = Organiza.on_Id 
    and OLevel = @Level 
 
   Select @OrgIdCounter = Parent_Organiza.on_Id 
   From Organiza.on_Map 
   Where Child_Organiza.on_Id = @OrgIdCounter 
 
   Select  @Level = Organiza.on_Type 
   From Recrui.ng_Organiza.on 
   Where Organiza.on_Id = @OrgIdCounter 
  End 
 
 Update #Temp 
 Set Name = Short_Name 
 From Recrui.ng_Organiza.on 
 Where @OrgIdCounter = Organiza.on_Id 
  and OLevel = @Level  
 
DECLARE @hq_name varchar(20) 
DECLARE @region_name varchar(20) 
DECLARE @district_name varchar(20)  
DECLARE @rs_name varchar(20)  
DECLARE @rss_name varchar(20) 
DECLARE @organiza.on_type varchar(3) 
 
Select  
 @hq_name = t1.Name, 
 @region_name = t2.Name, 
 @district_name = t3.Name, 
 @rs_name =t4.Name, 
 @rss_name = 
 case when t6.Name IS NULL then t5.Name 
 else t6.Name 
 End, 
 @organiza.on_type=ro.Organiza.on_Type 
from     
 Recrui.ng_Organiza.on ro, 
 #Temp t1, 
 #Temp t2, 
 #Temp t3, 
 #Temp t4, 
 #Temp t5, 
 #Temp t6 
Where t1.OLevel = 'H' 
 and t2.OLevel = 'R' 
 and t3.OLevel = 'D' 
 and t4.OLevel = 'RS' 
 and t5.OLevel = 'RSS' 
 and t6.OLevel = 'OSS' 
 and ro.Organiza.on_Id = @Organiza.onID  
 
-- UPDATE BILLET DATE IN RECRUITER HISTORY TABLE  
   
IF EXISTS (SELECT 1 FROM RECRUITER_HISTORY WHERE RecruiterHistoryID=@RecruiterHistoryID)  
 BEGIN  
  SET @result = '' 
  DECLARE @exis.ngBilletBeginDate date.me 
  DECLARE @exis.ngBilletEndDate date.me  
  DECLARE @days int 
  DECLARE @previousBilletEndDate date.me 
  DECLARE @nextBilletBeginDate date.me   
  DECLARE @maxBeginDate date.me 
  --Use exising begin date and end date to .nd the previous billet end date and the next billet begin date 
  SELECT @exis.ngBilletBeginDate=BILLET_BEGIN_DATE, 
      @exis.ngBilletEndDate=BILLET_END_DATE 
  FROM RECRUITER_HISTORY WHERE RecruiterHistoryID=@RecruiterHistoryID     
   
  -- Find previous billet end date 
  SELECT @days = MIN(DATEDIFF(day,BILLET_END_DATE, @exis.ngBilletBeginDate)) 
  FROM dbo.RECRUITER_HISTORY  
  WHERE RECRUITING_PERSON_ID=@PersonID AND (DATEDIFF(day, BILLET_END_DATE, @exis.ngBilletBeginDate) >= 1) 
    
  SET @previousBilletEndDate=DATEADD(day,-@days, @exis.ngBilletBeginDate) 
   
  -- Find next billet begin date 
  SELECT @maxBeginDate = MAX(BILLET_END_DATE)    
  FROM Recruiter_History  
  WHERE Recrui.ng_Person_Id = @PersonId 
   
  -- GO to .nd the current billet 
  IF @maxBeginDate = @exis.ngBilletEndDate 
   SELECT @days = MIN(DATEDIFF(day,@exis.ngBilletEndDate, BILLET_BEGIN_DATE)) 
   FROM dbo.RECRUITING_PERSON 
   WHERE RECRUITING_PERSON_ID=@PersonID AND (DATEDIFF(day, @exis.ngBilletEndDate, BILLET_BEGIN_DATE) >= 1) 
   
  -- Find the nextBilletBeginDate in History 
  ELSE 
   SELECT @days = MIN(DATEDIFF(day,@exis.ngBilletEndDate, BILLET_BEGIN_DATE)) 
   FROM dbo.RECRUITER_HISTORY  
   WHERE RECRUITING_PERSON_ID=@PersonID AND (DATEDIFF(day, @exis.ngBilletEndDate, BILLET_BEGIN_DATE) >= 1) 
   
  SET @nextBilletBeginDate=DATEADD(day,@days, @exis.ngBilletEndDate) 
   
  -- To .nd out overlap with other billet history records 
  DECLARE @recCount int 
 
  SELECT @recCount = Count(*)  
  FROM [dbo].[RECRUITER_HISTORY] 
  WHERE  
   BILLET_BEGIN_DATE IS NOT NULL  
   AND BILLET_END_DATE IS NOT NULL 
   AND RECRUITING_PERSON_ID = @PersonID 
   AND @BilletEndDate >= BILLET_BEGIN_DATE AND @BilletBeginDate <= BILLET_END_DATE 
   AND RecruiterHistoryID <> @RecruiterHistoryID 
   
  --No overlap 
  IF @recCount = 0 AND @nextBilletBeginDate > @BilletEndDate 
   BEGIN                        
    UPDATE RECRUITER_HISTORY 
    SET EFFECTIVE_DATE = dateadd(ms,datepart(ms,getdate()),@BilletEndDate),       
     HQ_Name = @hq_name, 
     Region_Name =@region_name, 
     District_Name = @district_name, 
     RS_Name = @rs_name, 
     RSS_Name = @rss_name, 
     Billet_Desc = @BilletDesc,      
     BILLET_BEGIN_DATE = @BilletBeginDate, 
     BILLET_END_DATE = @BilletEndDate, 
     Organiza.on_Type =@organiza.on_type,  
     USER_LOGIN = @UserLogin, 
     UPDATE_DATE = GetDate() 
    WHERE 
     RecruiterHistoryID = @RecruiterHistoryID 
    --Fill in Non-Recrui.ng Assignments for the gap between the previous billet end date and the begin date 
    IF DATEDIFF(day, @previousBilletEndDate ,@BilletBeginDate) >= 2 
     BEGIN 
      Insert Into Recruiter_History( 
         Recrui.ng_Person_Id, 
         E.ec.ve_Date, 
         Billet_Begin_Date, 
         Billet_End_Date, 
         Billet_Desc, 
         HQ_Name, 
         Region_Name, 
         District_Name, 
         RS_Name, 
         RSS_Name, 
         Organiza.on_Type, 
         User_Login, 
         Update_Date 
         ) 
 
      SELECT  Recrui.ng_Person_Id,  
        DATEADD(day,1,@previousBilletEndDate),  
        DATEADD(day,1,@previousBilletEndDate),  
        DATEADD(day,-1,@BilletBeginDate),  
        'Other', 
        HQ_Name, 
        Region_Name, 
        District_Name, 
        RS_Name, 
        RSS_Name, 
        Organiza.on_Type, 
        User_Login, 
        getdate() 
      FROM dbo.RECRUITER_HISTORY  
      WHERE RecruiterHistoryID=@RecruiterHistoryID            
     END 
     IF DATEDIFF(day, @BilletEndDate ,@nextBilletBeginDate) >= 2 
     BEGIN 
      Insert Into Recruiter_History( 
         Recrui.ng_Person_Id, 
         E.ec.ve_Date, 
         Billet_Begin_Date, 
         Billet_End_Date, 
         Billet_Desc, 
         HQ_Name, 
         Region_Name, 
         District_Name, 
         RS_Name, 
         RSS_Name, 
         Organiza.on_Type, 
         User_Login, 
         Update_Date 
         ) 
 
      SELECT  Recrui.ng_Person_Id,  
        DATEADD(day,1,@BilletEndDate),  
        DATEADD(day,1,@BilletEndDate),  
        DATEADD(day,-1,@nextBilletBeginDate),  
        'Other', 
        HQ_Name, 
        Region_Name, 
        District_Name, 
        RS_Name, 
        RSS_Name, 
        Organiza.on_Type, 
        User_Login, 
        getdate() 
      FROM dbo.RECRUITER_HISTORY  
      WHERE RecruiterHistoryID=@RecruiterHistoryID            
     END 
     
    --Fill in Non-Recrui.ng Assignments for the gap between the end date and the next billet start date  
      
    SET @result = 'SUCCESS' 
      END 
  --HAS overlap 
  ELSE 
   BEGIN          
    IF DATEDIFF(day, @previousBilletEndDate ,@BilletBeginDate) < 1    
     SET @result = 'Billets cannnot overlap.  Please change the Begin date. ' 
    IF DATEDIFF(day, @BilletEndDate ,@nextBilletBeginDate) < 1  
     SET @result =  @result + 'Billets cannnot overlap.  Please change the End date.' 
    IF @nextBilletBeginDate <= @BilletEndDate 
        SET @result = 'Billets cannnot overlap. End Date cannot start on the same or a.er the Current Billet Begin Date' 
   END       
 END 
  
 Drop Table #temp 
 
SELECT @result]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>