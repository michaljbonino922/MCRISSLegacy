<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_MUDImportNewZips]" directorySegmentName="seg_23" id="784D297D-DD47-AD89-5870-C373D27B4327">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[AS 
 
 
SET NOCOUNT ON 
 
 
 
--- SELECT WHICH ZIPCODES ARE NOT IN THE SYSTEM 
INSERT INTO MUD_NEW_ZIPCODES(CITY, STATE, ZIP, AREA_CODE, FIPS, COUNTY, TIMEZONE, DST, LAT, LONG, TYPE, NOTIFY_FLAG, ASSIGNED_ORG_ID, USER_LOGIN, UPDATE_DATE) 
/**/ 
SELECT  
 UPPER(MS.CITY) AS CITY, MS.STATE, MS.ZIP, MS.AREA_CODE, MS.FIPS, UPPER(MS.COUNTY) AS COUNTY, MS.TIMEZONE, MS.DST, MS.LATITUDE, MS.LONGITUDE, MS.TYPE, 
 0 AS NOTIFY_FLAG, 
 MR.DIST_ID AS ASSIGNED_ORG_ID, 
 'SA' AS USER_LOGIN, 
 GETDATE() AS UPDATE_DATE 
FROM  
 MUD_STAGING MS  LEFT OUTER JOIN MUD_REGIONS MR ON 
 MS.FIPS = MR.FIPS 
WHERE  
 NOT EXISTS (SELECT 1 FROM MUD_FILE MF WHERE MS.ZIP = MF.ZIP) AND --ms.zip=97003 and 
 --- NOT EXISTS (SELECT 1 FROM MUD_NEW_ZIPCODES MN WHERE MN.ZIP = MS.ZIP) AND 
 EXISTS (SELECT 1 FROM MUD_REGIONS MR WHERE MS.FIPS = MR.FIPS) 
 
 
 
 
--- INSERT ZIPS INTO MUD FILE IF THEY CURRENTLY DO NOT EXISTS IN THE SYSTEM AND HAVE NOT BEEN NOTIFIED VIA EMAIL 
--- IF EXISTS (SELECT 1 FROM MUD_NEW_ZIPCODES MZ WHERE MZ.NOTIFY_FLAG = 0 AND NOT EXISTS (SELECT 1 FROM MUD_FILE MF WHERE MF.ZIP = MZ.ZIP)) 
IF EXISTS (  
   SELECT  
    1 
   FROM  
    MUD_STAGING MS  LEFT OUTER JOIN MUD_REGIONS MR ON 
    MS.FIPS = MR.FIPS 
   WHERE  
    NOT EXISTS (SELECT 1 FROM MUD_FILE MF WHERE MS.ZIP = MF.ZIP) AND 
    --- NOT EXISTS (SELECT 1 FROM MUD_NEW_ZIPCODES MN WHERE MN.ZIP = MS.ZIP) AND 
    EXISTS (SELECT 1 FROM MUD_REGIONS MR WHERE MS.FIPS = MR.FIPS) 
   ) 
BEGIN 
 
--- CREATE A TABLE OF FIPS IN WHICH THEIR CORRESPONDING ZIPS DO NOT EXISTS IN THE SYSTEM 
--- DROP TABLE #TEMP_FIPS_NEW 
CREATE TABLE #TEMP_FIPS_NEW 
( 
ID INT IDENTITY, 
---ZIP VARCHAR(9) NOT NULL, 
FIPS VARCHAR(5) NULL, 
STATE VARCHAR(2) NULL 
) 
 
 
INSERT INTO #TEMP_FIPS_NEW 
SELECT DISTINCT MS.FIPS, MS.STATE  
FROM MUD_STAGING MS 
WHERE 
 NOT EXISTS (SELECT 1 FROM MUD_FILE MF WHERE MF.ZIP = MS.ZIP) 
 
 
 
--- CREATE TABLE OF FIPS FROM THE #TEMP_FIPS_NEW TABLE THAT CROSS MORE THAN 1 DISTRICT 
--- DROP TABLE #TEMP_MD_FIPS 
CREATE TABLE #TEMP_MD_FIPS 
( 
FIPS VARCHAR(5) NULL 
) 
 
 
INSERT INTO #TEMP_MD_FIPS 
SELECT FIPS  
FROM #TEMP_FIPS_NEW 
GROUP BY FIPS 
HAVING COUNT(FIPS) > 1 
 
 
 
 INSERT INTO MUD_FILE(ZIP,FIPS,STATE,COUNTY,LAT,LONG,STATUS_ID,ASSIGNED_ORG_ID,STATE_CODE,CITY_CODE,COUNTY_CODE,USER_LOGIN,UPDATE_DATE) 
 SELECT  
  TZ.ZIP, 
  TZ.FIPS, 
  TZ.STATE, 
  TZ.COUNTY, 
  TZ.LAT, 
  TZ.LONG, 
  'I' AS STATUS_ID, 
  --- MR.REGION_ID AS ASSIGNED_ORG_ID, 
  CASE 
   WHEN TZ.FIPS IN (SELECT * FROM #TEMP_MD_FIPS) 
   --- THEN (SELECT ISNULL(REGION_ID,901) FROM #TEMP_MD_FIPS TF LEFT OUTER JOIN MUD_REGIONS MR ON TF.FIPS = MR.FIPS) 
   THEN 901 
   ELSE MR.REGION_ID 
  END AS ASSIGNED_ORG_ID, 
  
  MG.STATE_CODE, 
  MG.CITY_CODE, 
  MG.COUNTY_CODE, 
  'DTS' AS USER_LOGIN, 
  GETDATE() AS UPDATE_DATE 
 FROM  
  MUD_NEW_ZIPCODES TZ LEFT OUTER JOIN MUD_REGIONS MR ON 
  TZ.FIPS = MR.FIPS --AND 
  --TZ.NOTIFY_FLAG = 0 
  LEFT OUTER JOIN MUD_GEO_LOCATION MG ON 
  TZ.STATE = MG.STATE_TEXT AND  
  TZ.COUNTY = MG.COUNTY_TEXT AND 
  TZ.CITY = MG.CITY_TEXT 
 WHERE TZ.NOTIFY_FLAG = 0 
END 
 
 
 
--DROP TABLE #TEMP_MD_FIPS 
--DROP TABLE #TEMP_FIPS_NEW 
 
SET NOCOUNT OFF]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>