<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[SP_SSRS_Educa.on_Remove]" directorySegmentName="seg_23" id="BA9946EA-18B0-F4E5-C2D0-91BEC9BCEF51">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@SSN varchar(9), 
 @EduRowGuid VARCHAR(100) = NULL, 
 @TicketNum varchar(50) = NULL, 
 @SsrsUser varchar(250) = NULL, 
 @UpdateNow INT = 0 
 
AS 
BEGIN 
 
DECLARE @ValidToDelete BIT = 0 
 
 
------------------------------------------ 
------------------------------------------  
--Lets Grab Some Data 
--To prepare for display, update, and history 
 
BEGIN 
 
DECLARE 
  @EduTemp TABLE( 
  rowguid VARCHAR(100), 
  ssn VARCHAR(9), 
  FullName VARCHAR(250),  
  MARINE_CANDIDATE_ID INT,  
  SCHOOL_CODE VARCHAR(50),  
  DOD_CODE VARCHAR(50), 
  HIGHSCHOOL_NAME VARCHAR(100),  
  SCHOOL_END_DATE DATE,  
  EDU_CODE VARCHAR(20),  
  YEAR_GRADUATED VARCHAR(10),  
  VERIFICATION VARCHAR(100),  
  LastUpdateUser VARCHAR(100),  
  LastUpdated DATETIME 
   ) 
 
INSERT @EduTemp( 
  rowguid, 
  ssn, 
  FullName,  
  MARINE_CANDIDATE_ID,  
  SCHOOL_CODE,  
  DOD_CODE, 
  HIGHSCHOOL_NAME,  
  SCHOOL_END_DATE,  
  EDU_CODE,  
  YEAR_GRADUATED,  
  VERIFICATION,  
  LastUpdateUser,  
  LastUpdated 
    ) 
select  
 e.rowguid, 
 p.social_security_number, 
 p..rst_name + ' ' + p.last_name as [Name],  
 e.MARINE_CANDIDATE_ID,  
 e.SCHOOL_CODE,  
 hs.DOD_CODE, 
 hs.HIGHSCHOOL_NAME,  
 e.SCHOOL_END_DATE,  
 e.EDUCATION_LEVEL + ' - ' + isnull(e.EDUCATION_CODE,'') as EDU_CODE,  
 e.YEAR_GRADUATED,  
 e.VERIFICATION,  
 e.USER_LOGIN as LastUpdateUser,  
 e.UPDATE_DATE LastUpdated 
 
from MCRISS.dbo.CANDIDATE_EDUCATION e 
inner join MCRISS.dbo.Person p on e.marine_candidate_id = p.person_id 
LEFT OUTER JOIN MCRISS.dbo.HIGH_SCHOOL hs on e.SCHOOL_CODE = hs.SCHOOL_CODE 
where p.social_security_number = @SSN 
 
END 
 
 
 
----------------------------------------------------------- 
--Check to see if there are Mul.ple Educa.on Records 
--We dont want to allow anyone to accidentally delete all of them 
--Just a Bad one, when there are mulitples 
 
DECLARE @HasMul. BIT = (SELECT CASE WHEN EXISTS  
    (SELECT 1 
     from @EduTemp 
     GROUP BY MARINE_CANDIDATE_ID 
     HAVING Count(*) > 1) 
     THEN 1 ELSE 0 END) 
 
IF @HasMul. = 0  
AND @UpdateNow = 1 
BEGIN 
 SELECT 'Error: Can only delete when there are muliple EDU records' as HIGHSCHOOL_NAME 
END 
 
 
------------------------------------------ 
--Check to see if .elds ready 
 
IF @UpdateNow = 1   --Asked to delete 
 AND @EduRowguid IS NOT NULL 
 AND @HasMul. = 1 
BEGIN 
 SET @ValidToDelete = 1 
END 
 
 
------------------------------------------ 
------------------------------------------  
--Load the History Table: 
 
IF @ValidToDelete = 1 
BEGIN 
 INSERT INTO [HelpDesk].[SSRS_Toolbox_Update_History] 
  ([TicketNum] 
  ,[Ac.onTable] 
  ,[Ac.onDesc] 
  ,[IdType] 
  ,[IdKey] 
  ,[SSN] 
  ,[BeforeUpdate] 
  ,[A.erUpdate] 
  ,[USER_LOGIN] 
  ,[UPDATE_DATE]) 
 SELECT DISTINCT 
  @TicketNum, 
  'MCRISS.dbo.CANDIDATE_EDUCATION', --Ac.onTable 
  'Educa.on Delete',  --Ac.onDesc 
  'RowGuid', --IdType 
   rowguid, --IdKey 
   ssn, --SSN Field 
   HIGHSCHOOL_NAME +  
  ' | Code:' + SCHOOL_CODE +  
  ' | Edu:' + EDU_CODE + 
  ' | Year:' + YEAR_GRADUATED +  
  ' | Verify:' + VERIFICATION,  --BeforeUpdate 
  'Deleted',  --A.erUpdate 
  @SsrsUser,  --USER_LOGIN 
  getdate()   --UPDATE_DATE 
 FROM @EduTemp 
 WHERE rowguid = @EduRowGuid 
 
END 
 
 
 
------------------------------------------ 
------------------------------------------  
--DELETE THE DATA!!!! 
--LOGIC WILL ONLY UPDATE IF THERE IS A SECOND EDUCATION 
 
IF @ValidToDelete = 1 
BEGIN 
  --SELECT 'this is the delete script' as scpt 
  DELETE FROM MCRISS.dbo.CANDIDATE_EDUCATION 
  WHERE rowguid = @EduRowGuid 
END 
 
 
 
---------------------------------------------- 
---------------------------------------------- 
--This will show 'on-screen' data 'pre-update' 
 
IF @UpdateNow = 0 
BEGIN 
 SELECT * FROM @EduTemp 
 order by YEAR_GRADUATED, SCHOOL_END_DATE 
END 
 
 
---------------------------------------------- 
---------------------------------------------- 
--Results (a.er update) 
--Rerun the 'same' query as earlier to show 'Results' a.er update! 
--Yes, it is redundant for now... maybe a 'view' later? 
 
IF @UpdateNow = 1 and @ValidToDelete = 1 
BEGIN 
 
select  
 e.rowguid, 
 p.social_security_number, 
 p..rst_name + ' ' + p.last_name as [Name],  
 e.MARINE_CANDIDATE_ID,  
 e.SCHOOL_CODE,  
 hs.DOD_CODE, 
 hs.HIGHSCHOOL_NAME,  
 e.SCHOOL_END_DATE,  
 e.EDUCATION_LEVEL + ' - ' + isnull(e.EDUCATION_CODE,'') as EDU_CODE,  
 e.YEAR_GRADUATED,  
 e.VERIFICATION,  
 e.USER_LOGIN as LastUpdateUser,  
 e.UPDATE_DATE LastUpdated 
 
from MCRISS.dbo.CANDIDATE_EDUCATION e 
inner join MCRISS.dbo.Person p on e.marine_candidate_id = p.person_id 
LEFT OUTER JOIN MCRISS.dbo.HIGH_SCHOOL hs on e.SCHOOL_CODE = hs.SCHOOL_CODE 
where p.social_security_number = @SSN 
 
END 
 
END]]></body>
<schema>4CDC6053-D51A-DF0D-BA03-8F31E14B5D20</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>