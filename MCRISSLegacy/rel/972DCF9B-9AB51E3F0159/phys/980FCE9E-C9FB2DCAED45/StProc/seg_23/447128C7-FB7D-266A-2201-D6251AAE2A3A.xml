<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[SP_SSRS_HighSchoolLists_Remove]" directorySegmentName="seg_23" id="447128C7-FB7D-266A-2201-D6251AAE2A3A">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@dod_code varchar(50), 
 @ImportEventId VARCHAR(50) = NULL, 
 @TicketNum varchar(50) = NULL, 
 @SsrsUser varchar(250) = NULL, 
 @UpdateNow INT = 0 
 
AS 
BEGIN 
 
 
DECLARE @OopsInValid BIT = 0, 
  @ValidToDelete BIT = 0 
 
----------------------------------------------------------- 
--Handle User GUID Checks (for use with Prospec.ng Data) 
 
DECLARE @SsrsUserExists BIT = (SELECT CASE WHEN EXISTS  
   (SELECT 1 from UserMgmt.dbo.[User]   
    where Username = @SsrsUser 
    GROUP BY Username 
    HAVING Count(*) = 1) 
    THEN 1 ELSE 0 END) 
 
--select @SsrsUserExists as SsrsUserExists 
 
IF @SSrsUserExists = 0 AND @UpdateNow = 1 
BEGIN 
 select 'Sorry, Username not in UserMgmt' as ImportUser --so it will appear onscreen in SSRS 
 SET @OopsInValid = 1 
END 
 
IF @SSrsUserExists = 1 AND @UpdateNow = 1 
BEGIN 
 DECLARE @SsrsUserGUID varchar(100) 
 SET @SsrsUserGUID = (SELECT UserID FROM UserMgmt.dbo.[User] where Username = @SsrsUser) 
 --select @SsrsUserGUID, @SsrsUser 
END 
 
 
DECLARE @SchoolId varchar(36) 
SELECT @SchoolId = rowguid from MCRISS.dbo.high_school where dod_code = @dod_code 
 
--select @SsrsUserGUID as myGUID 
 
 
/* 
----------------------------------------------------------- 
--Check for Good SSN 
DECLARE @PersonExists BIT = (SELECT CASE WHEN EXISTS  
   (SELECT 1 from dbo.person p  
    JOIN marine_candidate mc on p.PERSON_ID = mc.MARINE_CANDIDATE_ID 
    WHERE p.SOCIAL_SECURITY_NUMBER = LTRIM(RTRIM(@SSN))) 
    THEN 1 ELSE 0 END) 
 
IF @PersonExists = 0 
BEGIN 
 select 'Sorry, Invalid SSN' as Ac.onTable 
 SET @OopsInValid = 1 
END 
*/ 
 
/* 
------------------------------------------ 
--Scenario Catch:  
--In case user has only entered par.al details for update: 
 
IF @UpdateNow = 1          --Asked to update 
 AND @PersonExists = 1  --Gave a good Social 
 AND @ImportEventId IS NOT NULL 
BEGIN 
 SELECT 'Oops.. Please Complete All Fields' as Ac.onTable  --Warning! 
 SET @OopsInValid = 1 
END 
*/ 
 
------------------------------------------ 
--Check to see if All .elds are .lled out Completely 
 
IF @UpdateNow = 1           --Asked to delete 
 AND @dod_code IS NOT NULL 
 AND @ImportEventId IS NOT NULL 
 AND @OopsInValid = 0 
BEGIN 
 SET @ValidToDelete = 1 
END 
 
--SELECT @UpdateNow as updatenow 
--select @dod_code as dod 
--select @ImportEventId as importevent 
--select @OopsInValid as oopsinvalid 
--select @ValidToDelete as validtodelete 
 
------------------------------------------ 
------------------------------------------  
--Lets Grab Some Data 
--To prepare for display, update, and history 
IF @dod_code IS NOT NULL 
 --AND @ProDispos IS NOT NULL 
 --AND @ImportType IS NOT NULL 
BEGIN 
 
DECLARE 
  @HSTemp TABLE( 
  dod_code VARCHAR(50), 
  RSS VARCHAR(100), 
  RS VARCHAR(100), 
  STATE_CODE VARCHAR(3), 
  HIGHSCHOOL_NAME VARCHAR(100), 
  Gradua.onYear VARCHAR(4), 
  ProspectDisposi.onDescrip.on VARCHAR(100), 
  DateObtained DATE, 
  ImportEventId VARCHAR(100), 
  ImportUser VARCHAR(250), 
  ImportCount_Reported INT, 
  ImportCount_Actual INT, 
    ImportEventStatusType VARCHAR(100), 
  ImportFile VARCHAR(100), 
  ImportType VARCHAR(100), 
  ProspectCount INT, 
  ImportPersonCount INT, 
  PersonAddressCount INT, 
  ProspectDrugUseCount INT, 
  ProspectLegalO.enseCount INT, 
  ProspectNonMEPSProfessedExamCount INT, 
  ProspectPhysicalProblems INT, 
  ProspectPhysicalIst INT, 
  ProspectStatusHistory INT, 
  ProspectEduca.on INT 
   ) 
 
INSERT @HSTemp( 
  dod_code, 
  RSS, 
  RS, 
  STATE_CODE, 
  HIGHSCHOOL_NAME, 
  Gradua.onYear, 
  ProspectDisposi.onDescrip.on, 
  DateObtained, 
  ImportEventId, 
  ImportUser, 
  ImportCount_Reported, 
  ImportCount_Actual, 
     ImportEventStatusType, 
  ImportFile, 
  ImportType, 
  ProspectCount, 
  ImportPersonCount, 
  PersonAddressCount, 
  ProspectDrugUseCount, 
  ProspectLegalO.enseCount, 
  ProspectNonMEPSProfessedExamCount, 
  ProspectPhysicalProblems, 
  ProspectPhysicalIst, 
  ProspectStatusHistory, 
  ProspectEduca.on 
    ) 
 
select hs.dod_code, 
 rss.ORGANIZATION_TYPE + ' ' + rss.name as RSS,  
 rs.ORGANIZATION_TYPE + ' ' + rs.NAME as RS,  
 hs.STATE_CODE,  
 hs.HIGHSCHOOL_NAME,  
 ie.Gradua.onYear,  
 isnull(dsp.ProspectDisposi.onDescrip.on,'(None)') as ProspectDisposi.onDescrip.on, 
 cast(ie.DateObtained as DATE) DateObtained, 
    ie.ImportEventId, 
 u.UserName as ImportUser, 
 ie.RecordCount ImportCount_Reported,  
 count(ie.ImportEventId) as ImportCount_Actual, 
 ietp.ImportEventStatusType, 
 CASE WHEN (Len(ie.ImportFileName)) > 40 THEN SUBSTRING(ie.ImportFileName,37,Len(ie.ImportFileName)-36) ELSE '' END AS ImportFile, 
 itp.ImportType, --Comma Delimited 
 count(pr.ProspectId) as ProspectCount,  
 count(ip.ImportPersonId) as ImportPersonCount, 
 count(adr.PersonAddressId) as PersonAddressCount, 
 count(pdu.ProspectDrugUseId) as ProspectDrugUseCount, 
 count(lo.ProspectLegalO.enseId) as ProspectLegalO.enseCount, 
 count(pnmpe.ID) as ProspectNonMEPSProfessedExamCount, 
 count(ppp.ProspectPhysicalProblemsId) as ProspectPhysicalProblems, 
 count(ppi.ID) as ProspectPhysicalIst, 
 count(psh.HistoryID) as ProspectStatusHistory, 
 count(pe.ProspectEduca.onId) as ProspectEduca.on 
  
from mcriss.dbo.high_school hs 
inner join mcriss.dbo.RECRUITING_ORGANIZATION rss on rss.organiza.on_id = hs.ORGANIZATION_ID 
inner join mcriss.dbo.ORGANIZATION_MAP rss_rs on rss_rs.child_organiza.on_id = rss.organiza.on_id 
 and rss_rs.child_organiza.on_id = hs.organiza.on_id 
inner join mcriss.dbo.recrui.ng_organiza.on rs on rs.organiza.on_id = rss_rs.parent_organiza.on_id 
LEFT OUTER JOIN Prospec.ng.USMC.ImportEvent ie ON ie.SchoolId = hs.rowguid 
LEFT OUTER JOIN UserMgmt.dbo.[User] u ON ie.LastUpdateUserId = u.UserID 
LEFT OUTER JOIN Prospec.ng.USMC.ImportEventStatusType ietp on ietp.ImportEventStatusTypeId = ie.ImportEventStatusTypeId 
LEFT OUTER JOIN Prospec.ng.USMC.ImportType itp on ie.ImportTypeId = itp.ImportTypeId 
LEFT OUTER JOIN Prospec.ng.USMC.ImportPerson ip on ip.ImportEventId = ie.ImportEventId 
LEFT OUTER JOIN Prospec.ng.USMC.Prospect pr on pr.PersonId = ip.PersonId 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectDisposi.on dsp on pr.ProspectDisposi.onId = dsp.ProspectDisposi.onId 
LEFT OUTER JOIN Prospec.ng.USMC.PersonAddress adr on ip.PersonId = adr.PersonId 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectDrugUse pdu on pr.ProspectId = pdu.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectMedicalExam pme on pr.ProspectId = pme.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectAsvab asvab on pr.ProspectId = asvab.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectLegalO.ense lo on pr.ProspectId = lo.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectNonMEPSProfessedExam pnmpe on pr.ProspectId = pnmpe.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectPhysicalProblems ppp on pr.ProspectId = ppp.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectPhysicalIst ppi on pr.ProspectId = ppi.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectStatusHistory psh on pr.ProspectId = psh.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectEduca.on pe on pr.ProspectId = pe.ProspectID 
 
where  
 hs.dod_code = @dod_code 
 
 and (@UpdateNow = 2 --View ALL Advanced 
  OR (@UpdateNow != 2 AND dsp.ProspectDisposi.onId = 1)) --Only Show Leads 
 
 and (@UpdateNow = 2 --View All Advanced 
  OR (@UpdateNow != 2 AND ie.ImportTypeId = 1))  --Only Show CommaDelimited 
 
group by  
 rss.ORGANIZATION_TYPE, rss.name, rs.ORGANIZATION_TYPE, rs.NAME, hs.STATE_CODE, hs.HIGHSCHOOL_NAME,  
 ie.Gradua.onYear, hs.UPDATE_DATE, dod_code, dsp.ProspectDisposi.onDescrip.on, u.UserName, cast(ie.DateObtained as DATE),  
 ietp.ImportEventStatusType, ie.RecordCount, ie.ImportEventId, 
 itp.ImportType, ie.ImportFileName 
 
END 
 
 
------------------------------------------ 
------------------------------------------  
--Load the History Table: 
 
IF @ValidToDelete = 1 
BEGIN 
 INSERT INTO [HelpDesk].[SSRS_Toolbox_Update_History] 
  ([TicketNum] 
  ,[Ac.onTable] 
  ,[Ac.onDesc] 
  ,[IdType] 
  ,[IdKey] 
  ,[SSN] 
  ,[BeforeUpdate] 
  ,[A.erUpdate] 
  ,[USER_LOGIN] 
  ,[UPDATE_DATE]) 
 SELECT DISTINCT 
  @TicketNum, 
  'Prospec.ng.USMC.PROSPECT +20', --Ac.onTable 
  'High School Upload Delete',  --Ac.onDesc 
  'ImportEventId', --IdType 
   ImportEventId, --IdKey 
   dod_code, --SSN Field 
   HIGHSCHOOL_NAME +  
  ' | GradYr:' + CAST(isnull(Gradua.onYear,0) AS VARCHAR(4)) +  
  ' | Upload:' + convert(varchar(10),(cast(DateObtained as DATE)),1) + 
  ' | Count:' + CAST(isnull(ImportCount_Reported,0) AS VARCHAR(10)) +  
  ' | Actual:'    + CAST(isnull(ImportCount_Actual,0) AS VARCHAR(10)) + 
  ' | Prospects:' + CAST(isnull(ProspectCount,0) AS VARCHAR(10))  +  
  ' | Persons:'   + CAST(isnull(ImportPersonCount,0) AS VARCHAR(10)),  --BeforeUpdate 
 
  'Deleted',  --A.erUpdate 
  @SsrsUser,  --USER_LOGIN 
  getdate()   --UPDATE_DATE 
 
 FROM @HSTemp 
 WHERE dod_code = @dod_code  
  and ProspectDisposi.onDescrip.on = 'Lead'  --Only delete Leads (1) 
  and ImportEventId = @ImportEventId  --Speci.c ImportEventId 
 
 --SELECT * FROM [HelpDesk].[SSRS_Toolbox_Update_History] 
 --delete FROM [HelpDesk].[SSRS_Toolbox_Update_History] 
END 
 
 
--select @ValidToDelete as ValidToDelete 
 
------------------------------------------ 
------------------------------------------  
--UPDATE THE DATA!!!! 
--LOGIC WILL ONLY UPDATE IF THERE IS A WRONG CODE 
 
IF @ValidToDelete = 1 
BEGIN 
 
  --Prep the Temp Table for Deletes: 
  DECLARE 
    @DelPrep TABLE( 
    ImportEventId VARCHAR(100),  
    ProspectId VARCHAR(100), 
    PersonId VARCHAR(100)) 
 
  INSERT @DelPrep( 
    ImportEventId, 
    ProspectId, 
    PersonId) 
 
  select DISTINCT 
   ie.ImportEventId,  
   pr.ProspectId,  
   pr.personid 
  from PROSPECTING.USMC.importevent ie 
   inner join PROSPECTING.USMC.ImportPerson ip on ip.importeven.d = ie.ImportEventId 
   inner join PROSPECTING.USMC.Prospect pr on pr.PersonId = ip.PersonId 
  where  
   schoolid = @SchoolId  
   and pr.prospectdisposi.onid = 1  --Only delete Leads (1) 
   and pr.NwaId IS NULL    --Get PACS that dont have nwaid/mcriss pro.le 
   and ie.ImportEventId = @ImportEventId  --Speci.c ImportEventId 
 
  ---------------------------------------------------------------- 
  --THE BIG DELETE!!---------------------------------------------- 
 
  --'1 ProspectDrugUse' 
  delete pdu 
  from PROSPECTING.USMC.ProspectDrugUse pdu 
  inner join @DelPrep t on t.ProspectId = pdu.ProspectID 
 
  --'2 ProspectMedicalExam' 
  delete me 
  from PROSPECTING.USMC.ProspectMedicalExam me 
  inner join @DelPrep t on t.ProspectId = me.ProspectID 
 
  --'3 ProspectAsvab' 
  delete asv 
  from PROSPECTING.USMC.ProspectAsvab asv 
  inner join @DelPrep t on t.ProspectId = asv.ProspectID 
 
  --'4 ProspectLegalO.ense' 
  delete lo. 
  from PROSPECTING.USMC.ProspectLegalO.ense lo. 
  inner join @DelPrep t on t.ProspectId = lo..ProspectID 
 
  --'5 ProspectNonMEPSProfessedExam' 
  delete nme 
  from PROSPECTING.USMC.ProspectNonMEPSProfessedExam nme 
  inner join @DelPrep t on t.ProspectId = nme.ProspectID 
 
  --'6 ProspectPhysicalProblems' 
  delete ppp 
  from PROSPECTING.USMC.ProspectPhysicalProblems ppp 
  inner join @DelPrep t on t.ProspectId = ppp.ProspectID 
 
  --'7 ProspectPhysicalIst' 
  delete phy 
  from PROSPECTING.USMC.ProspectPhysicalIst phy 
  inner join @DelPrep t on t.ProspectId = phy.ProspectID 
 
  --'8 ProspectStatusHistory'  
  delete psh 
  from PROSPECTING.USMC.ProspectStatusHistory psh 
  inner join @DelPrep t on t.ProspectId = psh.ProspectID 
 
  --'9 ProspectEduca.on', pe.*  
  delete pe  
  from PROSPECTING.USMC.ProspectEduca.on pe 
  inner join @DelPrep t on t.ProspectId = pe.ProspectId 
 
  --'10 ProspectComment', pc.*  
  delete pc  
  from PROSPECTING.USMC.ProspectComment pc 
  inner join @DelPrep t on t.ProspectId = pc.ProspectId 
 
  --'11 ProspectDependent', pd.*  
  delete pd  
  from PROSPECTING.USMC.ProspectDependent pd 
  inner join @DelPrep t on t.ProspectId = pd.ProspectId 
 
  --'12 ProspectPACData'  
  delete ppd  
  from PROSPECTING.USMC.ProspectPACData ppd 
  inner join @DelPrep t on t.ProspectId = ppd.ProspectId 
 
  --'13 ProspectSchool'  
  delete ps  
  from PROSPECTING.USMC.ProspectSchool ps 
  inner join @DelPrep t on t.ProspectId = ps.ProspectId 
 
  --'14 Prospect' 
  delete pr 
  from PROSPECTING.usmc.Prospect pr 
  inner join @DelPrep t on pr.ProspectId = t.ProspectId 
 
  --'15 PersonPhone'  
  delete pp 
  from PROSPECTING.USMC.PersonPhone pp 
  inner join @DelPrep t on t.personid = pp.personid 
 
  --'16 PersonEmail' 
  delete pe 
  from PROSPECTING.USMC.PersonEmail pe 
  inner join @DelPrep t on t.personid = pe.personid 
 
  --'17 PersonAddress', pa.*  
  delete pa 
  from PROSPECTING.USMC.PersonAddress pa 
  inner join @DelPrep t on t.personid = pa.personid 
 
  --'18 ImportPerson', ipr.* 
  delete ipr 
  from PROSPECTING.USMC.ImportPerson ipr 
  inner join @DelPrep t on t.personid = ipr.personid 
 
  --'19 Person' 
  delete p 
  from PROSPECTING.usmc.Person p 
  inner join @DelPrep t on p.PersonId = t.PersonId 
 
  --'20 ImportEvent' 
  delete ie 
  from PROSPECTING.USMC.importevent ie 
  where schoolid = @SchoolId  --rowguid 
  and ImportEventId = @ImportEventId 
 
END 
 
 
 
---------------------------------------------- 
---------------------------------------------- 
--This will show 'on-screen' data 'pre-update' 
 
IF @UpdateNow != 1 AND @OopsInValid = 0 
BEGIN 
 SELECT * FROM @HSTemp 
 order by Gradua.onYear DESC, DateObtained DESC, ImportEventId 
END 
 
 
---------------------------------------------- 
---------------------------------------------- 
--Results (a.er update) 
--Rerun the 'same' query as earlier to show 'Results' a.er update! 
--Yes, it is redundant for now... maybe a 'view' later? 
 
IF @UpdateNow = 1 and @ValidToDelete = 1 
BEGIN 
 
select hs.dod_code, 
 rss.ORGANIZATION_TYPE + ' ' + rss.name as RSS,  
 rs.ORGANIZATION_TYPE + ' ' + rs.NAME as RS,  
 hs.STATE_CODE, hs.HIGHSCHOOL_NAME,  
 ie.Gradua.onYear,  
 isnull(dsp.ProspectDisposi.onDescrip.on,'(None)') as ProspectDisposi.onDescrip.on, 
 
 cast(ie.DateObtained as DATE) DateObtained, 
    ie.ImportEventId, 
 u.UserName as ImportUser, 
 ie.RecordCount ImportCount_Reported,  
 count(ie.ImportEventId) as ImportCount_Actual, 
 ietp.ImportEventStatusType, 
 CASE WHEN (Len(ie.ImportFileName)) > 40 THEN SUBSTRING(ie.ImportFileName,37,Len(ie.ImportFileName)-36) ELSE '' END AS ImportFile, 
 itp.ImportType, --Comma Delimited 
 
 count(pr.ProspectId) as ProspectCount,  
 count(ip.ImportPersonId) as ImportPersonCount, 
 count(adr.PersonAddressId) as PersonAddressCount, 
 count(pdu.ProspectDrugUseId) as ProspectDrugUseCount, 
 count(lo.ProspectLegalO.enseId) as ProspectLegalO.enseCount, 
 count(pnmpe.ID) as ProspectNonMEPSProfessedExamCount, 
 count(ppp.ProspectPhysicalProblemsId) as ProspectPhysicalProblems, 
 count(ppi.ID) as ProspectPhysicalIst, 
 count(psh.HistoryID) as ProspectStatusHistory, 
 count(pe.ProspectEduca.onId) as ProspectEduca.on 
 
from mcriss.dbo.high_school hs 
inner join mcriss.dbo.RECRUITING_ORGANIZATION rss on rss.organiza.on_id = hs.ORGANIZATION_ID 
inner join mcriss.dbo.ORGANIZATION_MAP rss_rs on rss_rs.child_organiza.on_id = rss.organiza.on_id 
 and rss_rs.child_organiza.on_id = hs.organiza.on_id 
inner join mcriss.dbo.recrui.ng_organiza.on rs on rs.organiza.on_id = rss_rs.parent_organiza.on_id 
 
LEFT OUTER JOIN Prospec.ng.USMC.ImportEvent ie ON ie.SchoolId = hs.rowguid 
LEFT OUTER JOIN UserMgmt.dbo.[User] u ON ie.LastUpdateUserId = u.UserID 
LEFT OUTER JOIN Prospec.ng.USMC.ImportEventStatusType ietp on ietp.ImportEventStatusTypeId = ie.ImportEventStatusTypeId 
LEFT OUTER JOIN Prospec.ng.USMC.ImportType itp on ie.ImportTypeId = itp.ImportTypeId 
 
LEFT OUTER JOIN Prospec.ng.USMC.ImportPerson ip on ip.ImportEventId = ie.ImportEventId 
LEFT OUTER JOIN Prospec.ng.USMC.Prospect pr on pr.PersonId = ip.PersonId 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectDisposi.on dsp on pr.ProspectDisposi.onId = dsp.ProspectDisposi.onId 
LEFT OUTER JOIN Prospec.ng.USMC.PersonAddress adr on ip.PersonId = adr.PersonId 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectDrugUse pdu on pr.ProspectId = pdu.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectMedicalExam pme on pr.ProspectId = pme.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectAsvab asvab on pr.ProspectId = asvab.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectLegalO.ense lo on pr.ProspectId = lo.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectNonMEPSProfessedExam pnmpe on pr.ProspectId = pnmpe.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectPhysicalProblems ppp on pr.ProspectId = ppp.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectPhysicalIst ppi on pr.ProspectId = ppi.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectStatusHistory psh on pr.ProspectId = psh.ProspectID 
LEFT OUTER JOIN Prospec.ng.USMC.ProspectEduca.on pe on pr.ProspectId = pe.ProspectID 
 
where  
 hs.dod_code = @dod_code 
 
 and (@UpdateNow = 2 --View ALL Advanced 
  OR (@UpdateNow != 2 AND dsp.ProspectDisposi.onId = 1)) --Only Show Leads 
 
 and (@UpdateNow = 2 --View All Advanced 
  OR (@UpdateNow != 2 AND ie.ImportTypeId = 1))  --Only Show CommaDelimited 
 
 
group by  
 rss.ORGANIZATION_TYPE, rss.name, rs.ORGANIZATION_TYPE, rs.NAME, hs.STATE_CODE, hs.HIGHSCHOOL_NAME,  
 ie.Gradua.onYear, hs.UPDATE_DATE, dod_code, dsp.ProspectDisposi.onDescrip.on, u.UserName, cast(ie.DateObtained as DATE),  
 ietp.ImportEventStatusType, ie.RecordCount, ie.ImportEventId, 
 itp.ImportType, ie.ImportFileName 
 
order by Gradua.onYear DESC, cast(ie.DateObtained as DATE) DESC, ie.ImportEventId 
 
 
END 
 
END]]></body>
<schema>E0072523-8B4F-426D-2784-57AD654F1189</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>