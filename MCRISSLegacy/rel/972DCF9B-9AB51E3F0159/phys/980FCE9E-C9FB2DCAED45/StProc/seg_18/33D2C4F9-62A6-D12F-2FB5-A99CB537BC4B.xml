<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetNumberofContractsRSS]" directorySegmentName="seg_18" id="33D2C4F9-62A6-D12F-2FB5-A99CB537BC4B">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@Organiza.onID integer,  
 @MonthBeginDate date.me, 
 @MonthEndDate   date.me = NULL, 
 @NewRSS  bit,  
 @Contracts  integer OUTPUT 
AS 
SET NOCOUNT ON 
 
DECLARE @MonthsInDateRange INT 
 
SELECT @MonthEndDate = COALESCE(@MonthEndDate, @MonthBeginDate) 
SELECT @MonthsInDateRange = DATEDIFF(MONTH, @MonthBeginDate, @MonthEndDate)  
 
--- IF THE RSS HAS BEEN OPEN AT LEAST 3 MONTHS (@NEWRSS = 0) THEN GET ITS NUMBER OF CONTRACTS 
--- (e.g., FOR 01 Nov 2004 COUNT ALL CONTRACTS FROM 01 Aug 2004 THROUGH 31 Oct 2004) 
IF @NewRSS = 0 
BEGIN 
 SELECT  
  @Contracts = COUNT(C.CONTRACT_ID)  
 FROM  
  CONTRACT C INNER JOIN NWA N ON  
   (C.NWA_ID = N.NWA_ID AND 
   N.ORGANIZATION_OF_RECORD_ID = @Organiza.onID AND 
   COALESCE(N.COMP_CHANGE_FLAG, 'N') != 'Y' AND 
   DATEDIFF(MONTH, C.CONTRACT_BEGIN_DATE, @MonthBeginDate) BETWEEN 1 - @MonthsInDateRange AND 3) 
END 
ELSE 
BEGIN 
 DECLARE @TotalContracts DECIMAL 
 DECLARE @NumRSSs  INT 
 
 --- IF THIS RSS HAS BEEN OPEN LESS THAN 3 MONTHS THEN GET THE AVERAGE NUMBER OF CONTRACTS FOR 
 --- ALL THE RSSs UNDER THE PARENT RS 
  
 --- GET THE PARENT RS ID 
 DECLARE @RSID int 
 SELECT @RSID = RS.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP RS WHERE RS.CHILD_ORGANIZATION_ID = @Organiza.onID 
 
 --- COUNT THE CONTRACTS FOR THE RS 
 --- THE CONTRACT TABLE ONLY CONTAINS ENLISTED RECORDS  
 --- SO WE DON'T HAVE TO FILTER OUT OFFICER DATA 
 SELECT  
  @TotalContracts = COUNT(C.CONTRACT_ID)  
 FROM  
  CONTRACT C INNER JOIN NWA N ON  
   (C.NWA_ID = N.NWA_ID AND 
   COALESCE(N.COMP_CHANGE_FLAG, 'N') != 'Y' AND 
   DATEDIFF(MONTH, C.CONTRACT_BEGIN_DATE, @MonthBeginDate) BETWEEN 1 - @MonthsInDateRange AND 3) 
  INNER JOIN ORGANIZATION_MAP RSS ON  
   (RSS.PARENT_ORGANIZATION_ID = @RSID AND 
   RSS.CHILD_ORGANIZATION_ID = N.ORGANIZATION_OF_RECORD_ID) 
 
 --- MAKE SURE WE COUNT ONLY RSSs 
 SELECT  
  @NumRSSs = COUNT(RSS.ORGANIZATION_ID)  
 FROM  
  RECRUITING_ORGANIZATION RSS INNER JOIN ORGANIZATION_MAP RS ON  
   (RS.PARENT_ORGANIZATION_ID = @RSID AND 
   RSS.ORGANIZATION_ID = RS.CHILD_ORGANIZATION_ID AND 
   RSS.ORGANIZATION_TYPE = 'RSS' AND  
   RSS.ISOPEN = 'Y') 
 
 --- ROUND THE AVERAGE UP AND RETURN THE VALUE 
 SET @Contracts = CASE @NumRSSs 
   WHEN 0 THEN 0 
   ELSE CEILING(@TotalContracts/@NumRSSs) 
   END 
END 
 
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>