<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateNewPlanForSchoolYear]" directorySegmentName="seg_12" id="F81BE1CF-803B-F2BA-0447-2F2298538DF0">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@SCHOOL_NEW_PLAN_ID uniqueiden..er,  
 @SCHOOL_CODE int, 
 @SCHOOL_YEAR int,  
 @INITIAL_VISIT_NEW_PLAN date.me = null, 
    @SENIOR_LIST_NEW_PLAN date.me = null, 
    @JUNIOR_LIST_NEW_PLAN date.me = null, 
    @NROTC_SENIOR_NEW_PLAN date.me = null, 
    @NROTC_JUNIOR_NEW_PLAN date.me = null, 
    @CAREER_TALK_NEW_PLAN date.me = null, 
    @BAND_TALK_NEW_PLAN date.me = null, 
    @FIRST_SENIOR_NEW_PLAN date.me = null, 
    @School_Priority char(1) = null, 
    @School_Status varchar(4) = null, 
    @School_Access char(1) = null, 
    @RecruiterID int = null, 
    @TimestampCheck date.me OUTPUT, 
    @AsvabResp char(1) = 'N' 
 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
DECLARE @CurrentSchoolYear int 
DECLARE @Now date.me 
SET @Now = GETDATE() 
SET @CurrentSchoolYear = Year(@Now) 
 
IF MONTH(GETDATE()) >= 7 
BEGIN 
 SET @CurrentSchoolYear = @CurrentSchoolYear + 1 
END 
 
IF EXISTS(SELECT ID FROM dbo.HIGH_SCHOOL_NEW_PLAN WHERE ID = @SCHOOL_NEW_PLAN_ID) 
 
BEGIN 
     
    --- if it is current or future pro.le, update everything 
    IF @SCHOOL_YEAR >= @CurrentSchoolYear 
    BEGIN  
  UPDATE dbo.HIGH_SCHOOL_NEW_PLAN 
     SET INITIAL_VISIT_NEW_PLAN = @INITIAL_VISIT_NEW_PLAN, 
      SENIOR_LIST_NEW_PLAN = @SENIOR_LIST_NEW_PLAN, 
      JUNIOR_LIST_NEW_PLAN = @JUNIOR_LIST_NEW_PLAN, 
      NROTC_SENIOR_NEW_PLAN = @NROTC_SENIOR_NEW_PLAN, 
      NROTC_JUNIOR_NEW_PLAN = @NROTC_JUNIOR_NEW_PLAN, 
      CAREER_TALK_NEW_PLAN = @CAREER_TALK_NEW_PLAN, 
      BAND_TALK_NEW_PLAN = @BAND_TALK_NEW_PLAN, 
      FIRST_SENIOR_NEW_PLAN = @FIRST_SENIOR_NEW_PLAN, 
      NEW_PLAN_APPROVED = 0, 
      APPROVED_BY_USER = null,  
      UPDATE_DATE = @Now, 
      Priority_Code = @School_Priority, 
      Status_Code = @School_Status, 
      Access_Code = @School_Access, 
      Recruiter_ID = @RecruiterID  
    FROM dbo.HIGH_SCHOOL_NEW_PLAN  
   WHERE ID = @SCHOOL_NEW_PLAN_ID 
  END 
  ELSE  --- @SCHOOL_YEAR < @CurrentSchoolYear --- update with only new plan info 
  BEGIN 
  UPDATE dbo.HIGH_SCHOOL_NEW_PLAN 
     SET INITIAL_VISIT_NEW_PLAN = @INITIAL_VISIT_NEW_PLAN, 
      SENIOR_LIST_NEW_PLAN = @SENIOR_LIST_NEW_PLAN, 
      JUNIOR_LIST_NEW_PLAN = @JUNIOR_LIST_NEW_PLAN, 
      NROTC_SENIOR_NEW_PLAN = @NROTC_SENIOR_NEW_PLAN, 
      NROTC_JUNIOR_NEW_PLAN = @NROTC_JUNIOR_NEW_PLAN, 
      CAREER_TALK_NEW_PLAN = @CAREER_TALK_NEW_PLAN, 
      BAND_TALK_NEW_PLAN = @BAND_TALK_NEW_PLAN, 
      FIRST_SENIOR_NEW_PLAN = @FIRST_SENIOR_NEW_PLAN, 
      NEW_PLAN_APPROVED = 0, 
      APPROVED_BY_USER = null,  
      UPDATE_DATE = @Now 
       
    FROM dbo.HIGH_SCHOOL_NEW_PLAN  
   WHERE ID = @SCHOOL_NEW_PLAN_ID 
  END 
 
END 
ELSE 
BEGIN 
  
 --- if it is current or future pro.le, update everything 
    IF @SCHOOL_YEAR >= @CurrentSchoolYear 
    BEGIN  
     
  INSERT INTO [dbo].[HIGH_SCHOOL_NEW_PLAN] 
      ([ID] 
      ,[INITIAL_VISIT_NEW_PLAN] 
      ,[SENIOR_LIST_NEW_PLAN] 
      ,[JUNIOR_LIST_NEW_PLAN] 
      ,[NROTC_SENIOR_NEW_PLAN] 
      ,[NROTC_JUNIOR_NEW_PLAN] 
      ,[CAREER_TALK_NEW_PLAN] 
      ,[BAND_TALK_NEW_PLAN] 
      ,[FIRST_SENIOR_NEW_PLAN] 
      ,[NEW_PLAN_APPROVED] 
      ,[APPROVED_BY_USER] 
      ,[UPDATE_DATE] 
      ,[Priority_Code] 
      ,[Status_Code] 
      ,[Access_Code] 
      ,[Recruiter_ID]) 
   VALUES 
      (@SCHOOL_NEW_PLAN_ID 
      ,@INITIAL_VISIT_NEW_PLAN 
      ,@SENIOR_LIST_NEW_PLAN 
      ,@JUNIOR_LIST_NEW_PLAN 
      ,@NROTC_SENIOR_NEW_PLAN 
      ,@NROTC_JUNIOR_NEW_PLAN 
      ,@CAREER_TALK_NEW_PLAN 
      ,@BAND_TALK_NEW_PLAN 
      ,@FIRST_SENIOR_NEW_PLAN 
      ,0 
      ,null 
      ,@Now 
      ,@School_Priority  
      ,@School_Status 
      ,@School_Access  
      ,@RecruiterID) 
 END 
 ELSE  --- @SCHOOL_YEAR < @CurrentSchoolYear --- insert only with new plan info 
 BEGIN 
  INSERT INTO [dbo].[HIGH_SCHOOL_NEW_PLAN] 
      ([ID] 
      ,[INITIAL_VISIT_NEW_PLAN] 
      ,[SENIOR_LIST_NEW_PLAN] 
      ,[JUNIOR_LIST_NEW_PLAN] 
      ,[NROTC_SENIOR_NEW_PLAN] 
      ,[NROTC_JUNIOR_NEW_PLAN] 
      ,[CAREER_TALK_NEW_PLAN] 
      ,[BAND_TALK_NEW_PLAN] 
      ,[FIRST_SENIOR_NEW_PLAN] 
      ,[NEW_PLAN_APPROVED] 
      ,[APPROVED_BY_USER] 
      ,[UPDATE_DATE] 
      ) 
   VALUES 
      (@SCHOOL_NEW_PLAN_ID 
      ,@INITIAL_VISIT_NEW_PLAN 
      ,@SENIOR_LIST_NEW_PLAN 
      ,@JUNIOR_LIST_NEW_PLAN 
      ,@NROTC_SENIOR_NEW_PLAN 
      ,@NROTC_JUNIOR_NEW_PLAN 
      ,@CAREER_TALK_NEW_PLAN 
      ,@BAND_TALK_NEW_PLAN 
      ,@FIRST_SENIOR_NEW_PLAN 
      ,0 
      ,null 
      ,@Now 
      )  
 END 
            
      UPDATE dbo.HIGH_SCHOOL_PROFILE 
         SET NEW_PLAN_ID = @SCHOOL_NEW_PLAN_ID 
       WHERE SCHOOL_CODE = @SCHOOL_CODE AND 
           SCHOOL_YEAR = @SCHOOL_YEAR  
               
END 
 
UPDATE dbo.HIGH_SCHOOL_PROFILE 
     SET ASVAB_RESP = @AsvabResp 
   WHERE SCHOOL_CODE = @SCHOOL_CODE AND 
         SCHOOL_YEAR = @SCHOOL_YEAR  
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
SET @TimestampCheck = @Now 
SELECT @TimestampCheck 
 
END]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>