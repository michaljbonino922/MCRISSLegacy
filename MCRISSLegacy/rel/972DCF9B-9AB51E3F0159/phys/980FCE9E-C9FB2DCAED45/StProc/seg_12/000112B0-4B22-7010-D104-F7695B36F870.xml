<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_ODSE_Update_BridgeTable]" directorySegmentName="seg_12" id="000112B0-4B22-7010-D104-F7695B36F870">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:42:37 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[AS 
/******************************************************************************* 
** This Stored Procedure uses SYNONYMNs in order reference objects in the  
**  POS linked server. 
** 
** SYNONYM Legend:  
** 
**  SYNONYM  |  TABLE NAME 
** ODSE_CE  | CIVILIAN_EDUC_INFO_R147 
** ODSE_CS  | CUTTING_SCORE 
** ODSE_CSG | CUTTING_SCORE_GROUP 
** ODSE_DR  | DIARY_RESEARCH 
** ODSE_D   | DRILL 
** ODSE_EM  | ELECTRONIC_MAIL_R991 
** ODSE_EN  | ENLISTED 
** ODSE_IM  | INDIVIDUAL_MARINE 
** ODSE_MF  | MARINE_FAMILY 
** ODSE_MI  | MARINE_INFO 
** ODSE_NOK | MARINE_NEXT_OF_KIN 
** ODSE_MD  | MONITOR_DETAILS 
** ODSE_MA  | MOS_ADDITIONAL 
** ODSE_PC  | PAY_CONTROL 
** ODSE_PI  | PERSON_IDENTIFICATION_R159 
** ODSE_R   | RESERVE 
** ODSE_S   | SEPARATION 
** ODSE_ST  | SERVICE_TOUR 
** ODSE_TS  | TEST_SCORE 
** ODSE_WC  | WEIGHT_CONTROL_R113 
** 
 
 
Changed on 10-19-2016: 
 
SELECT  top 10  MF.SSN  
,MF.PARENT2_ADDRESS1 AS 'MOTHER_ADDRESS1'  --Change Made by Paul a.er ODSE changes in Marine_Family Table 
,MF.PARENT2_ADDRESS2 AS 'MOTHER_ADDRESS2'  --Change Made by Paul a.er ODSE changes in Marine_Family Table 
,MF.PARENT2_NAME AS 'MOTHER_Name'          --Change Made by Paul a.er ODSE changes in Marine_Family Table 
,getdate() 
 
********************************************************************************/ 
 
DECLARE @PSR_CycleDate date.me 
 
SET @PSR_CycleDate = (SELECT MAX(LAST_UPDATED_BY_ODSE) 
      FROM ODSE_BridgeToPSR) 
 
--SELECT @PSR_CycleDate 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
CREATE TEMP TABLE FOR ALL NEW MARINE LEADS IN PSR 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
SELECT SSN 
INTO #MAR  
FROM ODSE_AllMarineLeads  
WHERE NEW_LEAD = 0 
   
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
CREATE TEMP TABLE FOR PENDING JOINS IN PSR 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
SELECT P.SSN 
INTO ##TEMP_SSN 
FROM PERSON P WITH (NOLOCK) 
JOIN RECRUIT R WITH (NOLOCK) ON R.PERSONID = P.PERSONID 
JOIN RECRUITCURRENTLEAD RCL WITH (NOLOCK) ON RCL.RECRUITID = R.RECRUITID 
JOIN APPLICANTPACKAGE AP WITH (NOLOCK) ON AP.LEADID = RCL.LEADID 
JOIN LEADSTATUSDISPOSITION LSD WITH (NOLOCK) ON LSD.LEADID = AP.LEADID 
WHERE StatusDisposi.onID IN (22,30,31,32,33) 
 OR (StatusDisposi.onID IN (28, 37) AND DATEDIFF(DAY,DateJoinCredit,getdate()) BETWEEN 0 AND 90) 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
CREATE TEMP TABLE FOR MONITOR_DETAILS 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
SELECT DISTINCT  UMD.SSN 
    ,UMD.DRAW_CASE_SIGNAL_CODE 
    ,CASE WHEN ISDATE(Convert(date.me,UMD.CYCLE_DATE)) = 1 THEN Convert(date.me,UMD.CYCLE_DATE) 
     ELSE NULL 
     END AS CYCLE_DATE 
INTO ##MONITOR_DETAILS 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_MD UMD ON MAR.SSN = UMD.SSN 
WHERE Convert(date.me,UMD.CYCLE_DATE) = (SELECT MAX(Convert(date.me,M2.CYCLE_DATE)) AS MAXDATE 
      FROM ODSE_MD M2 
      WHERE  M2.SSN = UMD.SSN) 
 AND UMD.MONITOR_DETAILS_ID = ( SELECT MAX(M3.MONITOR_DETAILS_ID) AS MONITOR_DETAILS_ID 
         FROM ODSE_MD M3 
         WHERE  M3.SSN = UMD.SSN)  
 
PRINT '##MONITOR_DETAILS COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
INSERT DATA FROM MARINE_NEXT_OF_KIN INTO UpdateFromOSDE 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, NOK_RELATIONSHIP1_CODE, NOK_TELEPHONE1, DRAW_CASE_SIGNAL_CODE,LAST_UPDATED_BY_ODSE) 
SELECT  UN.SSN  
  ,UN.NOK_RELATIONSHIP 
  ,UN.NOK_TELEPHONE 
  ,MD.DRAW_CASE_SIGNAL_CODE 
  ,getdate() 
FROM ( SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_NOK UN ON MAR.SSN = UN.SSN 
LEFT JOIN ##MONITOR_DETAILS MD ON UN.SSN = MD.SSN  
WHERE UN.MARINE_NEXT_OF_KIN_ID = 1  
 
UPDATE ODSE 
SET  ODSE.NOK_RELATIONSHIP1_CODE =  U.NOK_RELATIONSHIP1_CODE  
 ,ODSE.NOK_TELEPHONE1 = U.NOK_TELEPHONE1 
 ,ODSE.DRAW_CASE_SIGNAL_CODE = U.DRAW_CASE_SIGNAL_CODE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE 
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##ODSE_NEXT_OF_KIN COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR ELECTRONIC_MAIL_R991 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ELECTRONIC_MAIL_ADDRESS_TEXT,LAST_UPDATED_BY_ODSE) 
SELECT  MAR.SSN  
  ,UEM.ELECTRONIC_MAIL_ADDRESS_TEXT  
  ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_EM UEM ON MAR.SSN = UEM.SSN 
WHERE UEM.REMARK_SEQUENCE_NUMBER_RMK_991 = (SELECT MAX(UEM2.REMARK_SEQUENCE_NUMBER_RMK_991)  
           FROM ODSE_EM UEM2  
           WHERE UEM2.SSN = MAR.SSN) 
GROUP BY MAR.SSN , ELECTRONIC_MAIL_ADDRESS_TEXT, CYCLE_DATE 
 
 
UPDATE ODSE 
SET  ODSE.ELECTRONIC_MAIL_ADDRESS_TEXT = U.ELECTRONIC_MAIL_ADDRESS_TEXT  
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##ODSE_ELECTRONIC_MAIL COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR CIVILIAN_EDUC_INFO_R147 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN,ALMRS_CIVILIAN_EDUC_LEVEL_CODE,LAST_UPDATED_BY_ODSE) 
SELECT  MAR.SSN 
  ,MAX(UCE.CIVILIAN_EDUC_LEVEL_CODE)  
  ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_CE UCE ON MAR.SSN = UCE.SSN 
GROUP BY MAR.SSN 
 
 
UPDATE ODSE 
SET ODSE.ALMRS_CIVILIAN_EDUC_LEVEL_CODE = U.ALMRS_CIVILIAN_EDUC_LEVEL_CODE 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN  
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##ODSE_CIVILIAN_EDUC COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR MOS_ADDITIONAL 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ADDL_FIRST_MOS_CODE,ADDL_SECOND_MOS_CODE,ADDL_THIRD_MOS_CODE, LAST_UPDATED_BY_ODSE) 
SELECT  IMAR.SSN 
  ,ADD_FIRST.MOS_ADDITIONAL_REMARK_CODE AS ADDL_FIRST_MOS_CODE 
  ,ADD_SEC.MOS_ADDITIONAL_REMARK_CODE AS ADDL_SECOND_MOS_CODE 
  ,NULL AS ADDL_THIRD_MOS_CODE 
  ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS IMAR 
LEFT JOIN ( SELECT MA1.SSN, MA1.MOS_ADDITIONAL_REMARK_CODE, MA1.CYCLE_DATE 
   FROM ODSE_MA MA1 
   WHERE MA1.REMARK_SEQUENCE_NUMBER_RMK_144 = '99999'  
    AND MA1.MOS_ADDITIONAL_REMARK_CODE IS NOT NULL  
    AND MA1.MOS_ADDITIONAL_REMARK_CODE <> '0000'  
    AND MA1.MOS_PRIMARY_REMARK_CODE IS NOT NULL) AS ADD_FIRST ON IMAR.SSN = ADD_FIRST.SSN 
LEFT JOIN ( SELECT MA2.SSN, MA2.MOS_ADDITIONAL_REMARK_CODE, MA2.CYCLE_DATE   
   FROM ODSE_MA MA2 
   WHERE MA2.REMARK_SEQUENCE_NUMBER_RMK_144 = '99998'  
    AND MA2.MOS_ADDITIONAL_REMARK_CODE IS NOT NULL  
    AND MA2.MOS_ADDITIONAL_REMARK_CODE <> '0000'  
    AND MA2.MOS_PRIMARY_REMARK_CODE IS NOT NULL) AS ADD_SEC ON IMAR.SSN = ADD_SEC.SSN 
 
 
UPDATE ODSE 
SET  ODSE.ADDL_FIRST_MOS_CODE = UM.ADDL_FIRST_MOS_CODE 
 ,ODSE.ADDL_SECOND_MOS_CODE = UM.ADDL_SECOND_MOS_CODE 
 ,ODSE.ADDL_THIRD_MOS_CODE = UM.ADDL_THIRD_MOS_CODE 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE UM ON ODSE.SSN = UM.SSN  
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##ODSE_MOS_ADDITIONAL COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR PERSON_IDENTIFICATION_R159 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
--INSERT INTO UpdateFromODSE(SSN, ALMRS_HEIGHT, ALMRS_WEIGHT, LAST_UPDATED_BY_ODSE) 
--SELECT  MAR.SSN 
--  ,UPID.PERSON_HEIGHT_QUANTITY 
--  ,UPID.PERSON_WEIGHT  
--  ,getdate() 
--FROM (SELECT SSN  
--  FROM ODSE_AllMarineLeads  
--  WHERE NEW_LEAD = 0) AS MAR 
--JOIN ODSE_PI UPID ON MAR.SSN = UPID.SSN 
--WHERE REMARK_SEQUENCE_NUMBER_RMK_159 = (SELECT MAX(UPID2.REMARK_SEQUENCE_NUMBER_RMK_159) 
--          FROM ODSE_PI UPID2 
--          WHERE UPID2.SSN = MAR.SSN) 
--GROUP BY MAR.SSN, UPID.PERSON_HEIGHT_QUANTITY, UPID.PERSON_WEIGHT 
-- 
-- 
--UPDATE ODSE 
--SET  ODSE.ALMRS_HEIGHT = U.ALMRS_HEIGHT 
-- ,ODSE.ALMRS_WEIGHT = U.ALMRS_WEIGHT 
-- ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
-- ,ODSE.PSR_UPDATE_PENDING = 1 
--FROM ODSE_BridgeToPSR ODSE  
--JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
-- 
--IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
--TRUNCATE TABLE UpdateFromODSE 
-- 
--PRINT '##ODSE_PERSON_ID COMPLETE' 
 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR WEIGHT_CONTROL_R113 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN,ALMRS_WEIGHT_CONTROL_STATUS_CODE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  UW.SSN , 
    UW.WEIGHT_CONTROL_STATUS_CODE  
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_WC UW ON MAR.SSN = UW.SSN  
WHERE REMARK_SEQUENCE_NUMBER_RMK_113 = (SELECT MAX(w2.REMARK_SEQUENCE_NUMBER_RMK_113)  
          FROM ODSE_WC w2 
          WHERE w2.SSN = Convert(Char(10),UW.SSN)) 
 
UPDATE ODSE 
SET  ODSE.ALMRS_WEIGHT_CONTROL_STATUS_CODE = U.ALMRS_WEIGHT_CONTROL_STATUS_CODE  
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##WEIGHT_CONTROL COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR ENLISTED 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, COMPOSITE_SCORE, CONDUCT_AVERAGE_SERVICE, PROFICIENCY_AVERAGE_SERVICE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  EN.SSN  
    ,EN.COMPOSITE_SCORE 
    ,EN.CONDUCT_AVERAGE_SERVICE 
    ,EN.PROFICIENCY_AVERAGE_SERVICE 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN  ODSE_EN EN ON MAR.SSN = EN.SSN 
WHERE EN.CYCLE_DATE = ( SELECT MAX(E2.CYCLE_DATE) AS MAXDATE 
      FROM ODSE_EN E2 
      WHERE  E2.SSN = MAR.SSN) 
 
UPDATE ODSE 
SET  ODSE.COMPOSITE_SCORE = U.COMPOSITE_SCORE 
 ,ODSE.CONDUCT_AVERAGE_SERVICE = U.CONDUCT_AVERAGE_SERVICE 
 ,ODSE.PROFICIENCY_AVERAGE_SERVICE = U.PROFICIENCY_AVERAGE_SERVICE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT '##ENLISTED COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR TEST SCORE 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ASVAB_COMP_GENERAL_TECH, ASVAB_COMP_MECH_MAINT, ASVAB_COMP_CLERICAL, ASVAB_COMP_ELECTRONICS, ALMRS_DEFENSE_LANG_APT_BATTERY_SCORE, ELECTRONIC_DP_TEST_SCORE, ALMRS_GCT_TEST_TOTAL, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  TS.SSN  
    ,TS.ASVAB_COMP_GENERAL_TECH_QY 
    ,TS.ASVAB_COMP_MECH_MAINT_QY 
    ,TS.ASVAB_COMP_CLERICAL_QY 
    ,TS.ASVAB_COMP_ELECTRONICS_QY 
    ,TS.DEFENSE_LANG_APT_BATTERY_SCORE 
    ,TS.ELECTRONIC_DP_TEST_SCORE 
    ,TS.GCT_TEST_TOTAL 
    ,getdate() 
FROM ( SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_TS TS ON MAR.SSN = TS.SSN 
 
UPDATE ODSE 
SET  ODSE.ASVAB_COMP_GENERAL_TECH = U.ASVAB_COMP_GENERAL_TECH 
 ,ODSE.ASVAB_COMP_MECH_MAINT = U.ASVAB_COMP_MECH_MAINT 
 ,ODSE.ASVAB_COMP_CLERICAL = U.ASVAB_COMP_CLERICAL 
 ,ODSE.ASVAB_COMP_ELECTRONICS = U.ASVAB_COMP_ELECTRONICS 
 ,ODSE.ALMRS_DEFENSE_LANG_APT_BATTERY_SCORE = U.ALMRS_DEFENSE_LANG_APT_BATTERY_SCORE 
 ,ODSE.ELECTRONIC_DP_TEST_SCORE = U.ELECTRONIC_DP_TEST_SCORE 
 ,ODSE.ALMRS_GCT_TEST_TOTAL = U.ALMRS_GCT_TEST_TOTAL 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'TEST SCORE COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR SEPARATION 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, DROP_DISCHARGE_UNIT_DATE, REENLIST_RECOMMENDATION_CODE, SEPARATION_CODE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  S.SSN  
    ,CASE WHEN ISDATE(Convert(date.me,S.DROP_DISCHARGE_UNIT_DATE)) = 1 THEN Convert(date.me,S.DROP_DISCHARGE_UNIT_DATE) 
     ELSE NULL 
     END AS DROP_DISCHARGE_UNIT_DATE 
    ,S.REENLIST_RECOMMENDATION_CODE 
    ,S.SEPARATION_CODE 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_S S ON MAR.SSN = S.SSN 
 
UPDATE ODSE 
SET  ODSE.DROP_DISCHARGE_UNIT_DATE = U.DROP_DISCHARGE_UNIT_DATE 
 ,ODSE.REENLIST_RECOMMENDATION_CODE = U.REENLIST_RECOMMENDATION_CODE 
 ,ODSE.SEPARATION_CODE = U.SEPARATION_CODE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'SEPARATION COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR DIARY RESEARCH 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ALMRS_LAST_TOUCHED_RECORD_DATE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  DR.SSN  
    ,CASE WHEN ISDATE(Convert(date.me,DR.LAST_TOUCHED_RECORD_DATE)) = 1 THEN Convert(date.me,DR.LAST_TOUCHED_RECORD_DATE) 
     ELSE NULL 
     END AS [LAST_TOUCHED_RECORD_DATE] 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_DR DR ON MAR.SSN = DR.SSN 
 
UPDATE ODSE 
SET  ODSE.ALMRS_LAST_TOUCHED_RECORD_DATE = U.ALMRS_LAST_TOUCHED_RECORD_DATE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE 
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN  
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'DIARY RESEARCH COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR RESERVE 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ALMRS_DATE_INITIAL_ENTRY_RESERVE, RESERVE_UNIT_JOIN_DATE, CRCR_CERTIFICATION_DATE, ALMRS_TRAINING_CATEGORY_PAY_GROUP, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  R.SSN  
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,R.DATE_INITIAL_ENTRY_RESERVE))) = 1 THEN R.DATE_INITIAL_ENTRY_RESERVE 
     ELSE NULL  
     END AS [DATE_INITIAL_ENTRY_RESERVE] 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,R.RESERVE_UNIT_JOIN_DATE))) = 1 THEN R.RESERVE_UNIT_JOIN_DATE 
     ELSE NULL 
     END AS [RESERVE_UNIT_JOIN_DATE] 
    ,CASE WHEN ISDATE(R.CRCR_CERTIFICATION_DATE) = 1 THEN R.CRCR_CERTIFICATION_DATE 
     ELSE NULL 
     END AS [CRCR_CERTIFICATION_DATE] 
    ,R.TRAINING_CATEGORY_PAY_GROUP 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_R R ON MAR.SSN = R.SSN 
 
UPDATE ODSE 
SET  ODSE.ALMRS_DATE_INITIAL_ENTRY_RESERVE = U.ALMRS_DATE_INITIAL_ENTRY_RESERVE 
 ,ODSE.RESERVE_UNIT_JOIN_DATE = U.RESERVE_UNIT_JOIN_DATE 
 ,ODSE.CRCR_CERTIFICATION_DATE = U.CRCR_CERTIFICATION_DATE 
 ,ODSE.ALMRS_TRAINING_CATEGORY_PAY_GROUP = U.ALMRS_TRAINING_CATEGORY_PAY_GROUP 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE 
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN  
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'RESERVE COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR DRILL 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, ALMRS_TOTAL_SATISFACTORY_YEAR, TOTAL_CAREER_RETIREMENT_POINTS, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  D.SSN  
    ,D.TOTAL_SATISFACTORY_YEAR 
    ,D.TOTAL_CAREER_RETIREMENT_POINTS 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_D D ON MAR.SSN = D.SSN 
 
UPDATE ODSE 
SET  ODSE.ALMRS_TOTAL_SATISFACTORY_YEAR = U.ALMRS_TOTAL_SATISFACTORY_YEAR 
 ,ODSE.TOTAL_CAREER_RETIREMENT_POINTS = U.TOTAL_CAREER_RETIREMENT_POINTS 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'DRILL COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR PAY_CONTROL 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, DEPENDENT_CERTIFICATION_CODE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  PC.SSN  
    ,PC.DEPENDENT_CERTIFICATION_CODE 
    ,getdate() 
FROM (SELECT SSN 
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_PC PC ON MAR.SSN = PC.SSN 
 
UPDATE ODSE 
SET  ODSE.DEPENDENT_CERTIFICATION_CODE = U.DEPENDENT_CERTIFICATION_CODE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'PAY_CONTROL COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR SERVICE_TOUR 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, FORMER_MONITORED_COMMAND_CODE, FORMER_REPORTING_UNIT_CODE, LAST_UPDATED_BY_ODSE) 
SELECT DISTINCT  ST.SSN  
    ,ST.FORMER_MONITORED_COMMAND_CODE 
    ,ST.FORMER_REPORTING_UNIT_CODE 
    ,getdate() 
FROM ( SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_ST ST ON MAR.SSN = ST.SSN 
 
UPDATE ODSE 
SET  ODSE.FORMER_MONITORED_COMMAND_CODE = U.FORMER_MONITORED_COMMAND_CODE 
 ,ODSE.FORMER_REPORTING_UNIT_CODE = U.FORMER_REPORTING_UNIT_CODE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'SERVICE_TOUR COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR MARINE_FAMILY 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE(SSN, MOTHER_ADDRESS1, MOTHER_ADDRESS2, MOTHER_NAME, LAST_UPDATED_BY_ODSE) 
SELECT  top 10  MF.SSN  
    ,MF.PARENT2_ADDRESS1 AS 'MOTHER_ADDRESS1'  --Change Made by Paul a.er ODSE changes in Marine_Family Table 
    ,MF.PARENT2_ADDRESS2 AS 'MOTHER_ADDRESS2'  --Change Made by Paul a.er ODSE changes in Marine_Family Table 
    ,MF.PARENT2_NAME AS 'MOTHER_Name'          --Change Made by Paul a.er ODSE changes in Marine_Family Table 
    ,getdate() 
FROM ( SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_MF MF ON MAR.SSN = MF.SSN 
 
UPDATE ODSE 
SET  ODSE.MOTHER_ADDRESS1 = U.MOTHER_ADDRESS1 
 ,ODSE.MOTHER_ADDRESS2 = U.MOTHER_ADDRESS2 
 ,ODSE.MOTHER_NAME = U.MOTHER_NAME 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'MARINE_FAMILY COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR MARINE_INFO 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 
INSERT INTO UpdateFromODSE 
(   
  SSN 
 ,ALMRS_DATE_ENLISTMENT_OR_ACCEPTANCE 
 ,DATE_OF_LAST_PHYSICAL 
 ,ALMRS_HIV_III_TESTED 
 ,RESERVE_COMPONENT_CODE 
 ,RESERVE_EXP_CURRENT_CONTRACT 
 ,RESERVE_RECORD_STATUS_CODE 
 ,SERVICE_MEDICAL_REC_BOOK_FLAG 
 ,LAST_UPDATED_BY_ODSE 
) 
SELECT DISTINCT  MI.SSN  
    ,MI.DATE_ENLISTMENT_OR_ACCEPTANCE 
    ,CASE WHEN Convert(Date.me,ISDATE(Convert(Date.me,MI.DATE_OF_LAST_PHYSICAL))) = 1 THEN Convert(date.me,MI.DATE_OF_LAST_PHYSICAL) 
     ELSE NULL 
     END AS [DATE_OF_LAST_PHYSICAL] 
    ,MI.HIV_III_TESTED 
    ,MI.RESERVE_COMPONENT_CODE 
   ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,MI.RESERVE_EXP_CURRENT_CONTRACT))) = 1 THEN Convert(date.me,MI.RESERVE_EXP_CURRENT_CONTRACT) 
     ELSE NULL 
     END AS [RESERVE_EXP_CURRENT_CONTRACT] 
    ,MI.RESERVE_RECORD_STATUS_CODE 
    ,'0' as SERVICE_MEDICAL_REC_BOOK_FLAG 
    ,getdate() 
FROM (SELECT SSN  
  FROM ODSE_AllMarineLeads  
  WHERE NEW_LEAD = 0) AS MAR 
JOIN ODSE_MI MI ON MAR.SSN = MI.SSN 
WHERE (RIGHT(MI.SSN,9) IN (SELECT SSN FROM ##TEMP_SSN)) 
 
UPDATE ODSE 
SET  ODSE.ALMRS_DATE_ENLISTMENT_OR_ACCEPTANCE = U.ALMRS_DATE_ENLISTMENT_OR_ACCEPTANCE 
 ,ODSE.DATE_OF_LAST_PHYSICAL = U.DATE_OF_LAST_PHYSICAL 
 ,ODSE.ALMRS_HIV_III_TESTED = U.ALMRS_HIV_III_TESTED 
 ,ODSE.RESERVE_COMPONENT_CODE = U.RESERVE_COMPONENT_CODE 
 ,ODSE.RESERVE_EXP_CURRENT_CONTRACT = U.RESERVE_EXP_CURRENT_CONTRACT 
 ,ODSE.RESERVE_RECORD_STATUS_CODE = U.RESERVE_RECORD_STATUS_CODE 
 ,ODSE.SERVICE_MEDICAL_REC_BOOK_FLAG = U.SERVICE_MEDICAL_REC_BOOK_FLAG 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'MARINE_INFO COMPLETE' 
 
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * 
BEGIN INSERT FOR INDIVIDUAL_MARINE 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 
 --Drop table ##ODSE_IM1(SSN Char(10)) 
 
Select * 
 
Into ##ODSE_IM1 
From ODSE_IM 
INSERT INTO UpdateFromODSE 
( 
  SSN 
 ,ALMRS_ADDRESS_VALIDATION_DATE 
 ,ALMRS_ARMED_FORCES_ACT_DU_BASE_DATE 
 ,ALMRS_ARMED_FORCES_ORIG_ENTRY_DATE 
 ,BILLET_MOS_CODE 
 ,CITY_ADDRESS 
 ,COMPONENT_CODE 
 ,DATE_OF_BIRTH 
 ,ETHNIC_GROUP_CODE 
 ,EXPIRATION_OBLIGATED_SERVICE 
 ,EXPIRATION_OF_ACTIVE_SERVICE 
 ,FIRST_NAME 
 ,HOME_OF_RECORD_CITY_CODE 
 ,HOME_OF_RECORD_COUNTY 
 ,HOME_OF_RECORD_STATE_COUNTRY 
 ,HOME_TELEPHONE_NUMBER 
 ,LAST_NAME 
 ,MARITAL_STATUS_CODE 
 ,MIDDLE_INITIAL 
 ,NUMBER_OF_DEPENDENTS 
 ,PAY_ENTRY_BASE_DATE 
 ,PLANNED_REENL_EXT_RETIRE_FLAG 
 ,PRESENT_GRADE_CODE 
 ,PRESENT_MONITORED_COMMAND_CODE 
 ,PRESENT_RANK_DATE 
 ,PRESENT_REPORTING_UNIT_CODE 
 ,PRESENT_UNIT_JOINED_DATE 
 ,PRIMARY_MOS_CODE 
 ,ALMRS_RACE_CODE 
 ,ALMRS_RECORD_STATUS_CODE 
 ,RESERVE_REPORTING_UNIT_CODE 
 ,RESERVE_MONITORED_COMMAND_CODE 
 ,ALMRS_ROTATION_TOUR_DATE 
 ,SEX 
 ,STATE_ABBREVIATION 
 ,STREET_ADDRESS 
 ,WORK_TELEPHONE_NUMBER 
 ,ZIP_CODE 
 ,CURRENT_TOUR_BEGIN_DATE 
 ,LAST_UPDATED_BY_ODSE 
) 
 
 
SELECT DISTINCT  IM.SSN  
    ,CASE WHEN Convert(date.me,(ISDATE(Convert(date.me,IM.ADDRESS_VALIDATION_DATE)))) = 1 THEN Convert(date.me,IM.ADDRESS_VALIDATION_DATE) 
     ELSE NULL 
     END AS [ADDRESS_VALIDATION_DATE] 
   ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.ARMED_FORCES_ACT_DU_BASE_DATE))) = 1 THEN Convert(date.me,IM.ARMED_FORCES_ACT_DU_BASE_DATE) 
     ELSE NULL 
     END AS [ARMED_FORCES_ACT_DU_BASE_DATE] 
    ,CASE WHEN Convert(date.me,(ISDATE(Convert(date.me,IM.ARMED_FORCES_ORIG_ENTRY_DATE)))) = 1 THEN IM.ARMED_FORCES_ORIG_ENTRY_DATE 
     ELSE NULL 
     END AS [ARMED_FORCES_ORIG_ENTRY_DATE] 
    ,IM.BILLET_MOS 
    ,IM.CITY_ADDRESS 
    ,IM.COMPONENT_CODE 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.DATE_OF_BIRTH))) = 1 THEN IM.DATE_OF_BIRTH 
     ELSE NULL 
     END AS [DATE_OF_BIRTH] 
    ,IM.ETHNIC_GROUP 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.EXPIRATION_OBLIGATED_SERVICE))) = 1 THEN IM.EXPIRATION_OBLIGATED_SERVICE 
     ELSE NULL 
     END AS [EXPIRATION_OBLIGATED_SERVICE] 
    ,CASE WHEN Convert(date.me,ISDATE (Convert(date.me,IM.EXPIRATION_OF_ACTIVE_SERVICE))) = 1 THEN IM.EXPIRATION_OF_ACTIVE_SERVICE 
     ELSE NULL 
     END AS [EXPIRATION_OF_ACTIVE_SERVICE] 
    ,IM.FIRST_NAME 
    ,IM.HOME_OF_RECORD_CITY_CODE 
    ,IM.HOME_OF_RECORD_COUNTY 
    ,IM.HOME_OF_RECORD_STATE_COUNTRY 
    ,IM.HOME_TELEPHONE_NUMBER 
    ,IM.LAST_NAME 
    ,IM.MARITAL_STATUS_CODE 
    ,IM.MIDDLE_INITIAL 
    ,IM.NUMBER_OF_DEPENDENTS 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.PAY_ENTRY_BASE_DATE))) = 1 THEN IM.PAY_ENTRY_BASE_DATE 
     ELSE NULL 
     END AS [PAY_ENTRY_BASE_DATE] 
    ,IM.PLANNED_REENL_EXT_RETIRE_FLAG 
    ,IM.PRESENT_GRADE_CODE 
    ,IM.PRESENT_MONITORED_COMMAND_CODE 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.PRESENT_RANK_DATE))) = 1 THEN IM.PRESENT_RANK_DATE 
     ELSE NULL 
     END AS [PRESENT_RANK_DATE] 
    ,IM.PRESENT_REPORTING_UNIT_CODE 
    ,CASE WHEN Convert(date.me,ISDATE(Convert(date.me,IM.PRESENT_UNIT_JOINED_DATE))) = 1 THEN IM.PRESENT_UNIT_JOINED_DATE 
     ELSE NULL 
     END AS [PRESENT_UNIT_JOINED_DATE] 
    ,IM.PRIMARY_MOS_CODE 
    ,IM.RACE 
    ,IM.RECORD_STATUS_CODE 
    ,IM.RESERVE_REPORTING_UNIT_CODE 
    ,IM.RESERVE_MONITORED_COMMAND_CODE 
    ,IM.ROTATION_TOUR_DATE 
    ,IM.SEX 
    ,IM.STATE_ABBREVIATION 
    ,IM.STREET_ADDRESS 
    ,IM.WORK_TELEPHONE_NUMBER 
    ,IM.ZIP_CODE 
    ,IM.CURRENT_TOUR_BEGIN_DATE 
    ,getdate() 
FROM ##ODSE_IM1 IM 
WHERE ( 
  IM.SSN IN (SELECT SSN FROM #MAR) 
    ) 
    OR 
    (IM.RESERVE_REPORTING_UNIT_CODE = '88850' 
  AND IM.RESERVE_MONITORED_COMMAND_CODE = 'ARP' 
    )   
 
UPDATE ODSE 
SET  ODSE.ALMRS_ADDRESS_VALIDATION_DATE = U.ALMRS_ADDRESS_VALIDATION_DATE 
 ,ODSE.ALMRS_ARMED_FORCES_ACT_DU_BASE_DATE = U.ALMRS_ARMED_FORCES_ACT_DU_BASE_DATE 
 ,ODSE.ALMRS_ARMED_FORCES_ORIG_ENTRY_DATE = U.ALMRS_ARMED_FORCES_ORIG_ENTRY_DATE 
 ,ODSE.BILLET_MOS_CODE = U.BILLET_MOS_CODE 
 ,ODSE.CITY_ADDRESS = U.CITY_ADDRESS 
 ,ODSE.COMPONENT_CODE = U.COMPONENT_CODE 
 ,ODSE.DATE_OF_BIRTH = U.DATE_OF_BIRTH 
 ,ODSE.ETHNIC_GROUP_CODE = U.ETHNIC_GROUP_CODE 
 ,ODSE.EXPIRATION_OBLIGATED_SERVICE = U.EXPIRATION_OBLIGATED_SERVICE 
 ,ODSE.EXPIRATION_OF_ACTIVE_SERVICE = U.EXPIRATION_OF_ACTIVE_SERVICE 
 ,ODSE.FIRST_NAME = U.FIRST_NAME 
 ,ODSE.HOME_OF_RECORD_CITY_CODE = U.HOME_OF_RECORD_CITY_CODE 
 ,ODSE.HOME_OF_RECORD_COUNTY = U.HOME_OF_RECORD_COUNTY 
 ,ODSE.HOME_OF_RECORD_STATE_COUNTRY = U.HOME_OF_RECORD_STATE_COUNTRY 
 ,ODSE.HOME_TELEPHONE_NUMBER = U.HOME_TELEPHONE_NUMBER 
 ,ODSE.LAST_NAME = U.LAST_NAME 
 ,ODSE.MARITAL_STATUS_CODE = U.MARITAL_STATUS_CODE 
 ,ODSE.MIDDLE_INITIAL = U.MIDDLE_INITIAL 
 ,ODSE.NUMBER_OF_DEPENDENTS = U.NUMBER_OF_DEPENDENTS 
 ,ODSE.PAY_ENTRY_BASE_DATE = U.PAY_ENTRY_BASE_DATE 
 ,ODSE.PLANNED_REENL_EXT_RETIRE_FLAG = U.PLANNED_REENL_EXT_RETIRE_FLAG 
 ,ODSE.PRESENT_GRADE_CODE = U.PRESENT_GRADE_CODE 
 ,ODSE.PRESENT_MONITORED_COMMAND_CODE = U.PRESENT_MONITORED_COMMAND_CODE 
 ,ODSE.PRESENT_RANK_DATE = U.PRESENT_RANK_DATE 
 ,ODSE.PRESENT_REPORTING_UNIT_CODE = U.PRESENT_REPORTING_UNIT_CODE 
 ,ODSE.PRESENT_UNIT_JOINED_DATE = U.PRESENT_UNIT_JOINED_DATE 
 ,ODSE.PRIMARY_MOS_CODE = U.PRIMARY_MOS_CODE 
 ,ODSE.ALMRS_RACE_CODE = U.ALMRS_RACE_CODE 
 ,ODSE.ALMRS_RECORD_STATUS_CODE = U.ALMRS_RECORD_STATUS_CODE 
 ,ODSE.RESERVE_REPORTING_UNIT_CODE = U.RESERVE_REPORTING_UNIT_CODE 
 ,ODSE.RESERVE_MONITORED_COMMAND_CODE = U.RESERVE_MONITORED_COMMAND_CODE 
 ,ODSE.ALMRS_ROTATION_TOUR_DATE = U.ALMRS_ROTATION_TOUR_DATE 
 ,ODSE.SEX = U.SEX 
 ,ODSE.STATE_ABBREVIATION = U.STATE_ABBREVIATION 
 ,ODSE.STREET_ADDRESS = U.STREET_ADDRESS 
 ,ODSE.WORK_TELEPHONE_NUMBER = U.WORK_TELEPHONE_NUMBER 
 ,ODSE.ZIP_CODE = U.ZIP_CODE 
 ,ODSE.LAST_UPDATED_BY_ODSE = U.LAST_UPDATED_BY_ODSE 
 ,ODSE.CURRENT_TOUR_BEGIN_DATE = U.CURRENT_TOUR_BEGIN_DATE 
 ,ODSE.PSR_UPDATE_PENDING = 1 
FROM ODSE_BridgeToPSR ODSE  
JOIN UpdateFromODSE U ON ODSE.SSN = U.SSN 
 
IF (SELECT COUNT(*) FROM UpdateFromODSE) > 0 
TRUNCATE TABLE UpdateFromODSE 
 
PRINT 'INDIVIDUAL_MARINE COMPLETE' 
 
DROP TABLE #MAR 
DROP TABLE ##MONITOR_DETAILS 
DROP TABLE ##TEMP_SSN 
Drop Table ##ODSE_IM1]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>0070DB58-AADF-159B-2831-3CD8EEAC6A57</database>
</StoredProcedureSqlServerv2k5>