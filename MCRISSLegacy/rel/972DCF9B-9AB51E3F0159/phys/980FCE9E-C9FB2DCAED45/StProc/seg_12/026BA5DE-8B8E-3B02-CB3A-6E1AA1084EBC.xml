<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateCandidateDependentFromPac]" directorySegmentName="seg_12" id="026BA5DE-8B8E-3B02-CB3A-6E1AA1084EBC">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@NWAId     uniqueiden..er , 
 @OldRecFirstName  varchar(30),  
 @OldRecLastName   varchar(20),  
 @OldRecMiddleName  varchar(20), 
 @OldRecSu.xCode  varchar(5), 
 @OldRecDependentType varchar(2), 
 @OldRecDateOfBirth  date.me, 
 @FirstName    varchar(30), 
 @LastName    varchar(20), 
 @MiddleName    varchar(20), 
 @Su.xCode    varchar(5), 
 @DependentType   varchar(2), 
 @DateOfBirth   date.me, 
 @LastUpdateUserID  varchar(50), 
 @RecordStatus   char(1) 
  
AS 
BEGIN 
  
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @PersonID int; 
 DECLARE @DependentID int; 
 DECLARE @IsVeri.ed char(1); 
 
 SELECT @PersonID = MARINE_CANDIDATE_ID  
 FROM dbo.NWA  
 WHERE rowguid = @NWAId 
 
 IF @RecordStatus = '1' 
  SET @IsVeri.ed = 'V' 
 ELSE IF @RecordStatus = '0' 
  SET @IsVeri.ed = 'P' 
     
 SELECT TOP 1 @DependentID = DEPENDENT_ID 
 FROM dbo.CANDIDATE_DEPENDENT 
 WHERE  
  FIRST_NAME = @OldRecFirstName 
  AND LAST_NAME = @OldRecLastName 
  AND ( MIDDLE_NAME = @OldRecMiddleName OR MIDDLE_NAME IS NULL ) 
  AND ( SUFFIX_CD = @OldRecSu.xCode OR SUFFIX_CD IS NULL) 
  AND ( DATE_OF_BIRTH = @OldRecDateOfBirth OR DATE_OF_BIRTH IS NULL) 
  AND ( DEPENDENT_TYPE = @OldRecDependentType OR DEPENDENT_TYPE IS NULL) 
 
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF @DependentID IS NOT NULL 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE  
   [dbo].[CANDIDATE_DEPENDENT] 
  SET 
   MARINE_CANDIDATE_ID = @PersonID, 
   DEPENDENT_TYPE = @DependentType, 
   VERIFICATION = @IsVeri.ed, 
   FIRST_NAME = @FirstName, 
   LAST_NAME = @LastName, 
   MIDDLE_NAME = @MiddleName, 
   SUFFIX_CD = @Su.xCode, 
   DATE_OF_BIRTH = @DateOfBirth, 
   USER_LOGIN = @LastUpdateUserID, 
   UPDATE_DATE = GetDate() 
  WHERE 
   DEPENDENT_ID = @DependentID  
    
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO [dbo].CANDIDATE_DEPENDENT 
   (MARINE_CANDIDATE_ID, DEPENDENT_TYPE, VERIFICATION, 
    FIRST_NAME, LAST_NAME, MIDDLE_NAME, SUFFIX_CD, DATE_OF_BIRTH, 
    USER_LOGIN, UPDATE_DATE)  
  VALUES 
  (@PersonID, @DependentType, @IsVeri.ed, 
   @FirstName, @LastName, @MiddleName, @Su.xCode, @DateOfBirth, 
   @LastUpdateUserID, GetDate()) 
 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>