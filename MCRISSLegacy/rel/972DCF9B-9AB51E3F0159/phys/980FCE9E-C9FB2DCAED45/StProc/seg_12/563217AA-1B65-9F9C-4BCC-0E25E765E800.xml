<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateCandidateEduca.onFromPac]" directorySegmentName="seg_12" id="563217AA-1B65-9F9C-4BCC-0E25E765E800">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@NWAId       uniqueiden..er, 
 @OldRecSchoolCode    int, 
 @OldRecEduca.onLevel    varchar(2), 
 @SchoolCode      int, 
 @Educa.onLevel     varchar(2), 
 @SchoolEndDate     date.me, 
 @YearGraduated     int, 
 @Educa.onCode     char(1), 
 @Veri.ca.on     varchar(10), 
 @ProjectedTier     int, 
 @Educa.onType     char(10), 
 @UserLogin      varchar(50) 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @PersonID int; 
 DECLARE @Educa.onID uniqueiden..er; 
  
 SELECT @PersonID = MARINE_CANDIDATE_ID  
 FROM dbo.NWA  
 WHERE rowguid = @NWAId 
  
 SELECT TOP 1 @Educa.onID = rowguid 
 FROM dbo.CANDIDATE_EDUCATION 
 WHERE  
  [MARINE_CANDIDATE_ID] = @PersonID  
  AND SCHOOL_CODE = @OldRecSchoolCode 
  AND EDUCATION_LEVEL = @OldRecEduca.onLevel 
  
    
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF @Educa.onID IS NOT NULL 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE  
   [dbo].[CANDIDATE_EDUCATION]  
  SET 
   [SCHOOL_CODE] = @SchoolCode 
   ,[EDUCATION_LEVEL] = @Educa.onLevel 
   ,[SCHOOL_END_DATE] = @SchoolEndDate 
   ,[YEAR_GRADUATED] = @YearGraduated 
   ,[EDUCATION_CODE] = @Educa.onCode 
   ,[VERIFICATION] = @Veri.ca.on 
   ,[PROJECTED_TIER] = @ProjectedTier 
   ,[Educa.onType] = @Educa.onType 
   ,[USER_LOGIN] = @UserLogin 
   ,[UPDATE_DATE] = GetDate() 
  WHERE 
   rowguid = @Educa.onID  
    
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO [dbo].[CANDIDATE_EDUCATION]  
  ([MARINE_CANDIDATE_ID] 
  ,[SCHOOL_CODE] 
  ,[EDUCATION_LEVEL] 
  ,[SCHOOL_END_DATE] 
  ,[YEAR_GRADUATED] 
  ,[EDUCATION_CODE] 
  ,[VERIFICATION] 
  ,[PROJECTED_TIER] 
  ,[Educa.onType] 
  ,[USER_LOGIN] 
  ,[UPDATE_DATE]) 
 VALUES 
  (@PersonID 
  ,@SchoolCode 
  ,@Educa.onLevel 
  ,@SchoolEndDate 
  ,@YearGraduated 
  ,@Educa.onCode 
  ,@Veri.ca.on 
  ,@ProjectedTier 
  ,@Educa.onType 
  ,@UserLogin 
  ,GetDate()) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>