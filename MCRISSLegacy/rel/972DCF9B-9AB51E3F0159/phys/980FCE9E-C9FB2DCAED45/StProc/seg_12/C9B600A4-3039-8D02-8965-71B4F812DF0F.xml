<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_PSR_EXPORT_TO_DMP]" directorySegmentName="seg_12" id="C9B600A4-3039-8D02-8965-71B4F812DF0F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:42:37 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[AS 
 
BEGIN 
 
 DECLARE @CY VARCHAR(4), --Calendar Year 
  @MONTH TINYINT, 
  @START_DATE SMALLDATETIME, 
  @END_DATE SMALLDATETIME, 
  @IS_LEAP_YEAR BIT, 
  @TOTAL_DAYS VARCHAR(2) 
 
 --Current year 
 SET @CY = CONVERT (VARCHAR(4),YEAR(GETDATE())) 
 
 --Current Month 
 SET @MONTH = MONTH(GETDATE()) 
 
 --------------Begin se.ng the Start & End dates for Query-------------------- 
 ------------------------------------------------------------------------------- 
 IF @MONTH = 1   
 BEGIN  SET @START_DATE = '09/01/' + CONVERT (VARCHAR(4),@CY-1) 
   SET @END_DATE = '09/30/' + CONVERT (VARCHAR(4),@CY-1) 
 END 
 
 IF @MONTH = 2 
 BEGIN  SET @START_DATE = '10/01/' + CONVERT (VARCHAR(4),@CY-1) 
   SET @END_DATE = '10/31/' + CONVERT (VARCHAR(4),@CY-1) 
 END 
 
 IF @MONTH = 3 
 BEGIN   SET @START_DATE = '11/01/' + CONVERT (VARCHAR(4),@CY-1) 
   SET @END_DATE = '11/30/' + CONVERT (VARCHAR(4),@CY-1) 
 END 
 
 IF @MONTH = 4 
 BEGIN  SET @START_DATE = '12/01/' + CONVERT (VARCHAR(4),@CY-1) 
   SET @END_DATE = '12/31/' + CONVERT (VARCHAR(4),@CY-1) 
 END 
 
 IF @MONTH = 5 
 BEGIN  SET @START_DATE = '01/01/' + @CY 
   SET @END_DATE = '01/31/' + @CY 
 END 
 
 IF @MONTH = 6 
 BEGIN -----Check if it's a leap year----- 
   IF @CY % 4 = 0   SET @IS_LEAP_YEAR = 1  ELSE SET @IS_LEAP_YEAR = 0  
 -----If it's a leap year, set the total # of days for Feb to 29.  If not set to 28 total days----- 
   IF @IS_LEAP_YEAR = 1  SET @TOTAL_DAYS = '29'  ELSE SET @TOTAL_DAYS = '28'  
   SET @START_DATE = '02/01/' + @CY 
   SET @END_DATE = '02/' + @TOTAL_DAYS + '/' + @CY 
 END 
 
 IF @MONTH = 7 
 BEGIN   SET @START_DATE = '03/01/' + @CY 
   SET @END_DATE = '03/31/' + @CY 
 END 
 
 IF @MONTH = 8 
 BEGIN  SET @START_DATE = '04/01/' + @CY 
   SET @END_DATE = '04/30/' + @CY 
 END 
 
 IF @MONTH = 9 
 BEGIN  SET @START_DATE = '05/01/' + @CY 
   SET @END_DATE = '05/31/' + @CY 
 END 
 
 IF @MONTH = 10 
 BEGIN  SET @START_DATE = '06/01/' + @CY 
   SET @END_DATE = '06/30/' + @CY 
 END 
 
 IF @MONTH = 11 
 BEGIN  SET @START_DATE = '07/01/' + @CY 
   SET @END_DATE = '07/31/' + @CY 
 END 
 
 IF @MONTH = 12 
 BEGIN  SET @START_DATE = '08/01/' + @CY 
   SET @END_DATE = '08/31/' + @CY 
 END 
 ------------------------------------------------------------------------------- 
 --------------End se.ng the Start & End dates for Query---------------------- 
 
-- CREATE TABLE PSR_DMP_EXPORT 
-- ( 
--   [LAST_NAME] VARCHAR(20) 
--  ,[FIRST_NAME] VARCHAR(10) 
--  ,[MIDDLE_INITIAL] VARCHAR(1) 
--  ,[STREET_ADDRESS] VARCHAR(40) 
--  ,[CITY] VARCHAR(20) 
--  ,[STATE] VARCHAR(19) 
--  ,[ZIP_CODE] VARCHAR(9) 
--  ,[RANK] VARCHAR(20) 
--  ,[DISCHARGE] VARCHAR(10) 
--  ,[MOS] VARCHAR(4) 
--  ,[HOME_PHONE] VARCHAR(11) 
--  ,[EMAIL] VARCHAR(50) 
-- ) 
 TRUNCATE TABLE PSR_DMP_EXPORT 
 
 INSERT INTO PSR_DMP_EXPORT 
 SELECT  ISNULL (LAST_NAME, ' ') AS LAST_NAME, 
  ISNULL (FIRST_NAME, ' ') AS FIRST_NAME, 
  ISNULL (MIDDLE_INITIAL, ' ') AS MIDDLE_INITIAL, 
  ISNULL (STREET_ADDRESS, ' ') AS STREET_ADDRESS, 
  ISNULL (CITY_ADDRESS, ' ') AS CITY, 
  ISNULL (STATE_ABBREVIATION, ' ') AS STATE, 
  ISNULL (ZIP_CODE, ' ') AS ZIP_CODE, 
  ISNULL (R.Abbr, ' ') AS RANK, 
  ISNULL (CONVERT (varchar(10), EXPIRATION_OF_ACTIVE_SERVICE,101), ' ') AS DISCHARGE, 
  ISNULL (PRIMARY_MOS_CODE, ' ') AS MOS, 
  ISNULL (CONVERT (varchar(11), HOME_TELEPHONE_NUMBER), ' ') AS HOME_PHONE, 
  ISNULL (CONVERT (varchar(50), ELECTRONIC_MAIL_ADDRESS_TEXT), ' ') AS EMAIL 
 FROM ODSE_BridgeToPSR M 
 LEFT OUTER JOIN [PayGrade] PG ON M.PRESENT_GRADE_CODE = PG.descrip.on 
 LEFT OUTER JOIN [RANK] R ON R.GradeID = PG.PayGradeID 
 WHERE M.EXPIRATION_OF_ACTIVE_SERVICE BETWEEN @START_DATE AND @END_DATE 
  AND (M.PRESENT_GRADE_CODE BETWEEN 'E3' AND 'E7' OR M.PRESENT_GRADE_CODE IN ('O1', 'O1E', 'O2', 'O2E', 'O3', 'O3E', 'O4', 'W1', 'W2')) 
  AND DATEDIFF(YEAR, M.PAY_ENTRY_BASE_DATE, GETDATE()) < 30 
  AND M.RESERVE_REPORTING_UNIT_CODE  IN ('88801', '88802', '88803', '88804', '88805', '00000') 
  AND ZIP_CODE <> 00000 
  AND (M.SEPARATION_CODE NOT LIKE '8%' OR M.STREET_ADDRESS NOT LIKE '%DECEASED%') 
 
END]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>0070DB58-AADF-159B-2831-3CD8EEAC6A57</database>
</StoredProcedureSqlServerv2k5>