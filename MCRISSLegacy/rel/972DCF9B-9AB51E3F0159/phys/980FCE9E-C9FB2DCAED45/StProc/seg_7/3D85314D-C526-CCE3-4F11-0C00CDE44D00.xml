<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateMapsMapPoint]" directorySegmentName="seg_7" id="3D85314D-C526-CCE3-4F11-0C00CDE44D00">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@MapPointId     uniqueidentifier, 
 @MapPointTypeId    uniqueidentifier, 
 @AddressId     uniqueidentifier, 
 @MapPointName    varchar(50)=null, 
 @ContactName    varchar(20)=null, 
 @ContactTitle    varchar(50)=null, 
 @ContactPhone    varchar(25)=null, 
 @ContactEmail    varchar(256)=null, 
 --@LastUpdateDate   date.me, 
 @LastUpdateUserId   uniqueidentifier 
 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT MapPointId FROM MapsMapPoint WHERE MapPointId = @MapPointId) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   MapsMapPoint 
  SET 
   MapPointTypeId=@MapPointTypeId, 
   AddressId=@AddressId, 
   MapPointName=@MapPointName, 
   ContactName=@ContactName, 
   ContactTitle=@ContactTitle, 
   ContactPhone=@ContactPhone, 
   ContactEmail=@ContactEmail, 
   LastUpdateDate=GETDATE(), 
   LastUpdateUserId=@LastUpdateUserId 
  WHERE  
   MapPointId = @MapPointId 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 INSERT INTO MapsMapPoint (MapPointId, 
      MapPointTypeId, 
      AddressId, 
      MapPointName, 
      ContactName, 
      ContactTitle, 
      ContactPhone, 
      ContactEmail, 
      LastUpdateDate, 
      LastUpdateUserId) 
    VALUES (@MapPointId, 
      @MapPointTypeId, 
      @AddressId, 
      @MapPointName, 
      @ContactName, 
      @ContactTitle, 
      @ContactPhone, 
      @ContactEmail, 
      GETDATE(), 
      @LastUpdateUserId) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>