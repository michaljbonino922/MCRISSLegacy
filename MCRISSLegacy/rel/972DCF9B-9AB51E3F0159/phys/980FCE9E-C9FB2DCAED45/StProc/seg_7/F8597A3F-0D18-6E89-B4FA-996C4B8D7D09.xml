<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateRequest]" directorySegmentName="seg_7" id="F8597A3F-0D18-6E89-B4FA-996C4B8D7D09">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@RequestId   uniqueidentifier, 
 @RequestTypeId  smallint, 
 @RequestXml   xml, 
 @UserId    uniqueidentifier, 
 @OrgId    int, 
 @Comments   varchar(4000), 
 @IsCleared   bit, 
 @IsValid   bit 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT RequestId FROM USMC.Request WHERE RequestId = @RequestId) 
BEGIN 
 -- if @intCount > 0, then the Request already exists.  UPDATE. 
  UPDATE USMC.Request 
  SET  
   RequestTypeId = @RequestTypeId, 
   RequestXml = @RequestXml, 
   Comments = @Comments, 
   IsCleared = @IsCleared, 
      IsValid = @IsValid, 
   LastUpdateDate = GETDATE(),    
   LastUpdateUserId = @UserId 
   WHERE RequestId = @RequestId 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Request does not exist.  INSERT. 
 INSERT INTO [RSSOSS].[USMC].[Request] 
           (RequestId, 
            RequestTypeId, 
            RequestXml, 
            OriginatorUserId, 
            OriginatorOrgId, 
            Comments, 
            IsValid, 
            IsCleared, 
            RequestDate, 
            LastUpdateDate, 
            LastUpdateUserId) 
     VALUES 
           (@RequestId, 
            @RequestTypeId, 
            @RequestXml, 
            @UserId, 
            @OrgId, 
            @Comments, 
            1, 
            0, 
            GetDate(), 
            GetDate(), 
            @UserId) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>