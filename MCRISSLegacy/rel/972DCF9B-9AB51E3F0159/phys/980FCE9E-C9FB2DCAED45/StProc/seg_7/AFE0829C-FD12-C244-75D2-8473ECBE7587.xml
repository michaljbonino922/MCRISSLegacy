<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateMonthMissionSummary]" directorySegmentName="seg_7" id="AFE0829C-FD12-C244-75D2-8473ECBE7587">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@TrainingFileID uniqueidentifier, 
 @MissionMonth date.me, 
 @MissionGoal int, 
 @UpdateUserId uniqueidentifier 
AS 
BEGIN 
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
   
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS( 
 SELECT s.ID FROM  
 USMC.Mul.MonthSummary mms JOIN USMC.MonthMissionSummary s 
 ON mms.ID = s.Mul.MonthSummaryID   
 WHERE  
 mms.TrainingFileID=@TrainingFileID  
 AND YEAR(s.Date)= YEAR(@MissionMonth) 
 AND MONTH(s.Date)= MONTH(@MissionMonth) 
   ) 
BEGIN 
  
 UPDATE USMC.MonthMissionSummary 
 SET Mission=@MissionGoal, 
  LastUpdatedDate=GETDATE(), 
        LastUpdatedBy=@UpdateUserId 
 FROM 
 USMC.Mul.MonthSummary mms JOIN USMC.MonthMissionSummary s 
 ON mms.ID = s.Mul.MonthSummaryID   
 WHERE  
 mms.TrainingFileID=@TrainingFileID  
 AND YEAR(s.Date)=YEAR(@MissionMonth) 
 AND MONTH(s.Date)=MONTH(@MissionMonth); 
  
  
END 
ELSE 
BEGIN 
  
 DECLARE @Mul.MonthSummaryId uniqueidentifier; 
  
 SELECT @Mul.MonthSummaryId=ID  
 FROM USMC.Mul.MonthSummary 
 WHERE TrainingFileId=@TrainingFileID; 
  
 INSERT INTO USMC.MonthMissionSummary 
 ( Mul.MonthSummaryID 
   ,Date 
   ,Mission 
   ,LastUpdatedDate 
   ,LastUpdatedBy) 
 VALUES 
 ( 
  @Mul.MonthSummaryId, 
  CONVERT(date.me, CONVERT(varchar(4), YEAR(@MissionMonth))+'-' 
       +CONVERT(varchar(2), MONTH(@MissionMonth)) + '-1' ), 
  @MissionGoal, 
  GETDATE(), 
  @UpdateUserId 
 ) 
   
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>