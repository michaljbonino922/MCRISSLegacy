<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateImportEvent]" directorySegmentName="seg_7" id="D029333D-9C95-4523-E115-6B4DAF84EC48">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@ImportEventId   uniqueidentifier, 
 @ImportTypeId   smallint, 
 @ImportEventStatusTypeId smallint, 
 @ImportFileName         varchar(2048), 
 @PersonId    uniqueidentifier, 
 @SchoolId               uniqueidentifier, 
 @Gradua.onYear         smallint, 
 @DateObtained   Date.me, 
 @DateStarted   date.me = null, 
 @DateCompleted   date.me = null, 
 @Notes     varchar(50) = null, 
 @LastUpdateUserId  uniqueidentifier, 
 @SubSta.onType   char(1) 
 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ImportEventId FROM ImportEvent WHERE ImportEventId = @ImportEventId) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   [USMC].ImportEvent 
  SET  
   ImportTypeId = @ImportTypeId, 
   ImportEventStatusTypeId = @ImportEventStatusTypeId, 
   ImportFileName = @ImportFileName, 
    
   PersonId=@PersonId,   
   SchoolId =@SchoolId, 
   Gradua.onYear =@Gradua.onYear, 
   DateObtained=@DateObtained,    
   DateStarted=@DateStarted, 
   DateCompleted =@DateCompleted, 
   Notes  = @Notes, 
   LastUpdateDate =GETDATE(), 
   LastUpdateUserId=@LastUpdateUserId, 
   SubSta.onType = @SubSta.onType 
  WHERE  
   ImportEventId = @ImportEventId 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 
 INSERT INTO [USMC].ImportEvent (ImportEventId, 
       ImportTypeId, 
       ImportEventStatusTypeId, 
       ImportFileName, 
       PersonId,   
       SchoolId, 
       Gradua.onYear, 
       DateObtained,        
       DateStarted, 
       DateCompleted, 
       Notes, 
       LastUpdateDate, 
       LastUpdateUserId, 
       SubSta.onType) 
     VALUES (@ImportEventId, 
       @ImportTypeId, 
       @ImportEventStatusTypeId, 
       @ImportFileName, 
       @PersonId,   
       @SchoolId, 
       @Gradua.onYear, 
       @DateObtained,        
       @DateStarted, 
       @DateCompleted, 
       @Notes, 
       GETDATE(), 
       @LastUpdateUserId, 
       @SubSta.onType) 
 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>