<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateNo..ca.on]" directorySegmentName="seg_7" id="24D708D1-D40C-7D50-5FDA-7E76D69271AE">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacy</ownerDesignName>
<body><![CDATA[@No..ca.onID   uniqueidentifier, 
 @No..ca.onTypeId  smallint, 
    @Subject    varchar(100), 
    @Message    varchar(1000), 
    @SubjectOrgId   int, 
    @StatusId    smallint, 
 @UpdateUserId   uniqueidentifier 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT No..ca.onID FROM [USMC].[No..ca.on] WHERE No..ca.onID = @No..ca.onID) 
BEGIN 
 -- if @intCount > 0, then the No..ca.on already exists.  UPDATE. 
  UPDATE [USMC].[No..ca.on] 
  SET No..ca.onTypeId = @No..ca.onTypeId, 
   Message = @Message, 
            Subject = @Subject, 
            SubjectOrgId = @SubjectOrgId, 
            No..ca.onStatusId = @StatusId, 
   LastUpdateDate = GETDATE(),    
   LastUpdateUserId = @UpdateUserId 
   WHERE No..ca.onID = @No..ca.onID 
   
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the No..ca.on does not exist.  INSERT. 
 INSERT INTO [RSSOSS].[USMC].[No..ca.on] 
           (No..ca.onID, 
            No..ca.onTypeId, 
            Message, 
            Subject, 
            SubjectOrgId, 
            No..ca.onDate, 
            No..ca.onStatusId, 
            LastUpdateDate, 
            LastUpdateUserId) 
     VALUES 
           (@No..ca.onID, 
           @No..ca.onTypeId, 
           @Message, 
           @Subject, 
           @SubjectOrgId, 
           GetDate(), 
           @StatusId, 
           GetDate(), 
           @UpdateUserId) 
            
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>