<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[spOPS_Parse4k]" directorySegmentName="seg_0" id="5D329678-A606-7EEE-08E8-D3C287640FD2">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:09 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@PARSEBY varchar(10), 
 @FILTERBY varchar(4) = null, 
 @FILTERVALUE varchar(40) = null 
AS                 
BEGIN               
/*===========================================================================                    
This stored procedure was created to support the operations sections. 
No portion of the mcriss-rs system relies on this stored procedure. 
 
i.e.  It is not essential to the functionality of mcriss-rs 
 
This proc will parse the 4k and display the actual columns that the mirs import 
interface listens for. NOTE: Only support parsing out the dep and accession information since we are 
having most of the issues with these data elements 
 
Parameters: 
 
@PARSEBY: the control indicator is used to instruct the proc which data elements to parse out. 
 REG_DEP = parse out regular dep data 
 RES_DEP = parse out reserve dep data 
 SHIP = parse out ship data 
  
 
@FILTERBY: instructs how the stored procedure will filter the data where 
 SSN = The SSN used for displaying error details.  
 FILE = The name of the  file where error details are required.  
 STAT = will filter the error displayed depending on the status provided.  
  i.e.  A = enlisted only, B = same-day shippers, C = shipped 
 ERID = displays data based on a specific error  
 ERTP = displays only error of a specific type 
 ERSV = displays only errors of a specific severity 
 ERMS = displays only errors of a specific error message catagory 
 
@FILTERVALUE is the value associated with the FILTERBY 
 
 i.e. if filtering by SSN than the SSN must be supplied 
 
If the FILTERVALUE is supplied and no FILTERBY than nothing will be filtered and entire 
result-set will be returned.  
 
 
=============================================================================                
MOD Date  Who   Desc 
=============================================================================                
001 Sep 24, 2001 Gregory Gonzalez This stored proc was created to support OPS 
==========================================================================*/                
 
declare @SQLString as NVARCHAR(1024) 
 
SET @SQLString = 'select ssn, file_name, applicant_status, spf_code, substring(fourk,329,8) training_mcc, substring(fourk,2626,4) source_of_entry,' 
 
 
 
if (@PARSEBY = 'REG_DEP') begin 
 SET @SQLString = @SQLString + ' substring(fourk,220,8) contract_begin_date, substring(fourk,228,8) padd,' 
 SET @SQLString = @SQLString + ' substring(fourk,2670,1) toe, substring(fourk,2770,3) paygrade, substring(fourk,324,3) youth_program' 
end 
 
 
if (@PARSEBY = 'RES_DEP') begin 
 SET @SQLString = @SQLString + ' substring(fourk,256,8) contract_begin_date, substring(fourk,264,8) padd,' 
 SET @SQLString = @SQLString + ' substring(fourk,280,1) toe, substring(fourk,284,3) paygrade, substring(fourk,324,3) youth_program' 
end 
 
if (@PARSEBY = 'SHIP') begin 
 SET @SQLString = @SQLString + ' substring(fourk,264,8) ship_date, ' 
 SET @SQLString = @SQLString + ' substring(fourk,280,1) toe, substring(fourk,284,3) paygrade, substring(fourk,324,3) youth_program,' 
 SET @SQLString = @SQLString + ' substring(fourk,272,8) pay_entry_base_date, substring(fourk,287,8) paygrade_ed_date' 
end 
 
 
SET @SQLString = @SQLString + ' from mirs_import_log' 
 
 
if (@FILTERBY = 'SSN') begin 
 if (@FILTERVALUE is null) begin 
  raiserror ('Please Supply the SSN',16,1) 
  return 
 end 
 SET @SQLString = @SQLString + '  where ssn = ' + char(39) + @FILTERVALUE + char(39) 
end 
 
if (@FILTERBY = 'FILE') begin 
 if (@FILTERVALUE is null) begin 
  raiserror ('Please Supply the File Name',16,1) 
  return 
 end 
 
 SET @SQLString = @SQLString + ' where file_name = ' + char(39) + @FILTERVALUE + char(39) 
 
end 
 
 
if (@FILTERBY = 'STAT') begin 
 if (@FILTERVALUE is null) begin 
  raiserror ('Please enter an applicant status code.',16,1) 
  return 
 end 
 
 SET @SQLString = @SQLString + '  where applicant_status = ' + char(39) + @FILTERVALUE + char(39) 
 
end 
 
 
 
EXEC sp_executesql @SQLString 
 
 
end]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>24B9F7BA-5DD4-EAB5-4EB1-35B911743E85</database>
</StoredProcedureSqlServerv2k5>