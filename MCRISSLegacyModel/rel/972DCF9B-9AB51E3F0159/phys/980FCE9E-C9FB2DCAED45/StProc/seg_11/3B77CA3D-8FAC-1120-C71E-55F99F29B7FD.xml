<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateCandidateProfessedExamFromPac]" directorySegmentName="seg_11" id="3B77CA3D-8FAC-1120-C71E-55F99F29B7FD">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@NWAId      uniqueiden..er, 
 @OldRecProfessedExamType char(1), 
 @OldRecExamDate    date.me, 
 @OldRecExamEnteredDate  date.me, 
 @ProfessedExamType   char(1), 
 @ExamDate     date.me, 
 @ExamEnteredDate   date.me, 
 @ExamScore     .oat, 
 @UserLogin     varchar(50), 
 @PiCatMmScore    int = null, 
 @PiCatGtScore    int = null, 
 @PiCatElScore    int = null, 
 @PiCatClScore    int = null 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @PersonID int; 
 DECLARE @ExamID uniqueiden..er; 
  
 SELECT @PersonID = MARINE_CANDIDATE_ID  
 FROM dbo.NWA  
 WHERE rowguid = @NWAId 
  
 SELECT TOP 1 @ExamID = rowguid 
 FROM dbo.CANDIDATE_PROFESSED_EXAM 
 WHERE  
  MARINE_CANDIDATE_ID = @PersonID 
  AND [PROFESSED_EXAM_TYPE] = @OldRecProfessedExamType 
  AND [EXAM_DATE] = @OldRecExamDate 
  AND YEAR([EXAM_ENTERED_DATE]) = YEAR(@OldRecExamEnteredDate) 
  AND MONTH([EXAM_ENTERED_DATE]) = MONTH(@OldRecExamEnteredDate) 
  AND DAY([EXAM_ENTERED_DATE]) = DAY(@OldRecExamEnteredDate) 
  AND DATEPART(hour,[EXAM_ENTERED_DATE]) = DATEPART(hour, @OldRecExamEnteredDate) 
  AND DATEPART(minute,[EXAM_ENTERED_DATE]) = DATEPART(minute, @OldRecExamEnteredDate) 
  AND DATEPART(second,[EXAM_ENTERED_DATE]) = DATEPART(second, @OldRecExamEnteredDate) 
  
  
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF @ExamID IS NOT NULL 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE  
   [dbo].[CANDIDATE_PROFESSED_EXAM]  
  SET 
   [PROFESSED_EXAM_TYPE] = @ProfessedExamType 
   ,[EXAM_DATE] = @ExamDate 
   ,[EXAM_ENTERED_DATE] = @ExamEnteredDate 
   ,[EXAM_SCORE] = @ExamScore 
   ,[USER_LOGIN] = @UserLogin 
   ,[UPDATE_DATE] = GetDate() 
   ,[PiCatMmScore] = CASE WHEN @PiCatMmScore IS NOT NULL THEN @PiCatMmScore ELSE [PiCatMmScore] END 
   ,[PiCatGtScore] = CASE WHEN @PiCatGtScore IS NOT NULL THEN @PiCatGtScore ELSE [PiCatGtScore] END 
   ,[PiCatElScore] = CASE WHEN @PiCatElScore IS NOT NULL THEN @PiCatElScore ELSE [PiCatElScore] END 
   ,[PiCatClScore] = CASE WHEN @PiCatClScore IS NOT NULL THEN @PiCatClScore ELSE [PiCatClScore] END 
 
  WHERE 
   rowguid = @ExamID  
    
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO [dbo].[CANDIDATE_PROFESSED_EXAM]  
   ([MARINE_CANDIDATE_ID] 
   ,[PROFESSED_EXAM_TYPE] 
   ,[EXAM_DATE] 
   ,[EXAM_ENTERED_DATE] 
   ,[EXAM_SCORE] 
   ,[PiCatMmScore] 
   ,[PiCatGtScore] 
   ,[PiCatElScore] 
   ,[PiCatClScore] 
   ,[USER_LOGIN] 
   ,[UPDATE_DATE]) 
  VALUES 
   (@PersonID 
   ,@ProfessedExamType 
   ,@ExamDate 
   ,@ExamEnteredDate 
   ,@ExamScore 
   ,@PiCatMmScore 
   ,@PiCatGtScore 
   ,@PiCatElScore 
   ,@PiCatClScore 
   ,@UserLogin 
   ,GetDate()) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>