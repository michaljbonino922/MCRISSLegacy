<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[SaveRetrain]" directorySegmentName="seg_11" id="077D789D-2618-746E-7909-6BA343FF2854">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:42:37 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[( 
 @RetrainID uniqueiden..er, 
 @LeadID uniqueiden..er, 
 @COMMPhone varchar(15), 
 @UnitAdminChief_RankID int, 
 @UnitAdminChief_LastName varchar(20), 
 @UnitAdminChief_FirstName varchar(20), 
 @UnitAdminChief_MiddleName varchar(20), 
 @UnitTrainingChief_RankID varchar(20), 
 @UnitTrainingChief_LastName varchar(20), 
 @UnitTrainingChief_FirstName varchar(20), 
 @UnitTrainingChief_MiddleName varchar(20), 
 @Remarks text, 
 @Veri.edQSN bit, 
 @Veri.edMOSPreReq bit, 
 @Veri.edScheduleMCTIMS bit, 
 @Veri.edAddedDatabase bit, 
 @Veri.edEmailSent bit, 
 @Veri.edEmailFlagSet bit, 
 @Veri.edEmailNo..ca.onSet bit, 
 @Veri.edEmailAtachmentsAdded bit, 
 @RAP_Remark text, 
 @Veri.edSOINo..ed bit, 
 @Veri.edSOU bit, 
 @Veri.edMCTIMS bit, 
 @RetrainDecisionID int, 
 @DateTimeRetrainRequest date.me 
) 
AS 
BEGIN 
 
 BEGIN TRANSACTION 
  
 IF EXISTS(SELECT RetrainID FROM [dbo].[Retrain] WHERE [RetrainID] = @RetrainID) 
 BEGIN 
  UPDATE 
   [dbo].[Retrain] 
  SET  
   [LeadID] = @LeadID, 
   [COMMPhone] = @COMMPhone, 
   [UnitAdminChief_RankID] = @UnitAdminChief_RankID, 
   [UnitAdminChief_LastName] = @UnitAdminChief_LastName, 
   [UnitAdminChief_FirstName] = @UnitAdminChief_FirstName, 
   [UnitAdminChief_MiddleName] = @UnitAdminChief_MiddleName, 
   [UnitTrainingChief_RankID] = @UnitTrainingChief_RankID, 
   [UnitTrainingChief_LastName] = @UnitTrainingChief_LastName, 
   [UnitTrainingChief_FirstName] = @UnitTrainingChief_FirstName, 
   [UnitTrainingChief_MiddleName] = @UnitTrainingChief_MiddleName, 
   [Remarks] = @Remarks, 
   [Veri.edQSN] = @Veri.edQSN, 
   [Veri.edMOSPreReq] = @Veri.edMOSPreReq, 
   [Veri.edScheduleMCTIMS] = @Veri.edScheduleMCTIMS, 
   [Veri.edAddedDatabase] = @Veri.edAddedDatabase, 
   [Veri.edEmailSent] = @Veri.edEmailSent, 
   [Veri.edEmailFlagSet] = @Veri.edEmailFlagSet, 
   [Veri.edEmailNo..ca.onSet] = @Veri.edEmailNo..ca.onSet, 
   [Veri.edEmailAtachmentsAdded] = @Veri.edEmailAtachmentsAdded, 
   [RAP_Remark] = @RAP_Remark, 
   [Veri.edSOINo..ed] = @Veri.edSOINo..ed, 
   [Veri.edSOU] = @Veri.edSOU, 
   [Veri.edMCTIMS] = @Veri.edMCTIMS, 
   [RetrainDecisionID] = @RetrainDecisionID, 
   [DateTimeRetrainRequest] = @DateTimeRetrainRequest 
  WHERE  
   [RetrainID] = @RetrainID 
 END 
 ELSE 
 BEGIN 
  INSERT INTO [dbo].[Retrain]  
  ( 
   [RetrainID], 
   [LeadID], 
   [COMMPhone], 
   [UnitAdminChief_RankID], 
   [UnitAdminChief_LastName], 
   [UnitAdminChief_FirstName], 
   [UnitAdminChief_MiddleName], 
   [UnitTrainingChief_RankID], 
   [UnitTrainingChief_LastName], 
   [UnitTrainingChief_FirstName], 
   [UnitTrainingChief_MiddleName], 
   [Remarks], 
   [Veri.edQSN], 
   [Veri.edMOSPreReq], 
   [Veri.edScheduleMCTIMS], 
   [Veri.edAddedDatabase], 
   [Veri.edEmailSent], 
   [Veri.edEmailFlagSet], 
   [Veri.edEmailNo..ca.onSet], 
   [Veri.edEmailAtachmentsAdded], 
   [RAP_Remark], 
   [Veri.edSOINo..ed], 
   [Veri.edSOU], 
   [Veri.edMCTIMS], 
   [RetrainDecisionID], 
   [DateTimeRetrainRequest] 
  ) 
  VALUES  
  ( 
   @RetrainID, 
   @LeadID, 
   @COMMPhone, 
   @UnitAdminChief_RankID, 
   @UnitAdminChief_LastName, 
   @UnitAdminChief_FirstName, 
   @UnitAdminChief_MiddleName, 
   @UnitTrainingChief_RankID, 
   @UnitTrainingChief_LastName, 
   @UnitTrainingChief_FirstName, 
   @UnitTrainingChief_MiddleName, 
   @Remarks, 
   @Veri.edQSN, 
   @Veri.edMOSPreReq, 
   @Veri.edScheduleMCTIMS, 
   @Veri.edAddedDatabase, 
   @Veri.edEmailSent, 
   @Veri.edEmailFlagSet, 
   @Veri.edEmailNo..ca.onSet, 
   @Veri.edEmailAtachmentsAdded, 
   @RAP_Remark, 
   @Veri.edSOINo..ed, 
   @Veri.edSOU, 
   @Veri.edMCTIMS, 
   @RetrainDecisionID, 
   @DateTimeRetrainRequest 
  ) 
  
 END 
  
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
  
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
  
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
  
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- If we reach this point, the commands completed successfully. 
 COMMIT TRANSACTION 
END]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>0070DB58-AADF-159B-2831-3CD8EEAC6A57</database>
</StoredProcedureSqlServerv2k5>