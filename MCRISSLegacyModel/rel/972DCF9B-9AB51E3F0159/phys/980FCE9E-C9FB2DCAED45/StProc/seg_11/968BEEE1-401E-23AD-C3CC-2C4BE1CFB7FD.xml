<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetWeeklyMonthlyAc.vity]" directorySegmentName="seg_11" id="968BEEE1-401E-23AD-C3CC-2C4BE1CFB7FD">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:42:37 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Year           INT, 
   @Month          INT, 
   @Week           INT, 
   @OrgId          INT, 
   @RecruiterID    UNIQUEIDENTIFIER 
AS 
   BEGIN 
      SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
      DECLARE @StartDate   DATETIME 
      DECLARE @EndDate   DATETIME 
 
      SET @StartDate = 
             CAST ( 
                (STR (@Year) + '-' + STR (@Month) + '-' + STR (1)) AS DATETIME) 
      SET @EndDate = DATEADD (month, 1, @StartDate) 
 
      IF (@Week = 0) 
         BEGIN 
            SELECT * 
              INTO #WMA0 
              FROM (SELECT ROW_NUMBER () 
                           OVER ( 
                              PARTITION BY RecruiterID, 
                                           CONVERT (DATE, Ac.vityDATE) 
                              ORDER BY Ac.vityDate DESC) 
                              AS RowNum, 
                           [ID], 
                           [ORGANIZATION_ID], 
                           [RecruiterID], 
                           CONVERT (DATE, [Ac.vityDate]) AS Ac.vityDate, 
                           [TCCallsCon], 
                           [TCCallsApp], 
                           [TCCallsInt], 
                           [OTScreenedInt], 
                           [ACContactsApp], 
                           [ACContactsInt], 
                           [MOMadeCon], 
                           [MOMadeApp], 
                           [MOMadeInt], 
                           [EMMadeCon], 
                           [EMMadeApp], 
                           [EMMadeInt], 
                           [NWAs], 
                           [Joins], 
                           [TCCalls], 
                           [OTScreened], 
                           [ACContacts], 
                           [MOMade], 
                           [EMMade] 
                      FROM psr.dbo.WeeklyMonthlyAc.vity 
                     WHERE     Ac.vityDate >= @StartDate 
                           AND Ac.vityDate < @EndDate 
                           AND ORGANIZATION_ID = @OrgId 
                           AND RecruiterID = 
                                  CASE 
                                     WHEN @RecruiterID IS NOT NULL 
                                     THEN 
                                        @RecruiterID 
                                     ELSE 
                                        RecruiterID 
                                  END) T 
             WHERE rowNum = 1 
            ORDER BY RecruiterID, Ac.vityDate 
 
            SELECT ORGANIZATION_ID, 
                   Ac.vityDate, 
                   SUM(ISNULL(TCCalls, 0)) AS TCCalls, 
                   SUM(ISNULL(TCCallsCon, 0)) AS TCCallsCon, 
                   SUM(ISNULL(TCCallsApp, 0)) AS TCCallsApp, 
                   SUM(ISNULL(TCCallsInt, 0)) AS TCCallsInt, 
                   SUM(ISNULL(OTScreened, 0)) AS OTScreened, 
                   SUM(ISNULL(OTScreenedInt, 0)) AS OTScreenedInt, 
                   SUM(ISNULL(ACContactsApp, 0)) AS ACContacts, 
                   SUM(ISNULL(ACContactsApp, 0)) AS ACContactsApp, 
                   SUM(ISNULL(ACContactsInt, 0)) AS ACContactsInt, 
                   SUM(ISNULL(MOMade, 0)) AS MOMade, 
                   SUM(ISNULL(MOMadeCon, 0)) AS MOMadeCon, 
                   SUM(ISNULL(MOMadeApp, 0)) AS MOMadeApp, 
                   SUM(ISNULL(MOMadeInt, 0)) AS MOMadeInt, 
                   SUM(ISNULL(EMMade, 0)) AS EMMade, 
                   SUM(ISNULL(EMMadeCon, 0)) AS EMMadeCon, 
                   SUM(ISNULL(EMMadeApp, 0)) AS EMMadeApp, 
                   SUM(ISNULL(EMMadeInt, 0)) AS EMMadeInt, 
                   SUM(ISNULL(NWAs, 0)) AS NWAs, 
                   SUM(ISNULL(Joins, 0)) AS Joins 
              FROM #WMA0 
            GROUP BY ORGANIZATION_ID, Ac.vityDate 
            ORDER BY Ac.vityDate 
 
            DROP TABLE #WMA0 
         END 
      ELSE                    -- .lter By objec.ve week, not the whole month 
         BEGIN 
            CREATE TABLE #WAO 
            ( 
               [RowNum]            [int] NOT NULL, 
               [ID]                [int] NOT NULL, 
               [StartDate]         [date.me] NOT NULL, 
               [EndDate]           [date.me] NOT NULL, 
               [TCCallsObj]        [int] NULL, 
               [OTScreenedObj]     [int] NULL, 
               [ACContactsObj]     [int] NULL, 
               [MOMadeObj]         [int] NULL, 
               [EMMadeObj]         [int] NULL, 
               [IntvwObj]          [int] NULL, 
               [NWAObj]            [int] NULL, 
               [JoinsObj]          [int] NULL, 
               [UpdatedByUser]     [uniqueiden..er] NULL, 
               [DateUpdated]       [date.me] NULL, 
               [ORGANIZATION_ID]   [int] NULL, 
               [RecruiterID]       [uniqueiden..er] NULL 
            ) 
 
            IF EXISTS                       -- recruiter has his own objec.ve 
                  (SELECT ID 
                     FROM PSR.dbo.WeeklyAchievedObjec.ve 
                    WHERE     StartDate >= @StartDate 
                          AND EndDate < @EndDate 
                          AND ORGANIZATION_ID = @OrgId 
                          AND RecruiterID = @RecruiterID) 
               BEGIN 
                  INSERT INTO #WAO 
                     SELECT * 
                       FROM (SELECT ROW_NUMBER () 
                                       OVER (ORDER BY StartDate ASC) 
                                       AS RowNum, 
                                    * 
                               FROM psr.dbo.WeeklyAchievedObjec.ve 
                              WHERE     StartDate >= @StartDate 
                                    AND EndDate < @EndDate 
                                    AND ORGANIZATION_ID = @OrgId 
                                    AND RecruiterID = @RecruiterID) sorted 
                      WHERE RowNum = @Week 
               END 
            ELSE                      -- recruiter has no objec.ve, use org's 
               BEGIN 
                  INSERT INTO #WAO 
                     SELECT * 
                       FROM (SELECT ROW_NUMBER () 
                                       OVER (ORDER BY StartDate ASC) 
                                       AS RowNum, 
                                    * 
                               FROM psr.dbo.WeeklyAchievedObjec.ve 
                              WHERE     StartDate >= @StartDate 
                                    AND EndDate < @EndDate 
                                    AND ORGANIZATION_ID = @OrgId 
                                    AND RecruiterID = 
                                           '00000000-0000-0000-0000-000000000000') 
                            sorted 
                      WHERE RowNum = @Week 
               END 
 
            SET @StartDate = (SELECT TOP 1 StartDate FROM #WAO) 
            SET @EndDate = (SELECT TOP 1 DATEADD (day, 1, EndDate) FROM #WAO) 
 
            SELECT * 
              INTO #WMA 
              FROM (SELECT ROW_NUMBER () 
                           OVER ( 
                              PARTITION BY RecruiterID, 
                                           CONVERT (DATE, Ac.vityDATE) 
                              ORDER BY Ac.vityDate DESC) 
                              AS RowNum, 
                           [ID], 
                           [ORGANIZATION_ID], 
                           [RecruiterID], 
                           CONVERT (DATE, [Ac.vityDate]) AS Ac.vityDate, 
                           [TCCallsCon], 
                           [TCCallsApp], 
                           [TCCallsInt], 
                           [OTScreenedInt], 
                           [ACContactsApp], 
                           [ACContactsInt], 
                           [MOMadeCon], 
                           [MOMadeApp], 
                           [MOMadeInt], 
                           [EMMadeCon], 
                           [EMMadeApp], 
                           [EMMadeInt], 
                           [NWAs], 
                           [Joins], 
                           [TCCalls], 
                           [OTScreened], 
                           [ACContacts], 
                           [MOMade], 
                           [EMMade] 
                      FROM psr.dbo.WeeklyMonthlyAc.vity 
                     WHERE     Ac.vityDate >= @StartDate 
                           AND Ac.vityDate < @EndDate 
                           AND ORGANIZATION_ID = @OrgId 
                           AND RecruiterID = 
                                  CASE 
                                     WHEN @RecruiterID IS NOT NULL 
                                     THEN 
                                        @RecruiterID 
                                     ELSE 
                                        RecruiterID 
                                  END) T 
             WHERE rowNum = 1 
            ORDER BY RecruiterID, Ac.vityDate 
 
            SELECT ORGANIZATION_ID, 
                   Ac.vityDate, 
                   SUM(ISNULL(TCCalls, 0)) AS TCCalls, 
                   SUM(ISNULL(TCCallsCon, 0)) AS TCCallsCon, 
                   SUM(ISNULL(TCCallsApp, 0)) AS TCCallsApp, 
                   SUM(ISNULL(TCCallsInt, 0)) AS TCCallsInt, 
                   SUM(ISNULL(OTScreened, 0)) AS OTScreened, 
                   SUM(ISNULL(OTScreenedInt, 0)) AS OTScreenedInt, 
                   SUM(ISNULL(ACContactsApp, 0)) AS ACContacts, 
                   SUM(ISNULL(ACContactsApp, 0)) AS ACContactsApp, 
                   SUM(ISNULL(ACContactsInt, 0)) AS ACContactsInt, 
                   SUM(ISNULL(MOMade, 0)) AS MOMade, 
                   SUM(ISNULL(MOMadeCon, 0)) AS MOMadeCon, 
                   SUM(ISNULL(MOMadeApp, 0)) AS MOMadeApp, 
                   SUM(ISNULL(MOMadeInt, 0)) AS MOMadeInt, 
                   SUM(ISNULL(EMMade, 0)) AS EMMade, 
                   SUM(ISNULL(EMMadeCon, 0)) AS EMMadeCon, 
                   SUM(ISNULL(EMMadeApp, 0)) AS EMMadeApp, 
                   SUM(ISNULL(EMMadeInt, 0)) AS EMMadeInt, 
                   SUM(ISNULL(NWAs, 0)) AS NWAs, 
                   SUM(ISNULL(Joins, 0)) AS Joins 
              FROM #WMA 
            GROUP BY ORGANIZATION_ID, Ac.vityDate 
            ORDER BY Ac.vityDate 
 
            DROP TABLE #WAO 
            DROP TABLE #WMA 
         END 
   END]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>0070DB58-AADF-159B-2831-3CD8EEAC6A57</database>
</StoredProcedureSqlServerv2k5>