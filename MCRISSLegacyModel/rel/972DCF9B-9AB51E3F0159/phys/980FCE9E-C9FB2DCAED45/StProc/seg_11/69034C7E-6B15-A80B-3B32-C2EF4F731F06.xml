<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertSchoolPro.leForOrg]" directorySegmentName="seg_11" id="69034C7E-6B15-A80B-3B32-C2EF4F731F06">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@OrgId      int,    
 @SchoolYear int 
    
 
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @SchoolYearStartDate date.me 
 DECLARE @SchoolYearEndDate date.me 
  
 SET @SchoolYearStartDate = Convert(date.me, str(@SchoolYear-1)+'/7/1', 101)  
 SET @SchoolYearEndDate =   Convert(date.me, str(@SchoolYear)+'/6/30', 101) 
 
 SELECT DISTINCT hs.School_Code, hs.Highschool_Name 
 INTO #SchoolList 
 FROM  
  MCRISS.dbo.High_School hs 
  INNER JOIN MCRISS.USMC.vwDecendentRecrui.ngOrgs c 
   ON hs.ORGANIZATION_ID = c.decendent  
 
 WHERE  
  (ORGANIZATION_ID = @orgId OR c.Parent = @orgId) 
  AND (  
    E.ec.ve_Date IS NULL OR 
    ( E.ec.ve_Date IS NOT NULL AND 
      ((  hs.DELETED <> 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate) OR 
       (  hs.DELETED = 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate AND UPDATE_DATE >= @SchoolYearStartDate) 
      ) 
    ) 
   ) 
  AND hs.School_Type <> 'COL' and hs.School_Type <> '4Y' 
 
 ORDER BY Highschool_Name 
 
 
 /************************************************************************* 
 *** Insert new school pro.le for new shcools that have no exis.ng previous pro.le  
 *************************************************************************/ 
 INSERT INTO MCRISS.dbo.[HIGH_SCHOOL_PROFILE] 
  ( 
  [SCHOOL_CODE], 
  [SCHOOL_YEAR], 
  [PRIORITY_CODE], 
  [STATUS_CODE], 
  [ACCESS_CODE], 
  [MALE_SENIORS], 
  [FEMALE_SENIORS], 
  [ASVAB_RESP], 
  [USER_LOGIN], 
  [UPDATE_DATE], 
  [rowguid] 
  ) 
 SELECT  
  hs.[SCHOOL_CODE], 
  @SchoolYear, 
  '1', 
  'WK', 
  'F', 
  0, 
  0, 
  'N', 
  'SA', 
  GETDATE(), 
  NEWID() 
 FROM  
  #SchoolList hs 
  LEFT OUTER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp 
   ON hs.School_Code = hsp.School_Code  
 WHERE  
  hsp.School_year IS NULL 
 
 
 /************************************************************************* 
 *** Insert new school pro.le for shcools with the latest previous pro.le  
 *************************************************************************/ 
 SELECT   
  hs.[SCHOOL_CODE], Max(hsp.School_Year) AS School_Year 
 INTO #SchoolWithPrevPro.le 
 FROM  
  #SchoolList hs 
  INNER JOIN MCRISS.[dbo].[HIGH_SCHOOL_PROFILE] hsp 
   ON hs.School_Code = hsp.School_Code  
 WHERE  
  hsp.School_year <= @SchoolYear 
 group by hs.school_code 
 having Max(hsp.School_Year) <> @SchoolYear 
 
 INSERT INTO MCRISS.[dbo].HIGH_SCHOOL_PROFILE 
 ( 
  [SCHOOL_CODE], 
  [SCHOOL_YEAR], 
  [PRIORITY_CODE], 
  [STATUS_CODE], 
  [ACCESS_CODE], 
  [RECRUITER_ID], 
  [MALE_SENIORS], 
  [FEMALE_SENIORS], 
  [ASVAB_RESP], 
  [USER_LOGIN], 
  [UPDATE_DATE], 
  [rowguid] 
 ) 
 SELECT 
  hsp.[SCHOOL_CODE] 
  ,@SchoolYear 
        ,ISNULL([PRIORITY_CODE], '1') 
        ,ISNULL([STATUS_CODE], 'WK') 
        ,ISNULL([ACCESS_CODE], 'F') 
        ,[RECRUITER_ID] 
  ,0 
     ,0 
  ,'N' 
  ,'SA'  
  ,GetDate() 
  ,NewID()  
 FROM  
  MCRISS.[dbo].HIGH_SCHOOL_PROFILE hsp 
  INNER JOIN #SchoolWithPrevPro.le t 
   ON hsp.School_Code = t.School_Code AND hsp.School_Year = t.School_Year 
     
    DROP TABLE #SchoolList 
 DROP TABLE #SchoolWithPrevPro.le 
   
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
  
 -- STEP: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
  
END]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>