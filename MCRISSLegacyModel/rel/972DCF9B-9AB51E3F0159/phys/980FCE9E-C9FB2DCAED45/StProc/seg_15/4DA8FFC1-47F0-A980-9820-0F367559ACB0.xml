<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectEduca.on]" directorySegmentName="seg_15" id="4DA8FFC1-47F0-A980-9820-0F367559ACB0">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ProspectEduca.onId uniqueiden..er 
    ,@ProspectId uniqueiden..er 
    ,@CompletedDate date.me = NULL 
    ,@Educa.onLevel char(2) 
    ,@Educa.onCode char(1) 
    ,@Educa.onCompleted bit = NULL 
    ,@LastYearAtended int 
    ,@YearGraduated int = NULL 
    ,@SchoolCode int 
    ,@EduStatusCode int 
    ,@EduCreden.alCode int 
    ,@EduProjectedTierCode int = NULL 
    ,@LastUpdateUserId uniqueiden..er 
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
 
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF EXISTS(SELECT ProspectEduca.onId FROM USMC.ProspectEduca.on WHERE ProspectEduca.onId = @ProspectEduca.onId) 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE USMC.ProspectEduca.on 
  SET  
   CompletedDate = @CompletedDate 
   ,Educa.onLevel = @Educa.onLevel 
   ,Educa.onCode = @Educa.onCode 
   ,Educa.onCompleted = @Educa.onCompleted 
   ,LastYearAtended = @LastYearAtended 
   ,YearGraduated = @YearGraduated 
   ,SchoolCode = @SchoolCode 
   ,EduStatusCode = @EduStatusCode 
   ,EduCreden.alCode = @EduCreden.alCode 
   ,EduProjectedTierCode = @EduProjectedTierCode 
   ,LastUpdateDate = GETDATE() 
   ,LastUpdateBy = @LastUpdateUserId 
  WHERE   
   ProspectEduca.onId = @ProspectEduca.onId  
 END 
 ELSE 
 BEGIN 
  INSERT INTO USMC.ProspectEduca.on 
           (ProspectEduca.onId 
           ,ProspectId 
           ,CompletedDate 
           ,Educa.onLevel 
           ,Educa.onCode 
           ,Educa.onCompleted 
           ,LastYearAtended 
           ,YearGraduated 
           ,SchoolCode 
           ,EduStatusCode 
           ,EduCreden.alCode 
           ,EduProjectedTierCode 
           ,LastUpdateDate 
           ,LastUpdateBy) 
  VALUES 
           (@ProspectEduca.onId 
           ,@ProspectId 
           ,@CompletedDate 
           ,@Educa.onLevel 
           ,@Educa.onCode 
           ,@Educa.onCompleted 
           ,@LastYearAtended 
           ,@YearGraduated 
           ,@SchoolCode 
           ,@EduStatusCode 
           ,@EduCreden.alCode 
           ,@EduProjectedTierCode 
           ,GETDATE() 
           ,@LastUpdateUserId) 
 END 
  
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 2 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>