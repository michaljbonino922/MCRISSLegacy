<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetAc.vityEnteredRSS]" directorySegmentName="seg_15" id="12218174-45DC-183D-6CC8-7499A874E78A">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Organiza.onID  int,  
 @MonthBeginDate  date.me, 
 @NewRSS   bit, 
 @Ac.vi.esEntered  int OUTPUT 
AS 
 
DECLARE @blnDataExists   bit 
DECLARE @MonthCounter   int 
DECLARE @FromDate  date.me 
DECLARE @ToDate   date.me 
 
--- de.ne the month counter 
SET @MonthCounter = 3 
 
/* 
loop through the previous three months and make sure there is RSS ac.vity entered 
for each month 
*/ 
WHILE @MonthCounter >= 1 
BEGIN 
 --- get the begin and end dates of each month 
 SET @FromDate = DATEADD(MONTH, -1 * @MonthCounter, @MonthBeginDate)  
 SET @ToDate = DATEADD(DAY, -1, DATEADD(MONTH, 1, @FromDate)) 
 
 IF @NewRSS = 0 
 /* 
 if the RSS has been open at least 3 months (@NewRSS = 0) make sure rss ac.vity  
 has been entered for each of the previous 3 months 
 */ 
 BEGIN 
  --- check for RSS ACTIVITY 
  IF NOT EXISTS (SELECT RA.ORGANIZATION_ID FROM RSS_ACTIVITY RA  
    WHERE RA.ACTIVITY_DATE BETWEEN @FromDate AND @ToDate AND 
    RA.ORGANIZATION_ID = @Organiza.onID) 
   BEGIN      
    /* 
    if there is no RSS ACTIVITY for the month set the DataExists .ag  
    to false and exit the loop 
    */ 
    SET @blnDataExists = 0 
    BREAK 
   END 
  ELSE 
   BEGIN 
    /* 
    if there is RSS ACTIVITY for all 3 months set the DataExists .ag  
    to true.  only set this .ag a.er checking all three months  
    (i.e., when @MonthCounter = 1) 
    */ 
    IF @MonthCounter = 1 SET @blnDataExists = 1 
   END  
 END 
 ELSE 
 /* 
 if the RSS has been open less than 3 months (@NewRSS = 1) make sure RSS ac.vity  
 has been entered for the other RSSs under the parent RS 
 */ 
 BEGIN 
  --- check for RSS ACTIVITY 
  IF NOT EXISTS (SELECT RA.ORGANIZATION_ID FROM RSS_ACTIVITY RA INNER JOIN ORGANIZATION_MAP OM 
    ON RA.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID 
    WHERE RA.ACTIVITY_DATE BETWEEN @FromDate AND @ToDate AND 
    OM.PARENT_ORGANIZATION_ID = (SELECT OM2.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP OM2 
    WHERE OM2.CHILD_ORGANIZATION_ID = @Organiza.onID)) 
   BEGIN      
    /* 
    if there is no RSS ACTIVITY for the month set the DataExists .ag  
    to false and exit the loop 
    */ 
    SET @blnDataExists = 0 
    BREAK 
   END 
  ELSE 
   BEGIN 
    /* 
    if there is RSS ACTIVITY for all 3 months set the DataExists .ag  
    to true.  only set this .ag a.er checking all three months  
    (i.e., when @MonthCounter = 1) 
    */ 
    IF @MonthCounter = 1 SET @blnDataExists = 1 
   END  
 END 
  
 --- decrement the month counter and con.nue itera.ng through the loop 
 SET @MonthCounter = @MonthCounter - 1 
END  
 
SET @Ac.vi.esEntered = @blnDataExists  
 
 
 
/* OLD WAY OF CHECKING IF ACTIVITIES WERE ENTERED 
 
declare @total_num int 
declare @OrgTotalNum int 
 
select  @total_num = count(dis.nct Ac.vity_Date)  
from  rss_ac.vity  
where  ac.vity_Date BETWEEN DATEADD(m, -3, @MonthBeginDate) AND DATEADD(d, -1, @MonthBeginDate) 
 and datepart(dw, Ac.vity_Date) <> 1 
 
select  @OrgTotalNum = count(dis.nct Ac.vity_Date)  
from rss_ac.vity  
where  ac.vity_Date BETWEEN DATEADD(m, -3,@MonthBeginDate) AND DATEADD(d, -1, @MonthBeginDate) 
 and datepart(dw, Ac.vity_Date) <> 1 
 and Organiza.on_Id = @Organiza.onId 
 
Select @Ac.vi.esEntered =  case when @OrgTotalNum >= @total_num then 1 
   else 0 
   End 
 
*/]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>