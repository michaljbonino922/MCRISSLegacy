<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1044" directorySegmentName="seg_15" id="84BD9898-8696-CCC8-06AE-311B217A224F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[(   
 @FirstName varchar(20) = null, 
 @LastName varchar(20) = null, 
 @SSN varchar(9) = null, 
 @ProspectDispos.onId int = null, 
 @PACCreatedFromDate DateTime = null, 
 @PACCreatedToDate DateTime = null,  
 @Ac.vityFromDate DateTime = null, 
 @Ac.vityToDate DateTime = null,  
 @Gradua.onYear int = null, 
 @SchoolIDs xml = null, 
 @ZipCodes xml =null, 
 @SubSta.onType varchar(1)=null, 
 @StartDate DateTime = null, 
 @EndDate DateTime = null 
) 
 
AS 
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 
IF @StartDate IS NOT null 
BEGIN 
SET @StartDate = CAST(CONVERT(varchar(4),Year(@StartDate))+'-'+ CONVERT(varchar(2),Month(@StartDate)) + 
  '-' + CONVERT(varchar(2),Day(@StartDate)) as Date.me); 
END 
 
IF @EndDate IS NOT null 
BEGIN   
SET @EndDate = CAST(CONVERT(varchar(4),Year(@EndDate))+'-'+ CONVERT(varchar(2),Month(@EndDate)) + 
  '-' + CONVERT(varchar(2),Day(@EndDate)) as Date.me); 
END 
 
IF @SchoolIDs IS NOT null 
BEGIN 
 DECLARE @SchoolsTable TABLE (ID uniqueiden..er)   
 INSERT INTO @SchoolsTable (ID)  
 SELECT ParamValues.ID.value('.','VARCHAR(36)') 
 FROM @SchoolIds.nodes('/Schools/id') as ParamValues(ID)  
END 
 
IF @ZipCodes IS NOT null 
BEGIN 
 DECLARE @ZipCodesTable TABLE (ID varchar(5)) 
 INSERT INTO @ZipCodesTable (ID) 
 SELECT ParamValues.ID.value('.','VARCHAR(5)') 
 FROM @ZipCodes.nodes('ZipCodes/id') as ParamValues(ID)  
END 
 
SELECT  DISTINCT  
  PR.ProspectId, 
  PR.PersonId, 
  PR.Recrui.ngOrganiza.onId, 
  PR.Recrui.ngPersonId, 
  ps.SchoolId,   
  PR.Gradua.onYear, 
  PR.ProspectDisposi.onId, 
  PR.PACCreateDate, 
  PR.Ac.vity, 
  PR.Ac.vityDate, 
  PR.CareerDecision, 
  PR.Ini.alContactType, 
  PR.ASVABDate, 
  PR.Source, 
  PR.NoChildLe.BehindOptIn, 
  PR.Suppression, 
  PR.ContactTimeIndicator, 
  PR.Note, 
  PR.LastUpdateDate, 
  PR.LastUpdateUserId, 
  PR.CreatedDate, 
  PR.SubSta.onType, 
  RP.RANK_CODE, 
  PERSON.LAST_NAME as RecruiterLastName, 
  PERSON.FIRST_NAME as RecruiterFirstName, 
  PERSON.LEGAL_MIDDLE_NAME as RecruiterMiddleName, 
  PR.NwaId, 
  PR.AcpApplicantId, 
  PR.DigitalCommunica.on 
FROM  
 [usmc].[ImportEvent] IE  
 INNER JOIN [usmc].[ImportPerson] IP on (IE.importeven.d = IP.importeven.d) 
 INNER JOIN [usmc].[Person] P on (IP.personid = P.personid) 
 INNER JOIN [usmc].[Prospect] pr on (p.PersonID = pr.PersonID)  
 INNER JOIN [USMC].[O.cerProspectPac] opp on (opp.ProspectId = pr.ProspectId) 
 LEFT OUTER JOIN [usmc].[ProspectSchool] ps on (pr.ProspectId = ps.ProspectId)  
 INNER JOIN [usmc].[ProspectDisposi.on] pdt on (pr.ProspectDisposi.onId = pdt.ProspectDisposi.onId) 
 LEFT OUTER JOIN usmc.vwMcrissRecrui.ngPerson RP on (Pr.Recrui.ngPersonId = RP.rowguid)--RECRUITING_PERSON_ID  
 LEFT OUTER JOIN usmc.vwMcrissPerson PERSON on (RP.RECRUITING_PERSON_ID=PERSON.PERSON_ID) 
 LEFT OUTER JOIN usmc.vwMcrissHighSchool HS on (ps.SchoolId=HS.rowguid)  
 LEFT OUTER JOIN [RSSOSS].[USMC].[MapsSectorRecruiter] MSR on (pr.Recrui.ngPersonId=MSR.Recrui.ngPersonId) 
 LEFT OUTER JOIN [RSSOSS].[USMC].[MapsSector] MS on(MSR.SectorId=MS.SectorID) 
 LEFT OUTER JOIN usmc.vwMcrissRecrui.ngOrganiza.on RO on (Pr.Recrui.ngOrganiza.onId = RO.rowguid)--ORGANIZATION_ID  
 LEFT OUTER JOIN [USMC].[PersonAddress] PA_PRIMARY ON ((PA_PRIMARY.PersonId = P.PersonId) AND (PA_PRIMARY.PersonAddressTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonAddress] PA_ALTERNATE ON ((PA_ALTERNATE.PersonId = P.PersonId) AND (PA_ALTERNATE.PersonAddressTypeId = 2)) 
 LEFT OUTER JOIN [USMC].[PersonPhone] PP_PRIMARY ON ((PP_PRIMARY.PersonId = P.PersonId) AND (PP_PRIMARY.PersonPhoneTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonPhone] PP_ALTERNATE ON ((PP_ALTERNATE.PersonId = P.PersonId) AND (PP_ALTERNATE.PersonPhoneTypeId = 2)) 
 LEFT OUTER JOIN [USMC].[PersonEmail] PE_PRIMARY ON ((PE_PRIMARY.PersonId = P.PersonId) AND (PE_PRIMARY.PersonEmailTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonEmail] PE_ALTERNATE ON ((PE_ALTERNATE.PersonId = P.PersonId) AND (PE_ALTERNATE.PersonEmailTypeId = 2)) 
 
WHERE  
 IE.ImportEventStatusTypeId =3  
 -- Prospect Search 
 AND 
 (@FirstName is null OR P.FirstName like @FirstName)  
 AND 
 (@LastName is null OR P.LastName like @LastName)  
 AND 
 (@SSN is null OR P.SocialSecurityNumber like @SSN)  
 AND 
 (@SubSta.onType is null OR pr.SubSta.onType = @SubSta.onType) 
 -- Prospect Board  
 AND 
 (@ProspectDispos.onId is null OR pdt.ProspectDisposi.onId = @ProspectDispos.onId)  
 AND 
 (@PACCreatedFromDate is null OR pr.PACCreateDate >= @PACCreatedFromDate) 
 AND 
 (@PACCreatedToDate is null OR pr.PACCreateDate <= @PACCreatedToDate) 
 --HS List Folders 
 AND 
 (@SchoolIDs is null OR ps.SchoolId IN  
  ( 
   SELECT * FROM @SchoolsTable  
  ) 
 )   
 AND 
 (@ZipCodes is null OR PA_PRIMARY.ZipCode IN  
  ( 
   SELECT * FROM @ZipCodesTable 
  )  
 )  
 AND 
 (@Gradua.onYear is null OR  pr.Gradua.onYear=@Gradua.onYear) 
 --Recruiter Ac.vity  
 AND 
 (@Ac.vityFromDate is null OR pr.Ac.vityDate >= @Ac.vityFromDate) 
 AND 
 (@Ac.vityToDate is null OR pr.Ac.vityDate <= @Ac.vityToDate)  
 -- Future Ac.on Date 
 AND  
 (  
  (@StartDate IS NULL OR @EndDate IS NULL ) OR 
  ( 
   CAST(Convert(varchar(4),Year(FutureAc.onDate))+'-'+ Convert(varchar(2),Month(FutureAc.onDate)) + 
   '-' + Convert(varchar(2),Day(FutureAc.onDate)) as Date.me)  
         BETWEEN @StartDate AND @EndDate 
     ) 
 ) 
UNION  
SELECT  DISTINCT  
  PR.ProspectId, 
  PR.PersonId, 
  PR.Recrui.ngOrganiza.onId, 
  PR.Recrui.ngPersonId, 
  ps.SchoolId,   
  PR.Gradua.onYear, 
  PR.ProspectDisposi.onId, 
  PR.PACCreateDate, 
  PR.Ac.vity, 
  PR.Ac.vityDate, 
  PR.CareerDecision, 
  PR.Ini.alContactType, 
  PR.ASVABDate, 
  PR.Source, 
  PR.NoChildLe.BehindOptIn, 
  PR.Suppression, 
  PR.ContactTimeIndicator, 
  PR.Note, 
  PR.LastUpdateDate, 
  PR.LastUpdateUserId, 
  PR.CreatedDate, 
  PR.SubSta.onType, 
  RP.RANK_CODE, 
  PERSON.LAST_NAME as RecruiterLastName, 
  PERSON.FIRST_NAME as RecruiterFirstName, 
  PERSON.LEGAL_MIDDLE_NAME as RecruiterMiddleName, 
  PR.NwaId, 
  PR.AcpApplicantId, 
  PR.DigitalCommunica.on 
FROM  
 [usmc].[ImportEvent] IE  
 INNER JOIN [usmc].[ImportPerson] IP on (IE.importeven.d = IP.importeven.d) 
 INNER JOIN [usmc].[Person] P on (IP.personid = P.personid) 
 INNER JOIN [usmc].[Prospect] pr on (p.PersonID = pr.PersonID) 
 INNER JOIN [USMC].[O.cerProspectPac] opp on (opp.ProspectId = pr.ProspectId)  
 LEFT OUTER JOIN [usmc].[ProspectSchool] ps on (pr.ProspectId = ps.ProspectId)  
 INNER JOIN [usmc].[ProspectDisposi.on] pdt on (pr.ProspectDisposi.onId = pdt.ProspectDisposi.onId) 
 LEFT OUTER JOIN usmc.vwMcrissRecrui.ngPerson RP on (Pr.Recrui.ngPersonId = RP.rowguid)--RECRUITING_PERSON_ID  
 LEFT OUTER JOIN usmc.vwMcrissPerson PERSON on (RP.RECRUITING_PERSON_ID=PERSON.PERSON_ID) 
 LEFT OUTER JOIN usmc.vwMcrissHighSchool HS on (ps.SchoolId=HS.rowguid)  
 LEFT OUTER JOIN [RSSOSS].[USMC].[MapsSectorRecruiter] MSR on (pr.Recrui.ngPersonId=MSR.Recrui.ngPersonId) 
 LEFT OUTER JOIN [RSSOSS].[USMC].[MapsSector] MS on(MSR.SectorId=MS.SectorID) 
 LEFT OUTER JOIN usmc.vwMcrissRecrui.ngOrganiza.on RO on (Pr.Recrui.ngOrganiza.onId = RO.rowguid)--ORGANIZATION_ID  
 LEFT OUTER JOIN [USMC].[PersonAddress] PA_PRIMARY ON ((PA_PRIMARY.PersonId = P.PersonId) AND (PA_PRIMARY.PersonAddressTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonAddress] PA_ALTERNATE ON ((PA_ALTERNATE.PersonId = P.PersonId) AND (PA_ALTERNATE.PersonAddressTypeId = 2)) 
 LEFT OUTER JOIN [USMC].[PersonPhone] PP_PRIMARY ON ((PP_PRIMARY.PersonId = P.PersonId) AND (PP_PRIMARY.PersonPhoneTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonPhone] PP_ALTERNATE ON ((PP_ALTERNATE.PersonId = P.PersonId) AND (PP_ALTERNATE.PersonPhoneTypeId = 2)) 
 LEFT OUTER JOIN [USMC].[PersonEmail] PE_PRIMARY ON ((PE_PRIMARY.PersonId = P.PersonId) AND (PE_PRIMARY.PersonEmailTypeId = 1)) 
 LEFT OUTER JOIN [USMC].[PersonEmail] PE_ALTERNATE ON ((PE_ALTERNATE.PersonId = P.PersonId) AND (PE_ALTERNATE.PersonEmailTypeId = 2)) 
 
WHERE  
 IE.ImportEventStatusTypeId =3  
 -- Prospect Search 
 AND 
 (@FirstName is null OR P.FirstName like @FirstName)  
 AND 
 (@LastName is null OR P.LastName like @LastName)  
 AND 
 (@SSN is null OR P.SocialSecurityNumber like @SSN)  
 AND 
 (@SubSta.onType is null OR pr.SubSta.onType = @SubSta.onType) 
 -- Prospect Board  
 AND 
 (@ProspectDispos.onId is null OR pdt.ProspectDisposi.onId = @ProspectDispos.onId)  
 AND 
 (@PACCreatedFromDate is null OR pr.PACCreateDate >= @PACCreatedFromDate) 
 AND 
 (@PACCreatedToDate is null OR pr.PACCreateDate <= @PACCreatedToDate) 
 --HS List Folders 
 AND 
 (@SchoolIDs is null OR ps.SchoolId IN  
  ( 
   SELECT * FROM @SchoolsTable  
  ) 
 )   
 AND 
 (@ZipCodes is null OR LEFT(HS.ZIP_CODE, 5) IN  
  ( 
   SELECT * FROM @ZipCodesTable 
  )  
 )  
 AND 
 (@Gradua.onYear is null OR  pr.Gradua.onYear=@Gradua.onYear) 
 --Recruiter Ac.vity  
 AND 
 (@Ac.vityFromDate is null OR pr.Ac.vityDate >= @Ac.vityFromDate) 
 AND 
 (@Ac.vityToDate is null OR pr.Ac.vityDate <= @Ac.vityToDate)  
 -- Future Ac.on Date 
 AND  
 (  
  (@StartDate IS NULL OR @EndDate IS NULL ) OR 
  ( 
   CAST(Convert(varchar(4),Year(FutureAc.onDate))+'-'+ Convert(varchar(2),Month(FutureAc.onDate)) + 
   '-' + Convert(varchar(2),Day(FutureAc.onDate)) as Date.me)  
         BETWEEN @StartDate AND @EndDate 
     ) 
 )]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>