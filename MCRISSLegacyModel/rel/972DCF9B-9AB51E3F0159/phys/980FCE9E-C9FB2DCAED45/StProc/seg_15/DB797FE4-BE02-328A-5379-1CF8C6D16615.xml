<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_DeletePerson]" directorySegmentName="seg_15" id="DB797FE4-BE02-328A-5379-1CF8C6D16615">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@PersonID int, 
 @UserLogin varchar(15) 
AS 
 
DECLARE @DBID   int 
DECLARE @DBNAME  sysname 
 
DECLARE @ErrMsg  varchar(100) 
DECLARE @Transac.on varchar(100) 
 
DECLARE @SSN   char(9) 
DECLARE @RecordCount  int   
 
SET NOCOUNT ON 
 
SELECT  
 @DBID  = DB_ID(),  
 @DBNAME = DB_NAME() 
 
 
IF EXISTS (SELECT 1 FROM PERSON WHERE PERSON_ID = @PersonID) 
BEGIN 
 --- GET THE APPLICANT'S SSN 
 SELECT  
  @SSN = P.SOCIAL_SECURITY_NUMBER  
 FROM  
  PERSON P  
 WHERE 
  P.PERSON_ID = @PersonID 
 
 --- CHECK ALL TABLES THAT HAVE DEPENDENCIES ON PERSON ID 
 IF EXISTS (SELECT 1 FROM ALIEN_REGISTRATION WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Alien Registra.on' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   ALIEN_REGISTRATION 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM ALIEN_REGISTRATION WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM ALIEN_REGISTRATION WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_ADDRESS WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Address' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_ADDRESS 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_ADDRESS WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_ADDRESS WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_ASVAB WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'ASVAB' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_ASVAB 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_ASVAB WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_ASVAB WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_COMMENT WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Comment' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_COMMENT 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_COMMENT WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_COMMENT WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_DEPENDENT WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Dependent' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_DEPENDENT 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_DEPENDENT WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_DEPENDENT WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_EDUCATION WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Educa.on' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_EDUCATION 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_EDUCATION WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_EDUCATION WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_LANGUAGE WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Language' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_LANGUAGE 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_LANGUAGE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_LANGUAGE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_MEDICAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Medical Exam' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_MEDICAL_EXAM 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_MEDICAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_MEDICAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_PRIOR_SERVICE WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Prior Service' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_PRIOR_SERVICE 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_PRIOR_SERVICE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_PRIOR_SERVICE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_PROFESSED_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Professed Exam' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_PROFESSED_EXAM 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_PROFESSED_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_PROFESSED_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_SPECIAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Special Exam' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_SPECIAL_EXAM 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_SPECIAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_SPECIAL_EXAM WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM CANDIDATE_TELEPHONE WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Telephone' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   CANDIDATE_TELEPHONE 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM CANDIDATE_TELEPHONE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM CANDIDATE_TELEPHONE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM MIRS_EXPORT WHERE PERSON_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'MIRS Export' 
 
  --- THE MIRS_EXPORT IS NOT REPLICATED TO THE TLOG DATABASE SO WE DON'T NEED TO 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   MIRS_EXPORT 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   PERSON_ID   = @PersonID 
 
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM MIRS_EXPORT WHERE PERSON_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM MIRS_EXPORT WHERE PERSON_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  --- IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  IF @@ERROR != 0 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM MARINE_CANDIDATE WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Marine Candidate' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   MARINE_CANDIDATE 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_CANDIDATE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM MARINE_CANDIDATE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM MARINE_CANDIDATE WHERE MARINE_CANDIDATE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM MARINE WHERE MARINE_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Marine' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   MARINE 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   MARINE_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM MARINE WHERE MARINE_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM MARINE WHERE MARINE_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
 
 IF EXISTS (SELECT 1 FROM PERSON WHERE PERSON_ID = @PersonID) 
 BEGIN 
  SET @Transac.on = 'Person' 
 
  --- UPDATE THE RECORDS WITH THE USER LOGIN AND CURRENT DATE/TIME BEFORE dele.ng 
  UPDATE 
   PERSON 
  SET  
   USER_LOGIN   = @UserLogin, 
   UPDATE_DATE  = GETDATE() 
  WHERE 
   PERSON_ID  = @PersonID 
   
  --- GET THE RECORD COUNT 
  SELECT @RecordCount = COUNT(*) FROM PERSON WHERE PERSON_ID = @PersonID 
 
  --- DELETE THE RECORD(S) 
  DELETE FROM PERSON WHERE PERSON_ID = @PersonID 
 
  --- CHECK FOR ERRORS AND VERIFY THE NUMBER OF RECORDS DELETED 
  IF @@ERROR != 0 OR @@ROWCOUNT != @RecordCount 
  BEGIN 
   SET @ErrMsg = 'An error occurred dele.ng ' + @Transac.on + ' data for SSN ' + @SSN + '.'  
   RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
   RETURN 
  END   
 END 
END 
 
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>