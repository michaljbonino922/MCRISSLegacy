<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateOssProspectEduca.onFromMcriss]" directorySegmentName="seg_15" id="557B38FC-F2B0-4AC0-5C61-7C70624862BD">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@MarineCandidateID     int, 
 @OldRecSchoolCode     int, 
 @OldProspectSchoolTypeId   int, 
 @OldRecEduca.onLevel    varchar(2), 
 @OldRecEduca.onCode    char(1), 
 @SchoolCode       int, 
 @ProspectSchoolTypeId    int, 
 @Major        varchar(2), 
 @Gradua.onDate      date.me, 
 @IsFullTimeStudent     bit, 
 @CurrentGpa       .oat, 
 @Cumula.veGpa      .oat, 
 @Educa.onLevel      varchar(2), 
 @Educa.onCode      varchar(1), 
 @ProjectedCompletedDate    date.me, 
 @IsLawSchool      bit, 
 @CreditHours      int, 
 @Veri.ca.on      varchar(10), 
 @UserLogin       varchar(50) 
     
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @ProspectID uniqueiden..er 
 
 SELECT Top 1 
  @ProspectID = ProspectId  
 FROM USMC.Prospect 
 WHERE 
  NwaId IN (SELECT Top 1 rowguid FROM MCRISS.dbo.NWA  
      WHERE  
      MARINE_CANDIDATE_ID = @MarineCandidateID ORDER BY NWA_ID DESC) 
  
 IF @ProspectID IS NOT NULL 
 BEGIN 
  DECLARE @ID uniqueiden..er 
  DECLARE @OldRecSchoolId uniqueiden..er 
  DECLARE @SchoolId uniqueiden..er 
  DECLARE @EduStatusCode int 
   
  SELECT @OldRecSchoolId = rowguid FROM MCRISS.dbo.HIGH_SCHOOL WHERE SCHOOL_CODE = @OldRecSchoolCode 
  SELECT @SchoolId = rowguid FROM MCRISS.dbo.HIGH_SCHOOL WHERE SCHOOL_CODE = @SchoolCode 
   
  SELECT Top 1 @ID = [ProspectSchoolId]  
  FROM  
   [USMC].[ProspectSchool]  
  WHERE 
   ProspectId = @ProspectID 
   AND SchoolId = @OldRecSchoolId 
   AND Educa.onLevel = @OldRecEduca.onLevel 
   AND Educa.onCode  = @OldRecEduca.onCode 
   AND ProspectSchoolTypeId = @OldProspectSchoolTypeId 
  ORDER BY LastUpdateDate Desc 
   
 
  IF @Veri.ca.on = 'VERIFIED' 
  BEGIN 
   SET @EduStatusCode = 1 
  END 
  ELSE 
  BEGIN 
   SET @EduStatusCode = 0 
  END 
 
        
  -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
  IF @ID IS NOT NULL 
  BEGIN 
    
   -- if already exists.  UPDATE. 
   UPDATE [PROSPECTING].[USMC].[ProspectSchool] 
   SET 
    SchoolId =  @SchoolId, 
    ProspectSchoolTypeId =  @ProspectSchoolTypeId, 
    Major =  @Major, 
    Gradua.onDate =  @Gradua.onDate, 
    IsFullTimeStudent =  @IsFullTimeStudent, 
    CurrentGpa =  @CurrentGpa, 
    Cumula.veGpa =  @Cumula.veGpa, 
    Educa.onLevel =  @Educa.onLevel, 
    Educa.onCode =  @Educa.onCode, 
    ProjectedCompletedDate =  @ProjectedCompletedDate, 
    IsLawSchool =  @IsLawSchool, 
    CreditHours =  @CreditHours, 
    EduStatusCode =  @EduStatusCode,  
     
    LastUpdateDate = GETDATE(), 
    LastUpdateUserId = @UserLogin 
      
   WHERE  
    [ProspectSchoolId] = @ID 
    
  END 
  ELSE 
  BEGIN 
    
   -- if does not exist.  INSERT. 
   INSERT INTO [USMC].[ProspectSchool] 
      ([ProspectSchoolId] 
      ,[ProspectId] 
      ,[SchoolId] 
      ,[LastUpdateDate] 
      ,[LastUpdateUserId] 
      ,[ProspectSchoolTypeId] 
      ,[Major] 
      ,[Gradua.onDate] 
      ,[IsFullTimeStudent] 
      ,[CurrentGpa] 
      ,[Cumula.veGpa] 
      ,[Educa.onLevel] 
      ,[Educa.onCode] 
      ,[ProjectedCompletedDate] 
      ,[IsLawSchool] 
      ,[CreditHours] 
      ,[EduStatusCode]) 
   VALUES 
   (  
    NEWID(), 
    @ProspectId, 
    @SchoolId, 
    GETDATE(), 
    @UserLogin, 
    @ProspectSchoolTypeId, 
    @Major, 
    @Gradua.onDate, 
    @IsFullTimeStudent, 
    @CurrentGpa, 
    @Cumula.veGpa, 
    @Educa.onLevel, 
    @Educa.onCode, 
    @ProjectedCompletedDate, 
    @IsLawSchool, 
    @CreditHours, 
    @EduStatusCode 
   ) 
 
     DECLARE @LatestLevel varchar(2) 
     DECLARE @LatestCode char(1) 
 
     SELECT @LatestLevel = e.Educa.onLevel, 
     @LatestCode = e.Educa.onCode 
     FROM 
     (SELECT TOP 1 Educa.onLevel, Educa.onCode FROM Prospec.ng.USMC.ProspectSchool WHERE ProspectId = @ProspectID ORDER BY Gradua.onDate DESC) as e 
 
     UPDATE MCRISS.dbo.NWA 
     SET EDUCATION_LEVEL = @LatestLevel, 
     EDUCATION_CODE = @LatestCode 
     WHERE 
     NWA_ID IN (SELECT NWA_ID FROM MCRISS.dbo.NWA  
      WHERE  
      MARINE_CANDIDATE_ID = @MarineCandidateID) 
  END 
 END 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
   
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
   
 END 
 
 
--  
-- -- STEP 4: If we reach this point, the commands completed successfully 
-- --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>