<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectProfessedExamFromMcriss]" directorySegmentName="seg_15" id="462DC4EE-8E03-D737-9FD2-6CEBE40FAF73">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@MarineCandidateID  int, 
 @OldRecExamType   char(1), 
 @OldRecExamDate   date.me, 
 @OldRecExamEnteredDate date.me, 
 @ExamType    char(1), 
 @ExamDate    date.me, 
 @ExamEnteredDate  date.me, 
 @Score     int, 
 @LastUpdateBy   uniqueiden..er  
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @ProspectID uniqueiden..er 
 
 SELECT Top 1 
  @ProspectID = ProspectId  
 FROM USMC.Prospect 
 WHERE 
  NwaId IN (SELECT rowguid FROM MCRISS.dbo.NWA  
      WHERE  
      MARINE_CANDIDATE_ID = @MarineCandidateID) 
  
 IF @ProspectID IS NOT NULL 
 BEGIN 
  DECLARE @ID uniqueiden..er 
   
  SELECT @ID = ID FROM 
   USMC.ProspectNonMEPSProfessedExam 
  WHERE  
   ProspectID = @ProspectID 
   AND ExamType = @OldRecExamType 
   AND ExamDate = @OldRecExamDate 
   AND DATEPART(year,ExamEnteredDate) = DATEPART(year,@OldRecExamEnteredDate) 
   AND DATEPART(month,ExamEnteredDate) = DATEPART(month,@OldRecExamEnteredDate) 
   AND DATEPART(day,ExamEnteredDate) = DATEPART(day,@OldRecExamEnteredDate) 
   AND DATEPART(hour,ExamEnteredDate) = DATEPART(hour,@OldRecExamEnteredDate) 
   AND DATEPART(minute,ExamEnteredDate) = DATEPART(minute,@OldRecExamEnteredDate) 
   AND DATEPART(second,ExamEnteredDate) = DATEPART(second,@OldRecExamEnteredDate) 
     
  -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
  IF @ID IS NOT NULL AND  
     (@ExamType = 'W' OR 
   @ExamType = 'E' OR 
   @ExamType = 'S' OR 
   @ExamType = 'I' OR 
   @ExamType = 'F' OR 
   @ExamType = 'T' ) --- RSS only accepts six types of exam 
  BEGIN 
   -- if already exists.  UPDATE. 
   UPDATE USMC.ProspectNonMEPSProfessedExam 
   SET  
    ExamType = @ExamType 
    ,ExamDate = @ExamDate 
    ,ExamEnteredDate = @ExamEnteredDate 
    ,Score = @Score 
    ,LastUpdateDate = GETDATE() 
    ,LastUpdateBy = @LastUpdateBy 
   WHERE ID = @ID 
    
  END 
  ELSE 
  BEGIN 
   -- if does not exist.  INSERT. 
   INSERT INTO USMC.ProspectNonMEPSProfessedExam 
      (ID 
      ,ProspectID 
      ,ExamType 
      ,ExamDate 
      ,ExamEnteredDate 
      ,Score 
      ,LastUpdateDate 
      ,LastUpdateBy) 
   VALUES 
       (NEWID() 
       ,@ProspectID 
       ,@ExamType 
       ,@ExamDate 
       ,@ExamEnteredDate 
       ,@Score 
       ,GETDATE() 
       ,@LastUpdateBy) 
  END 
 END 
  
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>