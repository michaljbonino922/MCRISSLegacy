<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_DeleteProgramAssignment]" directorySegmentName="seg_15" id="A348F46A-4286-E85E-768D-8A4001005FFB">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:47 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ProgramAvailabilityID  int, 
 @ContractID  int, 
 @UserLogin  varchar(15) 
AS 
 
DECLARE @DBID   int 
DECLARE @DBNAME  nvarchar(128) 
DECLARE @ErrMsg  varchar(100) 
DECLARE @CandidateStatusId int 
DECLARE @NWAID  int 
DECLARE @STATUS_DESCRIPTION varchar(30) 
DECLARE @DISPOSITION_DESC varchar(30) 
 
SET @DBID = DB_ID()  
SET @DBNAME = DB_NAME() 
 
 
--- REMOVE THE PROGRAM ASSIGNMENT 
UPDATE  
 PROGRAM_AVAILABILITY 
SET  
 CONTRACT_ID = NULL,  
 PROGRAM_ASSIGNMENT_DATE = NULL, 
 USER_LOGIN = @UserLogin,  
 UPDATE_DATE = GETDATE() 
WHERE  
 PROGRAM_AVAILABILITY_ID = @ProgramAvailabilityID 
 
--- UPDATE THE REMOVED_PROGRAMS TABLE 
SET @NWAID = (SELECT NWA_ID FROM CONTRACT WHERE CONTRACT_ID = @ContractID) 
SELECT @CandidateStatusId = dbo.GetMaxStatusID(@NWAID) 
 
 
SELECT 
 @STATUS_DESCRIPTION = SD.STATUS_DESCRIPTION, 
 @DISPOSITION_DESC = SD.DISPOSITION_DESCRIPTION 
  
FROM  
 CANDIDATE_STATUS CS INNER JOIN STATUS_DISPOSITION SD ON  
 (CS.STATUS_TYPE = SD.STATUS_TYPE AND  
  CS.STATUS_CODE = SD.STATUS_CODE AND  
  CS.DISPOSITION_CODE = SD.DISPOSITION_CODE AND 
  CANDIDATE_STATUS_ID = @CandidateStatusId) 
 
--- ONLY UPDATE THE REMOVED_PROGRAMS TABLE IF THE CANDIDATE IS A SHIPPER/RECRUIT 
IF @STATUS_DESCRIPTION = 'SHIPPER' AND @DISPOSITION_DESC = 'RECRUIT' AND NOT EXISTS (SELECT 1 FROM REMOVED_PROGRAMS WHERE PROGRAM_AVAILABILITY_ID = @ProgramAvailabilityID AND CONTRACT_ID = @ContractID) 
BEGIN 
 INSERT INTO REMOVED_PROGRAMS(PROGRAM_AVAILABILITY_ID, CONTRACT_ID, USER_LOGIN, UPDATE_DATE) 
 VALUES(@ProgramAvailabilityID, @ContractID, 'SA', GetDate()) 
END  
 
 
IF @@ERROR != 0  
BEGIN 
 SET @ErrMsg = 'An error occurred removing the program assignment.' 
 RAISERROR (@ErrMsg, 16, 1, @DBID, @DBNAME) 
 RETURN 
END 
 
 
--- IF A CRITERIA CONFIRMATION RECORD EXISTS, THEN DELETE IT 
IF EXISTS (SELECT 1 FROM CANDIDATE_CRITERIA_CONFIRMATION  
  WHERE CONTRACT_ID = @ContractID AND  
  PROGRAM_AVAILABILITY_ID = @ProgramAvailabilityID) 
BEGIN 
 --- DELETE THE CANDIDATE_CRITERIA_CONFIRMATION RECORD 
 EXEC sp_DeleteCandidateCriteriaCon.rma.on  
  @ContractID = @ContractID,  
  @ProgramAvailabilityID = @ProgramAvailabilityID 
 
 IF @@ERROR != 0  
 BEGIN 
  SET @ErrMsg = 'An error occurred removing the criteria con.rma.on record.' 
  RAISERROR (@ErrMsg, 16, 2, @DBID, @DBNAME) 
  RETURN 
 END 
END]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>