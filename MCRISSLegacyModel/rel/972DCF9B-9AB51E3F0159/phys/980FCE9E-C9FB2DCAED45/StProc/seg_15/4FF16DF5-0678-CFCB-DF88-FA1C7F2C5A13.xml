<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1057" directorySegmentName="seg_15" id="4FF16DF5-0678-CFCB-DF88-FA1C7F2C5A13">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[(  
  @ProspectDisposi.onId int = null, 
  @PACCreatedFromDate DATETIME = NULL, 
  @PACCreatedToDate DateTime = NULL, 
  @SubSta.onType varchar(1)= NULL, 
  @Recrui.ngPersonId uniqueiden..er = NULL 
) 
AS 
BEGIN 
 
 SET NOCOUNT ON 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 CREATE TABLE #RESULTS 
 ( 
  HIGHSCHOOL_NAME varchar(60), 
  ProspectId uniqueiden..er, 
  Ac.vity varchar(10), 
  ContactDate date.me,  
  Source varchar(10), 
  RSS varchar(45), 
  FirstName varchar(75),  
  MiddleName varchar(75),  
  LastName varchar(75), 
  PrimaryStreet1 varchar(75), 
  PrimaryStreet2 varchar(75), 
  PrimaryCity varchar(30), 
  PrimaryState varchar(2), 
  PrimaryZipCode varchar(9), 
  AlternateStreet1 varchar(75), 
  AlternateStreet2 varchar(75), 
  AlternateCity varchar(30), 
  AlternateState varchar(2), 
  AlternateZipCode varchar(9), 
  PrimaryPhoneNumber varchar(25), 
  AlternatePhoneNumber varchar(25), 
  PrimaryEmailAddress varchar(256), 
  AlternateEmailAddress varchar(256),  
  RANK_CODE varchar(10), 
  RecruiterLastName varchar(20), 
  RecruiterFirstName varchar(20), 
  RecruiterMiddleName varchar(20), 
  PACCreateDate date.me, 
  CreatedDate date.me, 
  CellPhoneNumber varchar(25) 
 ) 
 IF ( 
  @PACCreatedFromDate IS null 
  AND @PACCreatedToDate IS null 
  AND @Recrui.ngPersonId IS null) 
 BEGIN 
   SELECT 
    NULL, 
    NULL as 'HIGHSCHOOL_NAME', 
    NULL as ProspectId,  
    NULL as Ac.vity, 
 NULL as ContactDate, 
    NULL as Source, 
    NULL as RSS, 
    NULL as FirstName,  
    NULL as MiddleName,  
    NULL as LastName, 
    NULL as PrimaryStreet1, 
    NULL as PrimaryStreet2, 
    NULL as PrimaryCity, 
    NULL as PrimaryState, 
    NULL as PrimaryZipCode, 
    NULL as AlternateStreet1, 
    NULL as AlternateStreet2, 
    NULL as AlternateCity, 
    NULL as AlternateState, 
    NULL as AlternateZipCode, 
    NULL as PrimaryPhoneNumber, 
    NULL as AlternatePhoneNumber, 
    NULL as PrimaryEmailAddress, 
    NULL as AlternateEmailAddress, 
    NULL as 'RANK_CODE', 
    NULL as RecruiterLastName, 
    NULL as RecruiterFirstName, 
    NULL as RecruiterMiddleName, 
    NULL as CellPhoneNumber 
   WHERE 1 = 2 
 END 
 ELSE 
 BEGIN 
    -- If No FromDate and ToDate provided, use default values to prevent proc .me out  
 IF @PACCreatedFromDate IS null 
 BEGIN 
    SET @PACCreatedFromDate = DATEADD(year, -4, GETDATE())  
 END 
 
 IF @PACCreatedToDate IS null 
 BEGIN 
    SET @PACCreatedToDate = GETDATE() 
 END 
 ELSE 
 BEGIN 
   SET @PACCreatedToDate = DATEADD(second, 86399, @PACCreatedToDate) 
 END 
 
  SELECT  
   pr.ProspectId, 
    p.PersonId 
  INTO #ImportPerson 
  FROM [usmc].[ImportEvent] ie  
  INNER JOIN [usmc].[ImportPerson] ip on ie.importeven.d = ip.importeven.d 
  INNER JOIN [usmc].[Person] p on ip.personid = p.personid 
  INNER JOIN usmc.Prospect pr ON p.PersonId = pr.PersonId  
  LEFT OUTER JOIN [mcriss].dbo.NWA nwa ON pr.NwaId = nwa.rowguid  
  WHERE pr.Recrui.ngPersonId = @Recrui.ngPersonId 
  AND IE.ImportEventStatusTypeId = 3  
  AND IP.ImportPersonStatusTypeId in (1,2,7,10) 
  AND (@SubSta.onType is null OR (pr.SubSta.onType = @SubSta.onType AND @SubSta.onType IS NOT NULL)) 
  AND (@PACCreatedFromDate is null OR  
      (pr.PACCreateDate >= @PACCreatedFromDate AND @PACCreatedFromDate IS NOT NULL) OR 
   (pr.CreatedDate >= @PACCreatedFromDate AND @PACCreatedFromDate IS NOT NULL) 
  ) 
  AND (@PACCreatedToDate is null OR  
       (pr.PACCreateDate <= @PACCreatedToDate AND @PACCreatedToDate IS NOT NULL) OR 
    (pr.CreatedDate <= @PACCreatedToDate AND @PACCreatedToDate IS NOT NULL) 
  ) 
  AND (@Recrui.ngPersonId is NULL or (pr.Recrui.ngPersonId = @Recrui.ngPersonId AND @Recrui.ngPersonId IS NOT NULL)) 
  AND 
  ( 
     (@SubSta.onType = 'O' AND (@ProspectDisposi.onId IS NULL OR (pr.ProspectDisposi.onId = @ProspectDisposi.onId AND @ProspectDisposi.onId IS NOT NULL)))  
    OR 
     (@SubSta.onType = 'E' AND ((@ProspectDisposi.onId IS NULL AND pr.NwaId IS NULL) OR (pr.NwaId IS NULL AND (pr.ProspectDisposi.onId = @ProspectDisposi.onId AND @ProspectDisposi.onId IS NOT NULL)))) 
   ) 
   
  SELECT 
   pa.PersonID, 
   pa.Street1, 
   pa.Street2, 
   pa.City, 
   pa.State, 
   pa.ZipCode 
  INTO #PrimaryAddress 
  FROM USMC.PersonAddress pa 
  INNER JOIN #ImportPerson ip ON ip.PersonId = pa.PersonId 
  WHERE PersonAddressTypeId = 1 
   
  SELECT 
   pa.PersonID, 
   pa.Street1, 
   pa.Street2, 
   pa.City, 
   pa.State, 
   pa.ZipCode 
  INTO #SecondaryAddress 
  FROM USMC.PersonAddress pa 
  INNER JOIN #ImportPerson ip ON ip.PersonId = pa.PersonId 
  WHERE PersonAddressTypeId = 2 
   
  SELECT  
   p.PersonID, 
   p.PhoneNumber 
  INTO #PrimaryPhone 
  FROM USMC.PersonPhone p 
  INNER JOIN #ImportPerson ip ON ip.PersonId = p.PersonId 
  WHERE PersonPhoneTypeId = 1 
   
  SELECT  
   p.PersonID, 
   p.PhoneNumber 
  INTO #SecondaryPhone 
  FROM USMC.PersonPhone p  
  INNER JOIN #ImportPerson ip ON ip.PersonId = p.PersonId 
  WHERE PersonPhoneTypeId = 2 
   
  SELECT  
   p.PersonID, 
   p.PhoneNumber 
  INTO #CellPhone 
  FROM USMC.PersonPhone p  
  INNER JOIN #ImportPerson ip ON ip.PersonId = p.PersonId 
  WHERE PersonPhoneTypeId = 3 
   
  SELECT  
   e.PersonID, 
   e.EmailAddress 
  INTO #PrimaryEmailAddress 
  FROM USMC.PersonEmail e 
  INNER JOIN #ImportPerson ip ON ip.PersonId = e.PersonId 
  WHERE PersonEmailTypeId = 1 
    
  SELECT  
   e.PersonID, 
   e.EmailAddress 
  INTO #SecondaryEmailAddress 
  FROM USMC.PersonEmail e  
  INNER JOIN #ImportPerson ip ON ip.PersonId = e.PersonId 
  WHERE PersonEmailTypeId = 2 
   
  SELECT   
   rp.rowguid, 
   rp.RANK_CODE, 
   p.LAST_NAME as RecruiterLastName, 
   p.FIRST_NAME as RecruiterFirstName, 
   p.LEGAL_MIDDLE_NAME as RecruiterMiddleName 
  INTO #Recrui.ngPerson 
  FROM MCRISS.dbo.RECRUITING_PERSON rp 
  INNER JOIN MCRISS.dbo.Person p ON rp.RECRUITING_PERSON_ID = p.PERSON_ID 
  WHERE rp.rowguid = @Recrui.ngPersonId 
   
  SELECT  
   T.PersonId, 
   hs.HIGHSCHOOL_NAME 
  INTO #HighSchool 
  FROM  
 [usmc].[ProspectSchool] ps  
 INNER JOIN MCRISS.dbo.HIGH_SCHOOL HS  
  ON ps.SchoolId=HS.rowguid 
 INNER JOIN ( 
     SELECT 
     ip.PersonId,  
     ps2.ProspectId, 
     MAX(ps2.LastUpdateDate) as MostRecentUpdateDate  
     FROM  
     [usmc].[ProspectSchool] ps2  
     INNER JOIN #ImportPerson ip ON ip.ProspectId = ps2.ProspectId AND ProspectSchoolTypeId = 2 
     GROUP BY  
      ps2.ProspectId, ip.PersonId 
    ) as T 
  ON ps.ProspectId = T.ProspectId AND ps.LastUpdateDate = T.MostRecentUpdateDate 
    
  
  INSERT INTO #RESULTS 
  SELECT DISTINCT 
   HS.HIGHSCHOOL_NAME,  
   pr.ProspectId, 
   pr.Ac.vity, 
   CASE WHEN pr.NwaId is NULL 
   THEN  (SELECT  
     MIN(ProspectDate)  
    FROM  
     [USMC].[ProspectComment] c 
     INNER JOIN [USMC].[ProspectAc.vityComment] ac 
      ON c.ProspectAc.vityCommentId = ac.ProspectAc.vityCommentId 
     INNER JOIN [USMC].[ProspectCommentType] t 
      ON ac.ProspectCommentTypeId = t.ProspectCommentTypeId 
    WHERE  
     ProspectId = pr.ProspectId 
     AND t.ProspectCommentTypeId IN (1,2,3,9,36,39) 
    ) 
   ELSE nwa.NWA_DATE_STARTED_WORKING 
 END as ContactDate,  
   pr.Source, 
   RO.NAME as RSS, 
   p.FirstName,  
   p.MiddleName,  
   p.LastName, 
   PA_PRIMARY.Street1 as PrimaryStreet1, 
   PA_PRIMARY.Street2 as PrimaryStreet2, 
   PA_PRIMARY.City as PrimaryCity, 
   PA_PRIMARY.State as PrimaryState, 
   PA_PRIMARY.ZipCode as PrimaryZipCode, 
   PA_ALTERNATE.Street1 as AlternateStreet1, 
   PA_ALTERNATE.Street2 as AlternateStreet2, 
   PA_ALTERNATE.City as AlternateCity, 
   PA_ALTERNATE.State as AlternateState, 
   PA_ALTERNATE.ZipCode as AlternateZipCode, 
   PP_PRIMARY.PhoneNumber as PrimaryPhoneNumber, 
   PP_ALTERNATE.PhoneNumber as AlternatePhoneNumber, 
   PE_PRIMARY.EmailAddress as PrimaryEmailAddress, 
   PE_ALTERNATE.EmailAddress as AlternateEmailAddress, 
   rp.RANK_CODE, 
   rp.RecruiterLastName, 
   rp.RecruiterFirstName, 
   rp.RecruiterMiddleName, 
   pr.PACCreateDate, 
   pr.CreatedDate, 
   PP_CELL.PhoneNumber as CellPhoneNumber 
  FROM #ImportPerson ip 
    INNER JOIN usmc.Prospect pr ON ip.ProspectId = pr.ProspectId 
 INNER JOIN [usmc].[Person] p on ip.personid = p.personid 
 LEFT OUTER JOIN [mcriss].dbo.NWA nwa ON pr.NwaId = nwa.rowguid 
 LEFT OUTER JOIN [usmc].[ProspectDisposi.on] pdt on (pr.ProspectDisposi.onId = pdt.ProspectDisposi.onId) 
 LEFT OUTER JOIN #Recrui.ngPerson rp on pr.Recrui.ngPersonId = rp.rowguid 
 LEFT OUTER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION RO on (pr.Recrui.ngOrganiza.onId = RO.rowguid) 
 LEFT OUTER JOIN #HighSchool hs ON hs.PersonId = ip.PersonId   
 LEFT OUTER JOIN #PrimaryAddress PA_PRIMARY ON PA_PRIMARY.PersonId = ip.PersonId 
 LEFT OUTER JOIN #SecondaryAddress PA_ALTERNATE ON PA_ALTERNATE.PersonId = ip.PersonId 
 LEFT OUTER JOIN #PrimaryPhone PP_PRIMARY ON PP_PRIMARY.PersonId = ip.PersonId 
 LEFT OUTER JOIN #SecondaryPhone PP_ALTERNATE ON PP_ALTERNATE.PersonId = ip.PersonId 
 LEFT OUTER JOIN #CellPhone PP_CELL ON PP_CELL.PersonId = ip.PersonId 
 LEFT OUTER JOIN #PrimaryEmailAddress PE_PRIMARY ON PE_PRIMARY.PersonId = ip.PersonId 
 LEFT OUTER JOIN #SecondaryEmailAddress PE_ALTERNATE ON PE_ALTERNATE.PersonId = ip.PersonId 
  --WHERE  
  -- ( 
  --   (@SubSta.onType = 'O' AND (@ProspectDisposi.onId IS NULL OR (pdt.ProspectDisposi.onId = @ProspectDisposi.onId AND @ProspectDisposi.onId IS NOT NULL)))  
  --  OR 
  --   (@SubSta.onType = 'E' AND ((@ProspectDisposi.onId IS NULL AND ip.NwaId IS NULL) OR (ip.NwaId IS NULL AND (pdt.ProspectDisposi.onId = @ProspectDisposi.onId AND @ProspectDisposi.onId IS NOT NULL)))) 
  -- ) 
   
  SELECT  
 pc.ProspectCommentId, 
 pc.ProspectId, 
 pc.Comment, 
 pc.ProspectDate, 
 pc.ProspectAc.vityCommentId 
  INTO #TempProspectComment 
  FROM USMC.ProspectComment pc 
  INNER JOIN #ImportPerson ip ON pc.ProspectId = ip.ProspectId 
  WHERE pc.ProspectDate IS NOT NULL  
    
  SELECT MAX(pc.ProspectDate) AS LastCommentDate, 
  pc.ProspectID, 
  pct.ProspectCommentDescrip.on AS Comment 
  INTO #ProspectComment 
  FROM #TempProspectComment pc 
  LEFT JOIN USMC.ProspectAc.vityComment pac on pac.ProspectAc.vityCommentId = pc.ProspectAc.vityCommentId 
  LEFT JOIN USMC.ProspectCommentType pct on pct.ProspectCommentTypeId = pac.ProspectCommentTypeId 
  WHERE pc.ProspectDate IN ( 
         SELECT MAX(pc2.ProspectDate) 
         FROM #TempProspectComment pc2 
         WHERE pc2.ProspectId = pc.ProspectId 
        )                       
  GROUP BY ProspectDate, pc.ProspectId, pct.ProspectCommentDescrip.on 
   
  SELECT  ROW_NUMBER() OVER(Order By R.LASTNAME, R.FIRSTNAME), 
   R.*, 
   pc.Comment, 
   pc.LastCommentDate 
  FROM #RESULTS r   
  LEFT OUTER JOIN #ProspectComment pc ON r.ProspectId = pc.ProspectId  
   
  DROP TABLE #RESULTS 
  DROP TABLE #ImportPerson  
  DROP TABLE #PrimaryAddress 
  DROP TABLE #SecondaryAddress 
  DROP TABLE #PrimaryPhone 
  DROP TABLE #SecondaryPhone 
  DROP TABLE #CellPhone 
  DROP TABLE #PrimaryEmailAddress 
  DROP TABLE #SecondaryEmailAddress 
  DROP TABLE #Recrui.ngPerson 
  DROP TABLE #HighSchool  
  DROP Table #TempProspectComment 
  DROP TABLE #ProspectComment 
  
 END 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>