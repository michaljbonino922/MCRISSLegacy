<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectPhysicalProblems]" directorySegmentName="seg_15" id="D617B44E-8023-DDFC-458E-3136959E7FCE">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ProspectID uniqueiden..er, 
 @Implants varchar(500) = NULL, 
 @Contacts varchar(500) = NULL, 
 @Opera.ons varchar(500) = NULL, 
 @Medicines varchar(500) = NULL, 
 @BrokenBones varchar(500) = NULL, 
 @Asthma varchar(500) = NULL, 
 @Tatoos varchar(500) = NULL, 
 @Vision varchar(500) = NULL, 
 @Other varchar(500) = NULL, 
 @LastUpdateUserID uniqueiden..er 
    
 
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
 
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF EXISTS(SELECT ProspectID FROM USMC.ProspectPhysicalProblems WHERE ProspectID = @ProspectID) 
 BEGIN 
  -- if already exists.  UPDATE. 
  UPDATE USMC.ProspectPhysicalProblems 
  SET  
   Implants = @Implants, 
   Contacts = @Contacts, 
   Opera.ons = @Opera.ons, 
   Medicines = @Medicines, 
   BrokenBones = @BrokenBones, 
   Asthma = @Asthma, 
   Tatoos = @Tatoos, 
   Vision = @Vision, 
   Other = @Other, 
   LastUpdateDate = GETDATE(), 
   LastUpdateBy = @LastUpdateUserID 
  WHERE ProspectID = @ProspectID  
 
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO USMC.ProspectPhysicalProblems 
           ( 
   ProspectPhysicalProblemsID, 
   ProspectID, 
   Implants, 
   Contacts, 
   Opera.ons, 
   Medicines, 
   BrokenBones, 
   Asthma, 
   Tatoos, 
   Vision, 
   Other, 
   LastUpdateDate, 
   LastUpdateBy) 
  VALUES 
           ( 
   NEWID(), 
   @ProspectID, 
   @Implants, 
   @Contacts, 
   @Opera.ons, 
   @Medicines, 
   @BrokenBones, 
   @Asthma, 
   @Tatoos, 
   @Vision, 
   @Other, 
   GETDATE(), 
   @LastUpdateUserID) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>