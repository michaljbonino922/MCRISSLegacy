<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateOssProspectP.FromMcriss]" directorySegmentName="seg_15" id="EB1E8B96-A516-EE24-6193-15C5CB4AFA31">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@NwaID    int, 
 @OldRecTestDate  date.me, 
 @TestDate   date.me, 
 @Height    decimal(4,2), 
 @Weight    int, 
 @RunTimeMinute  int, 
 @RunTimeSecond  int, 
 @PuHang    int = null, 
 @Crunch    int, 
 @LastUpdateBy  uniqueiden..er, 
 @BodyFatPercent  int, 
 @Score    int, 
 @AmmoCanLi.  int = null, 
 @Pullup    int = null, 
 @Pushup    int = null, 
 @PlankMinute        int = null, 
 @PlankSecond        int = null, 
 @ScoreRankId  char(1) = null 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @ProspectID uniqueiden..er 
 
 SELECT Top 1 
  @ProspectID = ProspectId  
 FROM USMC.Prospect 
 WHERE 
  NwaId IN (SELECT Top 1 rowguid FROM MCRISS.dbo.NWA  
      WHERE  
      Nwa_ID = @NwaID ORDER BY NWA_ID DESC) 
  
 IF @ProspectID IS NOT NULL 
 BEGIN 
  DECLARE @ID uniqueiden..er 
   
  SELECT @ID = ID FROM 
   [USMC].[ProspectPhysicalIst] 
  WHERE  
   ProspectID = @ProspectID 
   AND TestDate = @OldRecTestDate 
     
  -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
  IF @ID IS NOT NULL --- OSS only accepts .ve types of exam 
  BEGIN 
   -- if already exists.  UPDATE. 
   UPDATE [USMC].[ProspectPhysicalIst] 
   SET  
    TestDate =  @TestDate, 
    Height =  @Height, 
    Weight =  @Weight, 
    RunTimeMinute =  @RunTimeMinute, 
    RunTimeSecond =  @RunTimeSecond, 
    PuHang =  @PuHang, 
    Crunch =  @Crunch, 
    LastUpdateDate =  GETDATE(), 
    LastUpdateBy =  @LastUpdateBy, 
    BodyFatPercent =  @BodyFatPercent, 
    Score =  @Score, 
    AmmoCanLi. = @AmmoCanLi., 
    Pullup = @Pullup, 
    Pushup = @Pushup, 
    PlankMinute = @PlankMinute, 
    PlankSecond = @PlankSecond, 
    ScoreRankId = @ScoreRankId 
   WHERE  
    ID = @ID 
    
  END 
  ELSE 
  BEGIN 
   -- if does not exist.  INSERT. 
   INSERT INTO [USMC].[ProspectPhysicalIst] 
      ([ID] 
      ,[ProspectID] 
      ,[TestDate] 
      ,[Height] 
      ,[Weight] 
      ,[RunTimeMinute] 
      ,[RunTimeSecond] 
      ,[PuHang] 
      ,[Crunch] 
      ,[LastUpdateDate] 
      ,[LastUpdateBy] 
      ,[BodyFatPercent] 
      ,[Score] 
      ,[AmmoCanLi.] 
      ,[Pullup] 
      ,[Pushup] 
      ,[PlankMinute] 
      ,[PlankSecond] 
      ,[ScoreRankId]) 
   VALUES 
       (NEWID(), 
        @ProspectID, 
     @TestDate, 
     @Height, 
     @Weight, 
     @RunTimeMinute, 
     @RunTimeSecond, 
     @PuHang, 
     @Crunch, 
     GETDATE(), 
     @LastUpdateBy, 
     @BodyFatPercent, 
     @Score, 
     @AmmoCanLi., 
     @Pullup, 
     @Pushup, 
     @PlankMinute, 
     @PlankSecond, 
     @ScoreRankId 
       ) 
  END 
 END 
  
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
 
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>