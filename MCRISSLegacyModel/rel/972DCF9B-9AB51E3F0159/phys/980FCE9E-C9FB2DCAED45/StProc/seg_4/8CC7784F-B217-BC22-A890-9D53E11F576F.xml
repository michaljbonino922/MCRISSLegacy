<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetOSSMonthlyDataAnalysis]" directorySegmentName="seg_4" id="8CC7784F-B217-BC22-A890-9D53E11F576F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@StartDate date.me, 
 @EndDate date.me, 
 @OrgId int, 
 @MISSION_FISCAL_YEAR int 
AS 
BEGIN 
 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 CREATE TABLE #temp_MDA 
 ( HeaderText varchar(10), 
  RowDate date.me, 
  TcContacts int, 
  TcInterviews int, 
  TcSOE int, 
  DcContacts int, 
  DcInterviews int, 
  DcSOE int, 
  AcContacts int, 
  AcInterviews int, 
  AcSOE int, 
  OtContacts int, 
  OtInterviews int, 
  OtSOE int, 
  TotalContacts int, 
  TotalAverage int, 
  BPTC decimal(10,5), 
  BPDC decimal(10,5), 
  BPAC decimal(10,5), 
  BPOT decimal(10,5), 
  CrInterviews int, 
  CrNWA int, 
  ClosingRa.o decimal(10,5), 
  PrNWA int, 
  PrContracts int, 
  ProcessingRa.o decimal(10,5), 
  SrInterviews int, 
  SrContracts int, 
  SalesRa.o decimal(10,5) 
 ) 
  
  
 
 CREATE TABLE #ACTIVITIES 
 ( 
  Ac.vity VARCHAR(10) 
 ) 
  
 CREATE TABLE #PROSPECT_DIVERSITY 
 ( 
   ProspectId UNIQUEIDENTIFIER 
  ,Ac.vity VARCHAR(10) 
  ,Ac.vityDate DATETIME 
  ,NwaId UNIQUEIDENTIFIER 
  ,DiversityCode VARCHAR(10) 
  ,Gender varchar(1) 
        ,SocialSecurityNumber    char(9) 
        ,Program   varchar(4) 
 ) 
    
 SET  @StartDate = CAST( (STR(Year(@StartDate)) + '-' + STR(MONTH(@StartDate)) + '-' + STR(DAY(@StartDate)) ) AS date.me) 
      
 SET  @EndDate = CAST( (STR(Year(@EndDate)) + '-' + STR(MONTH(@EndDate)) + '-' + STR(DAY(@EndDate)) ) AS date.me) 
 SET  @EndDate = DATEADD(day, 1, @EndDate) 
 
  
 INSERT INTO #ACTIVITIES 
 SELECT 'TC' 
 
 INSERT INTO #ACTIVITIES 
 SELECT 'DC' 
 
 INSERT INTO #ACTIVITIES 
 SELECT 'AC' 
 
 INSERT INTO #ACTIVITIES 
 SELECT 'OT' 
 
    declare @StartCompDate date.me 
    if (month(@StartDate) > 9) 
        select @StartCompDate = convert(date.me, '10/1/' + cast(year(@StartDate) as varchar(4))) 
    else 
         select @StartCompDate = convert(date.me, '10/1/' + cast(year(@StartDate)-1 as varchar(4))) 
 
   --print @StartCompDate 
  
 SELECT P.*  
 INTO #Prospect 
 FROM  
  PROSPECTING.USMC.PROSPECT P INNER JOIN  
        MCRISS.DBO.RECRUITING_ORGANIZATION RO ON RO.ROWGUID = P.Recrui.ngOrganiza.onId 
        AND RO.Organiza.on_Id = @OrgId 
  
 SELECT *  
 INTO #Event 
 FROM  
  RSSOSS.USMC.Event e 
 WHERE 
  @OrgId IS NOT NULL AND e.Organiza.onId = @OrgId  
  AND (e.StartDate >= @StartDate AND e.StartDate < @EndDate)  
 
   --select * from  #Event 
  
 SELECT DISTINCT s.*, startdate, eventypeid  
 INTO #EventSubject 
 FROM  
  RSSOSS.USMC.EventSubject s 
  INNER JOIN #Event e 
   ON e.ID = s.EventId     
 
    SELECT *  
 INTO #Event2 
 FROM  
  RSSOSS.USMC.Event e 
 WHERE 
  @OrgId IS NOT NULL AND e.Organiza.onId = @OrgId  
  AND (e.StartDate >= @StartCompDate AND e.StartDate < @EndDate)  
 
   --select * from  #Event2  
  
 SELECT DISTINCT s.*, startdate, eventypeid  
 INTO #EventSubject2 
 FROM  
  RSSOSS.USMC.EventSubject s 
  INNER JOIN #Event2 e 
   ON e.ID = s.EventId     
 
--select * from  #EventSubject2 order by Subjec.d 
       
 SELECT DISTINCT oc.* 
 INTO #EventOutcome 
 FROM  
  RSSOSS.USMC.EventOutcome oc 
  INNER JOIN #Event e 
   ON e.ID = oc.EventId 
  
  
 INSERT INTO #PROSPECT_DIVERSITY 
 SELECT pro.ProspectId 
   ,pro.Ac.vity 
   ,pro.Ac.vityDate 
   ,pro.NwaId 
   ,CASE 
    WHEN opp.Diversity IS NULL THEN 
    CASE    
     WHEN (per.Race + per.Ethnicity) IN 
       ('AA', 
        'C1','C2','C3','C4','C5','C6','C7','C9','CA','CB','CD','CE','CF','CG','CH','CJ', 
        'CK','CL','CP','CQ','CS','CT','CV','CW','CZ', 
        'EA','FA') THEN 'AA' 
     WHEN (per.Race + per.Ethnicity) IN 
      ('A4','A6','A9','AB','AS','BB','DB','E1','E4','E6','E9','EB','ES','F1','F4','F6', 
       'F9','FB','FS') THEN 'H' 
     WHEN (per.Race + per.Ethnicity) IN 
      ('EP','EZ','FP','FZ') THEN 'W' 
     WHEN (per.Race + per.Ethnicity) IN 
      ('A1','A2','A3','A5','A7','AD','AE','AF','AG','AH','AJ','AK','AL','AP','AQ','AT','AV','AW','AZ', 
       'B1','B2','B3','B4','B5','B6','B7','B9','BA', 
       'D1','D2','D3','D4','D5','D6','D7','D9','DA',   
       'BD','BE','BF','BG','BH','BJ','BK','BL','BP','BQ','BS','BT','BV','BW','BZ', 
       'DD','DE','DF','DG','DH','DJ','DK','DL','DP','DQ','DS','DT','DV','DW','DZ', 
       'E2','E3','E5','E7','ED','EE','EF','EG','EH','EJ','EK','EL','EQ','ET','EV','EW', 
       'F2','F3','F5','F7','FD','FE','FF','FG','FH','FJ','FK','FL','FQ','FT','FV','FW' 
      ) THEN 'O' 
     ELSE NULL      
    END 
    ELSE 
    CASE      
     WHEN (opp.Diversity + opp.EthnicCode) IN 
       ('AA', 
        'C1','C2','C3','C4','C5','C6','C7','C9','CA','CB','CD','CE','CF','CG','CH','CJ', 
        'CK','CL','CP','CQ','CS','CT','CV','CW','CZ', 
        'EA','FA') THEN 'AA' 
     WHEN (opp.Diversity + opp.EthnicCode) IN 
      ('A4','A6','A9','AB','AS','BB','DB','E1','E4','E6','E9','EB','ES','F1','F4','F6', 
       'F9','FB','FS') THEN 'H' 
     WHEN (opp.Diversity + opp.EthnicCode) IN 
      ('EP','EZ','FP','FZ') THEN 'W' 
     WHEN (opp.Diversity + opp.EthnicCode) IN 
      ('A1','A2','A3','A5','A7','AD','AE','AF','AG','AH','AJ','AK','AL','AP','AQ','AT','AV','AW','AZ', 
       'B1','B2','B3','B4','B5','B6','B7','B9','BA', 
       'D1','D2','D3','D4','D5','D6','D7','D9','DA',   
       'BD','BE','BF','BG','BH','BJ','BK','BL','BP','BQ','BS','BT','BV','BW','BZ', 
       'DD','DE','DF','DG','DH','DJ','DK','DL','DP','DQ','DS','DT','DV','DW','DZ', 
       'E2','E3','E5','E7','ED','EE','EF','EG','EH','EJ','EK','EL','EQ','ET','EV','EW', 
       'F2','F3','F5','F7','FD','FE','FF','FG','FH','FJ','FK','FL','FQ','FT','FV','FW' 
      ) THEN 'O' 
     ELSE NULL      
    END 
   END AS DiversityCode 
   ,per.Gender 
   ,per.SocialSecurityNumber 
   ,opp.Program 
 FROM #Prospect pro 
 LEFT OUTER JOIN Prospec.ng.USMC.O.cerProspectPac opp ON pro.ProspectId = opp.ProspectId 
 INNER JOIN Prospec.ng.USMC.Person per ON pro.PersonId = per.PersonId 
 
   
   -- get rid of duplicated interviews  
    SELECT rst.*  
    INTO #EventSubjectInt  
    FROM  
  ( 
   (  
    -- for applicants with SSN  
    SELECT  
     es1.*, p.Ac.vity, p.Gender, p.DiversityCode, p.NwaId    
    FROM  
     #EventSubject es1  
     INNER JOIN #PROSPECT_DIVERSITY p ON es1.subjectId = p.ProspectId 
     INNER JOIN #ACTIVITIES a ON a.Ac.vity = p.Ac.vity  
     INNER JOIN RSSOSS.USMC.EventOutcome oc on es1.EventId = oc.EventId  
    WHERE  
     oc.InterviewOutcomeId IN (1,2) 
     AND StartDate = ( 
          SELECT min(es2.StartDate)  
          FROM  
           #EventSubject2 es2  
           INNER JOIN #PROSPECT_DIVERSITY p2 on es2.subjectId = p2.ProspectId 
           INNER JOIN RSSOSS.USMC.EventOutcome oc2 on es2.EventId = oc2.EventId 
          WHERE  
           p.SocialSecurityNumber= p2.SocialSecurityNumber 
           and es2.startDate between @StartCompDate and @EndDate 
           and Program in ('0A', '0B', '0C', '0E', '0F', '1A', '1B', '1C', '1H') 
           and es1.eventypeid = es2.eventypeid and oc2.AppointmentOutcomeId in (1,2) 
           and es1.EventId in ( SELECT id  
                 FROM  
                  #Event 
                 WHERE  
                  eventypeid in (1,85,88)  
                ) 
         )  
     AND Program in ('0A', '0B', '0C', '0E', '0F', '1A', '1B', '1C', '1H')  
      
     UNION  
      
     -- for applicants without SSN 
     SELECT es1.*, p.Ac.vity, p.Gender, p.DiversityCode, p.NwaId    
     FROM  
      #EventSubject es1  
      INNER join #PROSPECT_DIVERSITY p ON es1.subjectId = p.ProspectId 
      INNER JOIN #ACTIVITIES a ON a.Ac.vity = p.Ac.vity  
      inner join RSSOSS.USMC.EventOutcome oc on es1.EventId = oc.EventId  
     WHERE  
      InterviewOutcomeId IN (1,2) 
      and Program in ('0A', '0B', '0C', '0E', '0F', '1A', '1B', '1C', '1H') 
      and eventypeid in (1,85,88) 
      AND SocialSecurityNumber IS NULL 
   ) 
    
   UNION ALL 
       
      ( 
    -- for applicants with SSN  
    SELECT  
     es1.*, p.Ac.vity, p.Gender, p.DiversityCode, p.NwaId    
    FROM  
     #EventSubject es1  
     INNER JOIN #PROSPECT_DIVERSITY p ON es1.subjectId = p.ProspectId 
     INNER JOIN #ACTIVITIES a ON a.Ac.vity = p.Ac.vity  
     INNER JOIN RSSOSS.USMC.EventOutcome oc on es1.EventId = oc.EventId  
    WHERE  
     oc.InterviewOutcomeId IN (1,2) 
     and StartDate = ( SELECT min(es2.StartDate)  
          FROM  
           #EventSubject2 es2  
           INNER JOIN #PROSPECT_DIVERSITY p2 on es2.subjectId = p2.ProspectId 
           INNER JOIN RSSOSS.USMC.EventOutcome oc2 on es2.EventId = oc2.EventId   
          WHERE  
           p.SocialSecurityNumber = p2.SocialSecurityNumber 
           and p.Program = p2.Program  
           and p.Program in ('1E') 
           and es2.startDate between @StartCompDate and @EndDate 
           and es1.eventypeid = es2.eventypeid and oc2.AppointmentOutcomeId in (1,2) 
           and es1.EventId in ( SELECT id  
                 FROM  
                  #Event 
                 WHERE  
                  eventypeid in (1,85,88)  
                ) 
         ) 
     
    UNION 
     
    -- for applicants without SSN  
    SELECT es1.*, p.Ac.vity, p.Gender, p.DiversityCode, p.NwaId    
    FROM  
     #EventSubject es1  
     INNER join #PROSPECT_DIVERSITY p ON es1.subjectId = p.ProspectId 
     INNER JOIN #ACTIVITIES a ON a.Ac.vity = p.Ac.vity  
     inner join RSSOSS.USMC.EventOutcome oc on es1.EventId = oc.EventId  
    WHERE  
     InterviewOutcomeId IN (1,2) 
     and Program in ('1E') 
     and eventypeid in (1,85,88) 
     AND SocialSecurityNumber IS NULL 
   ) 
  ) rst 
 
 select * 
 into #NWA 
 from [MCRISS].[dbo].[NWA] 
 WHERE nwa.NWA_DECLARED_DATE >= @StartDate AND nwa.NWA_DECLARED_DATE < @EndDate 
 
 
 select pro.*, #NWA.NWA_ID, #NWA.NWA_DECLARED_DATE 
 into #ProspectNWA 
 FROM #PROSPECT_DIVERSITY pro inner join #NWA on pro.nwaid = #NWA.rowguid; 
  
  
 -- Get the withdrawn NWAs so the withdrawn contracts can be excluded 
 DECLARE @PENDINGADDINFODIST  varchar(2) = 'AI' 
 DECLARE @PENDINGADDINFOREGION varchar(2) = 'AT' 
 DECLARE @DISTRICTHARDDROP varchar(2) = 'BD' 
 DECLARE @WITHDRAWNBYREGION  varchar(2) = 'AV' 
 DECLARE @WITHDRAWNBYMCRC  varchar(2) = 'AY' 
 DECLARE @WITHDRAWNBYDISTRICT varchar(2) = 'BA' 
 DECLARE @WITHDRAWNBYOSS   varchar(2) = 'S' 
  
 SELECT [NWA_ID] 
 INTO #Withdrawals 
 FROM [MCRISS].[dbo].[CANDIDATE_STATUS] 
 WHERE 
  [STATUS_TYPE] + [STATUS_CODE] = 'OB' AND 
  [DISPOSITION_CODE] IN (@PENDINGADDINFODIST, @PENDINGADDINFOREGION, @DISTRICTHARDDROP, @WITHDRAWNBYREGION, @WITHDRAWNBYMCRC, @WITHDRAWNBYDISTRICT, @WITHDRAWNBYOSS) 
  
  
 -- Get Contracts 
 select contr.[CONTRACT_ID], contr.[NWA_ID], contr.CONTRACT_BEGIN_DATE 
 into #Contracts 
 from [MCRISS].[dbo].[OFFICER_CONTRACT] contr inner join #ProspectNWA on contr.NWA_ID = #ProspectNWA.NWA_ID 
 WHERE contr.CONTRACT_BEGIN_DATE >= @StartDate AND contr.CONTRACT_BEGIN_DATE < @EndDate 
 AND contr.[NWA_ID] NOT IN(SELECT NWA_ID FROM #Withdrawals) 
   
  
  
 DECLARE @incrementDate date.me 
 SET @incrementDate = @StartDate 
  
 DECLARE @incrementEndingDate date.me 
 DECLARE @TcContacts int 
 DECLARE @TcInterviews int 
 DECLARE @TcSOE int 
 DECLARE @DcContacts int 
 DECLARE @DcInterviews int 
 DECLARE @DcSOE int 
 DECLARE @AcContacts int 
 DECLARE @AcInterviews int 
 DECLARE @AcSOE int 
 DECLARE @OtContacts int 
 DECLARE @OtInterviews int 
 DECLARE @OtSOE int 
 DECLARE @TotalContacts int 
 DECLARE @TotalAverage int 
 DECLARE @BPTC decimal(10,5) 
 DECLARE @BPDC decimal(10,5) 
 DECLARE @BPAC decimal(10,5) 
 DECLARE @BPOT decimal(10,5) 
 DECLARE @CrInterviews int 
 DECLARE @CrNWA int 
 DECLARE @ClosingRa.o decimal(10,5) 
 DECLARE @PrNWA int 
 DECLARE @PrContracts int 
 DECLARE @ProcessingRa.o decimal(10,5) 
 DECLARE @SrInterviews int 
 DECLARE @SrContracts int 
 DECLARE @SalesRa.o decimal(10,5) 
  
 WHILE @incrementDate < @EndDate 
 BEGIN 
     SET @incrementEndingDate = DATEADD(MONTH, 1, @incrementDate) 
     SET @incrementEndingDate = DATEADD(second, -1, @incrementEndingDate) 
      
     SET @TcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @incrementDate AND p.Ac.vityDate < @incrementEndingDate AND p.Ac.vity = 'TC'),0) 
     SET @TcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @incrementDate AND startdate < @incrementEndingDate AND Ac.vity = 'TC'),0) 
     IF @TcInterviews = 0 
     BEGIN 
   SET @TcSOE = 0 
     END 
     ELSE 
     BEGIN 
   SET @TcSOE = CEILING(cast(@TcContacts as decimal(10, 5))/@TcInterviews) 
  END 
      
     SET @DcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @incrementDate AND p.Ac.vityDate < @incrementEndingDate AND p.Ac.vity = 'DC'),0) 
     SET @DcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @incrementDate AND startdate < @incrementEndingDate AND Ac.vity = 'DC'),0) 
     IF @DcInterviews = 0 
     BEGIN 
   SET @DcSOE = 0 
     END 
     ELSE 
     BEGIN 
   SET @DcSOE = CEILING(cast(@DcContacts as decimal(10, 5))/@DcInterviews) 
  END 
      
     SET @AcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @incrementDate AND p.Ac.vityDate < @incrementEndingDate AND p.Ac.vity = 'AC'),0) 
     SET @AcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @incrementDate AND startdate < @incrementEndingDate AND Ac.vity = 'AC'),0) 
     IF @AcInterviews = 0 
     BEGIN 
   SET @AcSOE = 0 
     END 
     ELSE 
     BEGIN 
   SET @AcSOE = CEILING(cast(@AcContacts as decimal(10, 5))/@AcInterviews) 
  END 
      
     SET @OtContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @incrementDate AND p.Ac.vityDate < @incrementEndingDate AND p.Ac.vity = 'OT'),0) 
     SET @OtInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @incrementDate AND startdate < @incrementEndingDate AND Ac.vity = 'OT'),0) 
     IF @OtInterviews = 0 
     BEGIN 
   SET @OtSOE = 0 
     END 
     ELSE 
     BEGIN 
   SET @OtSOE = CEILING(cast(@OtContacts as decimal(10, 5))/@OtInterviews) 
  END 
   
  SET @TotalContacts = @TcContacts + @DcContacts + @AcContacts + @OtContacts 
      
     IF ((@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) = 0) 
     BEGIN 
   SET @TotalAverage = 0 
   SET @BPTC = 0 
   SET @BPDC = 0 
   SET @BPAC = 0 
   SET @BPOT = 0 
     END 
     ELSE 
     BEGIN 
   SET @TotalAverage = CEILING(cast(@TotalContacts as decimal(10, 5)) / (@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews)) 
   SET @BPTC = cast(@TcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
   SET @BPDC = cast(@DcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
   SET @BPAC = cast(@AcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
   SET @BPOT = cast(@OtInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
  END 
      
     SET @CrInterviews = @TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews 
     SET @CrNWA = ISNULL((SELECT COUNT(*) FROM #ProspectNWA p WHERE p.NWA_DECLARED_DATE >= @incrementDate AND p.NWA_DECLARED_DATE < @incrementEndingDate),0) 
     IF @CrNWA = 0 
     BEGIN 
   SET @ClosingRa.o = 0 
     END 
     ELSE 
     BEGIN 
   SET @ClosingRa.o = cast(@CrInterviews as decimal(10, 5)) / @CrNWA 
  END 
      
     SET @PrNWA = @CrNWA 
     SET @PrContracts = ISNULL((SELECT COUNT(*) FROM #Contracts c WHERE c.CONTRACT_BEGIN_DATE >= @incrementDate AND c.CONTRACT_BEGIN_DATE < @incrementEndingDate),0) 
     IF @PrContracts = 0 
     BEGIN 
   SET @ProcessingRa.o = 0 
     END 
     ELSE 
     BEGIN 
   SET @ProcessingRa.o = cast(@PrNWA as decimal(10, 5)) / @PrContracts 
  END 
      
     SET @SrInterviews = @TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews 
     SET @SrContracts = @PrContracts 
     IF @SrContracts = 0 
     BEGIN 
   SET @SalesRa.o = 0 
     END 
     ELSE 
     BEGIN 
   SET @SalesRa.o = cast(@SrInterviews as decimal(10, 5)) / @SrContracts 
  END 
      
  INSERT INTO #temp_MDA VALUES 
  ( LEFT(DATENAME(MONTH,@incrementDate),3) + '-' + RIGHT(YEAR(@incrementDate), 2), 
   @incrementDate, 
   @TcContacts, 
   @TcInterviews, 
   @TcSOE, 
   @DcContacts, 
   @DcInterviews, 
   @DcSOE, 
   @AcContacts, 
   @AcInterviews, 
   @AcSOE, 
   @OtContacts, 
   @OtInterviews, 
   @OtSOE, 
   @TotalContacts, 
   @TotalAverage, 
   @BPTC, 
   @BPDC, 
   @BPAC, 
   @BPOT, 
   @CrInterviews, 
   @CrNWA, 
   @ClosingRa.o, 
   @PrNWA, 
   @PrContracts, 
   @ProcessingRa.o, 
   @SrInterviews, 
   @SrContracts, 
   @SalesRa.o 
  ) 
  SET @incrementDate = DateAdd(month, 1, @incrementDate); 
 END 
  
 -- Calculate the Totals 
    SET @TcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @StartDate AND p.Ac.vityDate < @EndDate AND p.Ac.vity = 'TC'),0) 
    SET @TcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @StartDate AND startdate < @EndDate AND Ac.vity = 'TC'),0) 
    IF @TcInterviews = 0 
    BEGIN 
  SET @TcSOE = 0 
    END 
    ELSE 
    BEGIN 
  SET @TcSOE = CEILING(cast(@TcContacts as decimal(10, 5))/@TcInterviews) 
 END 
     
    SET @DcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @StartDate AND p.Ac.vityDate < @EndDate AND p.Ac.vity = 'DC'),0) 
    SET @DcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @StartDate AND startdate < @EndDate AND Ac.vity = 'DC'),0) 
    IF @DcInterviews = 0 
    BEGIN 
  SET @DcSOE = 0 
    END 
    ELSE 
    BEGIN 
  SET @DcSOE = CEILING(cast(@DcContacts as decimal(10, 5))/@DcInterviews) 
 END 
     
    SET @AcContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @StartDate AND p.Ac.vityDate < @EndDate AND p.Ac.vity = 'AC'),0) 
    SET @AcInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @StartDate AND startdate < @EndDate AND Ac.vity = 'AC'),0) 
    IF @AcInterviews = 0 
    BEGIN 
  SET @AcSOE = 0 
    END 
    ELSE 
    BEGIN 
  SET @AcSOE = CEILING(cast(@AcContacts as decimal(10, 5))/@AcInterviews) 
 END 
     
    SET @OtContacts = ISNULL((SELECT COUNT(*) FROM #PROSPECT_DIVERSITY p WHERE p.Ac.vityDate >= @StartDate AND p.Ac.vityDate < @EndDate AND p.Ac.vity = 'OT'),0) 
    SET @OtInterviews = ISNULL((SELECT COUNT(*) FROM #EventSubjectInt WHERE startdate >= @StartDate AND startdate < @EndDate AND Ac.vity = 'OT'),0) 
    IF @OtInterviews = 0 
    BEGIN 
  SET @OtSOE = 0 
    END 
    ELSE 
    BEGIN 
  SET @OtSOE = CEILING(cast(@OtContacts as decimal(10, 5))/@OtInterviews) 
 END 
  
 SET @TotalContacts = @TcContacts + @DcContacts + @AcContacts + @OtContacts 
     
    IF ((@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) = 0) 
    BEGIN 
  SET @TotalAverage = 0 
  SET @BPTC = 0 
  SET @BPDC = 0 
  SET @BPAC = 0 
  SET @BPOT = 0 
    END 
    ELSE 
    BEGIN 
  SET @TotalAverage = CEILING(cast(@TotalContacts as decimal(10, 5)) / (@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews)) 
  SET @BPTC = cast(@TcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
  SET @BPDC = cast(@DcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
  SET @BPAC = cast(@AcInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
  SET @BPOT = cast(@OtInterviews as decimal(10, 5))/(@TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews) 
 END 
     
    SET @CrInterviews = @TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews 
    SET @CrNWA = ISNULL((SELECT COUNT(*) FROM #ProspectNWA p WHERE p.NWA_DECLARED_DATE >= @StartDate AND p.NWA_DECLARED_DATE < @EndDate),0) 
    IF @CrNWA = 0 
    BEGIN 
  SET @ClosingRa.o = 0 
    END 
    ELSE 
    BEGIN 
  SET @ClosingRa.o = cast(@CrInterviews as decimal(10, 5)) / @CrNWA 
 END 
     
    SET @PrNWA = @CrNWA 
    SET @PrContracts = ISNULL((SELECT COUNT(*) FROM #Contracts c WHERE c.CONTRACT_BEGIN_DATE >= @StartDate AND c.CONTRACT_BEGIN_DATE < @EndDate),0) 
    IF @PrContracts = 0 
    BEGIN 
  SET @ProcessingRa.o = 0 
    END 
    ELSE 
    BEGIN 
  SET @ProcessingRa.o = cast(@PrNWA as decimal(10, 5)) / @PrContracts 
 END 
     
    SET @SrInterviews = @TcInterviews + @DcInterviews + @AcInterviews + @OtInterviews 
    SET @SrContracts = @PrContracts 
    IF @SrContracts = 0 
    BEGIN 
  SET @SalesRa.o = 0 
    END 
    ELSE 
    BEGIN 
  SET @SalesRa.o = cast(@SrInterviews as decimal(10, 5)) / @SrContracts 
 END 
      
 INSERT INTO #temp_MDA VALUES 
 ( 'Total', 
  DateAdd(month, -1, @StartDate), 
  @TcContacts, 
  @TcInterviews, 
  @TcSOE, 
  @DcContacts, 
  @DcInterviews, 
  @DcSOE, 
  @AcContacts, 
  @AcInterviews, 
  @AcSOE, 
  @OtContacts, 
  @OtInterviews, 
  @OtSOE, 
  @TotalContacts, 
  @TotalAverage, 
  @BPTC, 
  @BPDC, 
  @BPAC, 
  @BPOT, 
  @CrInterviews, 
  @CrNWA, 
  @ClosingRa.o, 
  @PrNWA, 
  @PrContracts, 
  @ProcessingRa.o, 
  @SrInterviews, 
  @SrContracts, 
  @SalesRa.o 
 ) 
  
 SELECT *  
 FROM #temp_MDA 
 ORDER BY RowDate 
  
 
 DROP TABLE #ACTIVITIES 
 DROP TABLE #Event 
 DROP TABLE #EventSubject 
    DROP TABLE #Event2 
 DROP TABLE #EventSubject2 
 DROP TABLE #EventOutcome 
 DROP TABLE #PROSPECT_DIVERSITY 
 DROP TABLE #Prospect  
    DROP TABLE #EventSubjectInt 
 DROP TABLE #Withdrawals 
    DROP TABLE #Contracts 
    DROP TABLE #temp_MDA 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>