<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetO.cerInterviewLog_RR01102013]" directorySegmentName="seg_4" id="5788776F-8992-1FA1-4A06-B586C3616258">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Organiza.onId int, 
 @RecruiterId uniqueidentifier, 
 @StartDate date.me, 
 @EndDate date.me, 
    @Disposi.on varchar(30), 
    @FirstName varchar(50), 
    @LastName varchar(50), 
    @SSN varchar(9) 
 
AS 
BEGIN 
 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 SET NOCOUNT ON 
  
 DECLARE @FollowUpEventTypeID int 
  
 DECLARE @StatusCode char(1) 
 DECLARE @Disposi.onCode varchar(29) 
  
 SET @StatusCode = LEFT(@Disposi.on, 1); 
 SET @Disposi.onCode = RIGHT(@Disposi.on, LEN(@Disposi.on)-1); 
 
 -- PAC / Follow Up 
 SELECT @FollowUpEventTypeID = ID FROM RSSOSS.USMC.EventType  
 WHERE EventSourceId = 1 AND Type = 'Follow Up' 
  
 CREATE TABLE #LastFollowUpEvent  
 ( 
  EventId uniqueidentifier, 
  StartDate date.me, 
  SubjectId uniqueidentifier 
 )  
 
 CREATE TABLE #Interviews  
 ( 
  ProspectId uniqueidentifier, 
  NwaId uniqueidentifier, 
  StartDate date.me, 
  EndDate date.me, 
  Loca.on varchar(100), 
  NextEventId uniqueidentifier, 
  NextEventDate date.me 
 ) 
 
 CREATE TABLE #InterviewLog 
 ( 
  ProspectId uniqueidentifier, 
  NwaId uniqueidentifier, 
  FirstName varchar(75), 
  LastName varchar(75), 
  HomePhone varchar(25), 
  CellPhone varchar(25), 
  StartDate date.me, 
  EndDate date.me, 
  Loca.on varchar(100), 
  DateOfBirth date.me, 
  Educa.onLevel char(2), 
  Educa.onCode char(1), 
  Source varchar(10),        
  Ac.vity varchar(10), 
  SAT1 int, 
  SAT2 int, 
  SAT3 int, 
  ACT int, 
  SchoolName varchar(60), 
  ASVAB int, 
  Program varchar(500), 
  Disposi.on varchar(40), 
  NextEventId uniqueidentifier, 
  NextEventDate date.me, 
  InterviewNoteDate date.me, 
  InterviewNote varchar(500), 
  EmailAddress varchar(100) 
 ) 
 
 DECLARE @StartDateFormated date.me 
 SET @StartDateFormated = CAST(CONVERT(varchar(4),Year(@StartDate))+ '-' +  
        CONVERT(varchar(2),Month(@StartDate)) + '-' +  
        CONVERT(varchar(2),Day(@StartDate)) as Date.me) 
         
 DECLARE @EndDateFormated date.me 
 SET @EndDateFormated = CAST(CONVERT(varchar(4),Year(@EndDate))+ '-' +  
        CONVERT(varchar(2),Month(@EndDate)) + '-' +  
        CONVERT(varchar(2),Day(@EndDate)) as Date.me) 
  
 SELECT 
  e.ID, 
  e.Loca.on, 
  e.EventTypeId, 
  e.StartDate, 
  e.EndDate, 
  e.IsApproved, 
  eo.AppointmentOutcomeId, 
  eo.InterviewOutcomeId, 
  eo.ID AS EOId, 
  et.Type, 
  eown.CreatorId, 
  s.SubjectId 
 INTO #Event 
 FROM 
 [RSSOSS].[USMC].[Event] e 
 INNER JOIN [RSSOSS].[USMC].[EventType] AS et ON e.EventTypeId = et.ID 
 INNER JOIN [RSSOSS].[USMC].[EventOutcome] AS eo ON e.ID = eo.EventId 
 INNER JOIN [RSSOSS].[USMC].[EventOwners] AS eown on eown.EventID = e.ID 
 INNER JOIN [RSSOSS].[USMC].[EventSubject] AS s on e.ID = s.EventID 
 WHERE 
 eo.AppointmentOutcomeId = 1 -- Show 
 AND (@Organiza.onId IS NOT NULL AND e.Organiza.onId = @Organiza.onId) 
 AND (eo.InterviewOutcomeId=1 or eo.InterviewOutcomeId=2) -- New Working Applicant or Follow-up 
 AND et.Type != 'Follow Up' 
 AND (@RecruiterId is null or (@Organiza.onId is not null and eown.CreatorId = @RecruiterId)) 
 AND (     
  ( @StartDate is null AND @EndDate is null) or 
  ( @StartDate is not null AND @EndDate is not null AND 
  CAST(CONVERT(varchar(4),Year(e.StartDate))+ '-' +  
        CONVERT(varchar(2),Month(e.StartDate)) + '-' +  
        CONVERT(varchar(2),Day(e.StartDate)) as Date.me) <= 
  @EndDateFormated 
      AND 
  CAST(CONVERT(varchar(4),Year(e.EndDate))+ '-' +  
        CONVERT(varchar(2),Month(e.EndDate)) + '-' +  
        CONVERT(varchar(2),Day(e.EndDate)) as Date.me) >= 
  @StartDateFormated 
   ) or 
  ( @StartDate is not null AND @EndDate is null AND  
   CAST(CONVERT(varchar(4),Year(e.EndDate))+ '-' +  
   CONVERT(varchar(2),Month(e.EndDate)) + '-' +  
   CONVERT(varchar(2),Day(e.EndDate)) as Date.me) >= 
   @StartDateFormated 
   ) or 
  ( @StartDate is null AND @EndDate is not null AND  
   CAST(CONVERT(varchar(4),Year(e.StartDate))+ '-' +  
         CONVERT(varchar(2),Month(e.StartDate)) + '-' +  
      CONVERT(varchar(2),Day(e.StartDate)) as Date.me) <= 
   @EndDateFormated 
   ) 
  ) 
  
 SELECT  
  ID, 
  StartDate, 
  EventTypeId, 
  LastUpdateDate 
 INTO #FollowUpEvent 
 FROM RSSOSS.USMC.EVENT 
 WHERE EventTypeId = @FollowUpEventTypeID 
 AND Organiza.onId = @Organiza.onID 
  
 --Populate Temp Table of all Follow Up Events 
 INSERT INTO #LastFollowUpEvent 
 SELECT  e.ID, 
    e.StartDate, 
    es.SubjectId 
 FROM [RSSOSS].[USMC].[EventSubject] es 
 INNER JOIN #FollowUpEvent e ON e.ID = es.EVENTID  
       AND e.StartDate IN ( SELECT MAX(e2.StartDate) 
             FROM [RSSOSS].[USMC].[EventSubject] es2 
             INNER JOIN #FollowUpEvent e2 ON e2.ID = es2.EventID 
                  AND e2.LastUpdateDate IN ( SELECT MAX(e3.LastUpdateDate) 
                         FROM [RSSOSS].[USMC].[EventSubject] es3 
                         INNER JOIN #FollowUpEvent e3 ON e3.ID = es3.EventID 
                         WHERE es2.SubjectID = es3.SubjectID) 
             WHERE es.SubjectID = es2.SubjectID) 
 
  
  
 INSERT INTO #Interviews 
 SELECT PR.ProspectId, 
     PR.NwaId, 
     E.StartDate, 
     E.EndDate,        
     E.Loca.on, 
     SFE.EventId, 
     SFE.StartDate 
 FROM #Event e 
 INNER JOIN Prospec.ng.USMC.Prospect PR ON e.subjectId = PR.ProspectId 
 INNER JOIN Prospec.ng.USMC.Person P ON PR.PersonId = P.PersonId 
 INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION RO ON PR.Recrui.ngOrganiza.onId = RO.rowguid 
 LEFT OUTER JOIN #LastFollowUpEvent AS SFE ON e.SubjectId = SFE.SubjectId  
 WHERE  (@Organiza.onId is null or (@Organiza.onId is not null and RO.ORGANIZATION_ID = @Organiza.onId))  
  
 -- Persons 
 SELECT 
  PersonId, 
  FirstName, 
  LastName, 
  DateOfBirth 
 INTO #Person 
 FROM Prospec.ng.USMC.Person 
 WHERE (@FirstName IS NULL OR FirstName = @FirstName) 
 AND (@LastName IS NULL OR LastName = @LastName) 
 AND (@SSN IS NULL OR SocialSecurityNumber = @SSN) 
      
 /******************/ 
 -- INSERT Prospects 
  
 -- Prospects 
 SELECT PR.ProspectId, 
    I.NwaId, 
    p.PersonId,  
    P.FirstName, 
    P.LastName, 
    I.StartDate, 
    I.EndDate,        
    I.Loca.on, 
    P.DateOfBirth, 
    pr.ProspectDisposi.onId, 
    OPP.Program, 
    PR.Source,        
    PR.Ac.vity, 
    I.NextEventId, 
    I.NextEventDate, 
    PR.SncoicNoteEnterDate as InterviewNoteDate, 
    PR.SncoicNote as InterviewNote 
 INTO #Prospect 
 FROM #Interviews I 
 INNER JOIN Prospec.ng.USMC.Prospect PR ON I.ProspectId = PR.ProspectId 
 INNER JOIN #Person P ON PR.PersonId = P.PersonId 
 LEFT OUTER JOIN Prospec.ng.USMC.O.cerProspectPac OPP on I.ProspectId = OPP.ProspectId 
       
 -- O.cer Prospect School (College) comes from Prospec.ng.USMC.ProspectSchool table. 
 SELECT DISTINCT 
   ps.ProspectSchoolId, 
   ps.ProspectId, 
   ps.SchoolId, 
   HS.HIGHSCHOOL_NAME as SchoolName,  
   ps.Educa.onLevel, 
   ps.Educa.onCode 
  INTO #ProspectSchool 
  FROM  
   Prospec.ng.USMC.ProspectSchool ps 
   INNER JOIN #Prospect pr on pr.ProspectId = ps.ProspectId 
   LEFT OUTER JOIN MCRISS.dbo.HIGH_SCHOOL HS on (ps.SchoolId=HS.rowguid) 
  WHERE ProspectSchoolTypeId = 2 
  
 -- Prospect ASVAB score 
 SELECT DISTINCT 
  asv.Score1, 
  pr.ProspectId 
 INTO #ProspectASVAB 
 FROM #Prospect pr 
 INNER JOIN Prospec.ng.USMC.ProspectProfessedExam asv ON pr.ProspectId = asv.ProspectId and asv.ProspectProfessedExamType = 'A' 
                   AND asv.ExamDate IN (SELECT MAX(asv2.ExamDate) 
                         FROM Prospec.ng.USMC.ProspectProfessedExam asv2 
                         WHERE asv2.ProspectId = pr.ProspectId  
                         AND asv2.ProspectProfessedExamType = 'A' 
                         ) 
                          
 -- Prospect SAT score 
 SELECT DISTINCT 
  sat.Score1, 
  sat.Score2, 
  sat.Score3, 
  pr.ProspectId 
 INTO #ProspectSAT 
 FROM #Prospect pr 
 INNER JOIN Prospec.ng.USMC.ProspectProfessedExam sat ON pr.ProspectId = sat.ProspectId and sat.ProspectProfessedExamType = 'S' 
                   AND sat.ExamDate IN (SELECT MAX(sat2.ExamDate) 
                         FROM Prospec.ng.USMC.ProspectProfessedExam sat2 
                         WHERE sat2.ProspectId = pr.ProspectId  
                         AND sat2.ProspectProfessedExamType = 'S' 
                         ) 
                          
 -- Prospect ACT score 
 SELECT DISTINCT 
  act.Score1, 
  pr.ProspectId 
 INTO #ProspectACT 
 FROM #Prospect pr 
 INNER JOIN Prospec.ng.USMC.ProspectProfessedExam act ON pr.ProspectId = act.ProspectId and act.ProspectProfessedExamType = 'T' 
                   AND act.ExamDate IN (SELECT MAX(act2.ExamDate) 
                         FROM Prospec.ng.USMC.ProspectProfessedExam act2 
                         WHERE act2.ProspectId = pr.ProspectId  
                         AND act2.ProspectProfessedExamType = 'T' 
                         ) 
  
 INSERT INTO #InterviewLog 
 SELECT pr.ProspectId, 
     pr.NwaId,  
     pr.FirstName, 
     pr.LastName, 
     PPH.PhoneNumber as HomePhone, 
     PPC.PhoneNumber as CellPhone, 
     pr.StartDate, 
     pr.EndDate,        
     pr.Loca.on, 
     pr.DateOfBirth, 
     PS.Educa.onLevel, 
     PS.Educa.onCode, 
     pr.Source,        
     pr.Ac.vity, 
     sat.Score1 as SAT1, 
     sat.Score2 as SAT2, 
     sat.Score3 as SAT3, 
     act.Score1 as ACT, 
     ps.SchoolName, 
     asv.Score1 as ASVAB, 
     CC.COMPONENT_DESCRIPTION, 
     PD.ProspectDisposi.onType, 
     pr.NextEventId, 
     pr.NextEventDate, 
     pr.InterviewNoteDate, 
     pr.InterviewNote, 
     PEM.EmailAddress 
 FROM #Prospect pr 
 LEFT OUTER JOIN Prospec.ng.USMC.PersonEmail PEM ON PEM.PersonId = pr.PersonId and PEM.PersonEmailTypeId = 1  
 LEFT OUTER JOIN Prospec.ng.USMC.ProspectDisposi.on PD ON pr.ProspectDisposi.onId = PD.ProspectDisposi.onId 
 LEFT OUTER JOIN Prospec.ng.USMC.PersonPhone PPH ON pr.PersonId = PPH.PersonId and PPH.PersonPhoneTypeId = 1 
 LEFT OUTER JOIN Prospec.ng.USMC.PersonPhone PPC ON pr.PersonId = PPC.PersonId and PPC.PersonPhoneTypeId = 3 
 LEFT OUTER JOIN #ProspectSchool PS on pr.ProspectId = PS.ProspectId 
 LEFT OUTER JOIN #ProspectASVAB asv ON pr.ProspectId = asv.ProspectId      
 LEFT OUTER JOIN #ProspectSAT sat ON pr.ProspectId = sat.ProspectId 
 LEFT OUTER JOIN #ProspectACT act ON pr.ProspectId = act.ProspectId 
 LEFT OUTER JOIN MCRISS.dbo.COMPONENT_CODE CC on pr.Program = CC.Component_Code 
 WHERE pr.NwaId is null  
  -- if @Disposi.on is applied, then this query should return empty set 
  AND (@Disposi.on IS NULL OR 0>1) 
 
 /*************/ 
 -- INSERT NWAs 
 
 -- NWAs 
  SELECT I.ProspectId, 
     I.NwaId,  
     P.FIRST_NAME, 
     P.LAST_NAME, 
     I.StartDate, 
     I.EndDate,        
     I.Loca.on, 
     MC.DATE_OF_BIRTH, 
     nwa.MARINE_CANDIDATE_ID, 
     nwa.NWA_ID, 
     NWA.SOURCE_CODE,        
     NWA.ACTIVITY_CODE, 
     I.NextEventId, 
     I.NextEventDate, 
     NWA.OFFICER_COMPONENT_CODE, 
     PR.SncoicNoteEnterDate as InterviewNoteDate, 
     PR.SncoicNote as InterviewNote, 
     NWA.EMAIL_ADDRESS 
 INTO #NWA 
 FROM #Interviews I 
 INNER JOIN Prospec.ng.USMC.Prospect PR ON I.ProspectId = PR.ProspectId 
 INNER JOIN MCRISS.dbo.NWA NWA ON I.NwaId = NWA.rowguid 
 INNER JOIN MCRISS.dbo.Person P ON NWA.MARINE_CANDIDATE_ID = P.PERSON_ID 
 INNER JOIN MCRISS.dbo.MARINE_CANDIDATE MC ON NWA.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID 
 WHERE I.NwaId is not null 
  AND (@FirstName IS NULL OR P.First_Name = @FirstName) 
  AND (@LastName IS NULL OR P.Last_Name = @LastName) 
  AND (@SSN IS NULL OR p.SOCIAL_SECURITY_NUMBER = @SSN) 
  
 -- NWA Candidate Status  
 SELECT DISTINCT 
  cs.NWA_ID, 
  cs.STATUS_TYPE, 
  cs.STATUS_CODE, 
  cs.DISPOSITION_CODE 
 INTO #NWACandidateStatus 
 FROM MCRISS.dbo.CANDIDATE_STATUS cs 
 INNER JOIN #NWA nwa ON nwa.NWA_ID = cs.NWA_ID 
      AND cs.CANDIDATE_STATUS_ID in (SELECT MAX(cs2.CANDIDATE_STATUS_ID)  
                 FROM MCRISS.dbo.CANDIDATE_STATUS cs2 
                 WHERE cs2.NWA_ID = nwa.NWA_ID) 
 -- NWA Educa.on                 
 SELECT DISTINCT 
  ce.MARINE_CANDIDATE_ID, 
  ce.EDUCATION_LEVEL, 
  ce.EDUCATION_CODE, 
  hs.HIGHSCHOOL_NAME 
 INTO #NWAEduca.on 
 FROM #NWA nwa 
 INNER JOIN MCRISS.dbo.CANDIDATE_EDUCATION ce ON nwa.MARINE_CANDIDATE_ID = ce.MARINE_CANDIDATE_ID 
             AND ce.SCHOOL_END_DATE = ( SELECT MAX(ce2.SCHOOL_END_DATE)  
                   FROM MCRISS.dbo.CANDIDATE_EDUCATION ce2 
                   WHERE ce2.MARINE_CANDIDATE_ID = nwa.MARINE_CANDIDATE_ID) 
 INNER JOIN MCRISS.dbo.HIGH_SCHOOL hs ON ce.SCHOOL_CODE = hs.SCHOOL_CODE 
 
    -- NWA ASVAB 
 SELECT DISTINCT 
  asv.AFQT_SCORE, 
  asv.MARINE_CANDIDATE_ID 
 INTO #NWAASVAB 
 FROM #NWA nwa 
 INNER JOIN MCRISS.dbo.CANDIDATE_ASVAB asv ON asv.MARINE_CANDIDATE_ID = nwa.MARINE_CANDIDATE_ID 
             AND asv.ASVAB_DATE IN (SELECT MAX(asv2.ASVAB_DATE) 
                  FROM MCRISS.dbo.CANDIDATE_ASVAB asv2 
                  WHERE asv2.MARINE_CANDIDATE_ID = nwa.MARINE_CANDIDATE_ID) 
  
  
 INSERT INTO #InterviewLog 
 SELECT nwa.ProspectId, 
     nwa.NwaId,  
     nwa.FIRST_NAME, 
     nwa.LAST_NAME, 
     PPH.AREA_CODE + PPH.TELEPHONE_NUMBER as HomePhone, 
     PPH.AREA_CODE + PPC.TELEPHONE_NUMBER as CellPhone, 
     nwa.StartDate, 
     nwa.EndDate,        
     nwa.Loca.on, 
     nwa.DATE_OF_BIRTH, 
     CE.EDUCATION_LEVEL, 
     CE.EDUCATION_CODE, 
     NWA.SOURCE_CODE,        
     NWA.ACTIVITY_CODE, 
     NULL, --SAT1 
     NULL, --SAT2 
     NULL, --SAT3 
     NULL, --ACT 
     ce.HIGHSCHOOL_NAME, 
     asv.AFQT_SCORE, --ASVAB 
     CC.COMPONENT_DESCRIPTION, 
     SD.DISPOSITION_DESCRIPTION, 
     nwa.NextEventId, 
     nwa.NextEventDate, 
     nwa.InterviewNoteDate, 
     nwa.InterviewNote, 
     NWA.EMAIL_ADDRESS 
 FROM #NWA nwa  
 INNER JOIN #NWACandidateStatus cs ON nwa.NWA_ID = CS.NWA_ID  
 INNER JOIN MCRISS.dbo.STATUS_DISPOSITION SD ON (CS.STATUS_TYPE = SD.STATUS_TYPE and  
               CS.STATUS_CODE = SD.STATUS_CODE and 
               CS.DISPOSITION_CODE = SD.DISPOSITION_CODE) 
 LEFT OUTER JOIN MCRISS.dbo.CANDIDATE_TELEPHONE PPH ON NWA.MARINE_CANDIDATE_ID = PPH.MARINE_CANDIDATE_ID and PPH.TELEPHONE_TYPE = 'C' 
 LEFT OUTER JOIN MCRISS.dbo.CANDIDATE_TELEPHONE PPC ON NWA.MARINE_CANDIDATE_ID = PPC.MARINE_CANDIDATE_ID and PPC.TELEPHONE_TYPE = 'L' 
 LEFT OUTER JOIN #NWAEduca.on CE ON NWA.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID 
 LEFT OUTER JOIN #NWAASVAB asv ON NWA.MARINE_CANDIDATE_ID = asv.MARINE_CANDIDATE_ID 
 LEFT OUTER JOIN MCRISS.dbo.COMPONENT_CODE CC ON nwa.OFFICER_COMPONENT_CODE = CC.COMPONENT_CODE 
 WHERE (@Disposi.on IS NULL OR (CS.STATUS_CODE = @StatusCode AND CS.DISPOSITION_CODE = @Disposi.onCode))  
 
 SELECT * FROM #InterviewLog 
 
 DROP TABLE #Event 
 DROP TABLE #FollowUpEvent 
    DROP TABLE #LastFollowUpEvent 
    DROP TABLE #Person 
    DROP TABLE #Prospect 
    DROP TABLE #ProspectSchool 
    DROP TABLE #ProspectASVAB 
    DROP TABLE #ProspectSAT 
 DROP TABLE #ProspectACT 
    DROP TABLE #NWA 
    DROP TABLE #NWACandidateStatus 
    DROP TABLE #NWAEduca.on 
    DROP TABLE #NWAASVAB 
    
 DROP TABLE #Interviews 
 DROP TABLE #InterviewLog 
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>