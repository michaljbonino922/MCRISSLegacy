<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetProspec.ngActDailyReport]" directorySegmentName="seg_8" id="36177A01-D57F-B791-49F8-3D287F204B3F">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Organiza.onID as integer, 
 @MonthBeginDate as date.me, 
 @MonthEndDate as date.me = NULL 
AS 
 
SET ArithAbort ON 
SET NOCOUNT ON 
 
DECLARE @Organiza.onType as Varchar(3) 
 
SET @Organiza.onID = COALESCE(@Organiza.onID, 900) 
SET @Organiza.onType = (SELECT ORGANIZATION_TYPE FROM RECRUITING_ORGANIZATION WITH (NOLOCK) WHERE ORGANIZATION_ID = @Organiza.onID) 
 
SELECT * INTO #SUBORGS FROM usmc.GetOrgHierarchy(@Organiza.onID) 
 
SET @MonthEndDate = COALESCE(@MonthEndDate, CONVERT(VARCHAR(11), DATEADD(DAY, -1, DATEADD(MONTH, 1, @MonthBeginDate)), 106)) 
 
 
SELECT  
 n.NWA_ID, n.MARINE_CANDIDATE_ID, n.ORGANIZATION_OF_RECORD_ID, n.EDUCATION_LEVEL, n.EDUCATION_CODE, mc.Gender_Code  
INTO #Nwa 
FROM 
 #SUBORGS SO 
 INNER JOIN NWA N ON 
  ( 
  SO.ORG_ID = N.ORGANIZATION_OF_RECORD_ID  
  AND 
  n.nwa_id NOT IN (select nwa_id FROM dbo.CANDIDATE_STATUS c where c.nwa_id=n.nwa_id AND c.disposi.on_code = 'PA' and c.status_e.ec.ve_date = (select max(cs.status_e.ec.ve_date) from candidate_status cs where cs.nwa_id = n.nwa_id))  
  AND 
  N.EDUCATION_LEVEL IS NOT NULL  
  AND 
  N.EDUCATION_CODE IS NOT NULL 
  ) 
 INNER JOIN [dbo].[MARINE_CANDIDATE] mc ON mc.MARINE_CANDIDATE_ID = n.MARINE_CANDIDATE_ID 
 INNER JOIN MIContract mi ON 
  (mi.NWA_ID = N.NWA_ID AND 
   DATEDIFF(DAY, @MonthBeginDate, mi.contract_begin_date) >= 0 AND 
   DATEDIFF(DAY, mi.contract_begin_date, @MonthEndDate) >= 0) 
   LEFT JOIN Contract C on (C.NWA_ID = N.NWA_ID AND 
   C.CONTRACT_ID IS NOT NULL) 
WHERE 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 SO.ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
 
-- records created as a result of a Component Code change. 
SELECT DISTINCT n.NWA_ID 
INTO #NwaZkc 
FROM  
 #Nwa N  
 INNER JOIN MCRISS.dbo.NWA N_OLD  
  ON N_OLD.MARINE_CANDIDATE_ID = N.MARINE_CANDIDATE_ID  
   AND N_OLD.NWA_ID = (SELECT MAX(N2.NWA_ID)  
         FROM NWA N2  
         WHERE N2.NWA_ID < N.Nwa_ID  
         AND N.MARINE_CANDIDATE_ID = N2.MARINE_CANDIDATE_ID) 
 INNER JOIN MCRISS.dbo.CONTRACT C_OLD  
  ON C_OLD.NWA_ID = N_OLD.NWA_ID 
WHERE  
 C_OLD.DISCHARGE_CODE = 'ZKC' 
 AND N_OLD.NWA_ID < N.Nwa_ID 
  
-- Component Code is no longer excluded 
--DELETE FROM #Nwa WHERE NWA_ID IN (SELECT NWA_ID FROM #NwaZkc) 
  
 
--- CONTRACT ACTIVITY DATA  
SELECT  
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_ID 
  WHEN 'R' THEN SO.DIST_ID 
  WHEN 'D' THEN SO.RS_ID 
  WHEN 'RS' THEN SO.RSS_ID 
 END AS ORGANIZATION_ID, 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_SHORT_NAME 
  WHEN 'R' THEN SO.DIST_SHORT_NAME 
  WHEN 'D' THEN SO.RS_SHORT_NAME 
  WHEN 'RS' THEN SO.RSS_SHORT_NAME 
 END AS SHORT_NAME, 
 --mi.contract_begin_date AS ACTIVITY_DATE, 
 CAST(CAST(mi.contract_begin_date AS date) AS DATETIME) AS ACTIVITY_DATE, 
 ACTIVITY_TYPE = 1, 
 SUM(CASE (N.EDUCATION_LEVEL + N.EDUCATION_CODE) 
  WHEN '11S' THEN 0 
  WHEN '11M' THEN 0 
  WHEN '11H' THEN 0 
  ELSE 1 
  END) AS GRAD_ACTIVITY_COUNT, 
 SUM(CASE (N.EDUCATION_LEVEL + N.EDUCATION_CODE) 
  WHEN '11S' THEN 1 
  WHEN '11M' THEN 1 
  WHEN '11H' THEN 1 
  ELSE 0 
  END) AS SENIOR_ACTIVITY_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11S' THEN 0 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11M' THEN 0 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11H' THEN 0 
  WHEN Gender_Code = 'M' THEN 1 
  END), 0) as GRAD_ACTIVITY_MALE_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11S' THEN 0 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11M' THEN 0 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11H' THEN 0 
  WHEN Gender_Code = 'F' THEN 1 
  END), 0) as GRAD_ACTIVITY_FEMALE_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11S' AND Gender_Code = 'M'  THEN 1 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11M' AND Gender_Code = 'M'  THEN 1 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11H' AND Gender_Code = 'M'  THEN 1 
  ELSE 0 
  END), 0) as SENIOR_ACTIVITY_MALE_COUNT, 
 COALESCE(SUM(CASE  
     WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11S' AND Gender_Code = 'F'  THEN 1 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11M' AND Gender_Code = 'F'  THEN 1 
  WHEN (N.EDUCATION_LEVEL + N.EDUCATION_CODE) = '11H' AND Gender_Code = 'F'  THEN 1 
  ELSE 0 
  END), 0) as SENIOR_ACTIVITY_FEMALE_COUNT 
INTO 
 #CAI_REPORT 
FROM 
 #SUBORGS SO 
 LEFT OUTER JOIN #Nwa N ON 
  ( 
  SO.ORG_ID = N.ORGANIZATION_OF_RECORD_ID  
  AND 
  n.nwa_id NOT IN (select nwa_id FROM dbo.CANDIDATE_STATUS c where c.nwa_id=n.nwa_id AND c.disposi.on_code = 'PA' and c.status_e.ec.ve_date = (select max(cs.status_e.ec.ve_date) from candidate_status cs where cs.nwa_id = n.nwa_id))  
  AND 
  N.EDUCATION_LEVEL IS NOT NULL  
  AND 
  N.EDUCATION_CODE IS NOT NULL 
  ) 
 LEFT OUTER JOIN MIContract mi ON 
  (mi.NWA_ID = N.NWA_ID AND 
   DATEDIFF(DAY, @MonthBeginDate, mi.contract_begin_date) >= 0 AND 
   DATEDIFF(DAY, mi.contract_begin_date, @MonthEndDate) >= 0) 
   LEFT JOIN Contract C on (C.NWA_ID = N.NWA_ID AND 
   C.CONTRACT_ID IS NOT NULL) 
WHERE 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 SO.ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
GROUP BY  
 SO.ORG_ID, SHORT_NAME, mi.contract_begin_date, SO.REG_ID, SO.REG_SHORT_NAME, SO.DIST_ID, SO.DIST_SHORT_NAME, 
 SO.RS_ID, SO.RS_SHORT_NAME, SO.RSS_ID, SO.RSS_SHORT_NAME 
 
--- NWA ACTIVITY DATA 
SELECT  
 n.NWA_ID, n.MARINE_CANDIDATE_ID, n.ORGANIZATION_OF_RECORD_ID, n.NWA_DECLARED_DATE,  mc.Gender_Code 
INTO #Nwa2  
FROM 
 #SUBORGS SO 
 INNER JOIN NWA N ON 
  ( 
  SO.ORG_ID = N.ORGANIZATION_OF_RECORD_ID  
  AND 
  DATEDIFF(DAY, @MonthBeginDate, N.NWA_DECLARED_DATE) >= 0 AND DATEDIFF(DAY, N.NWA_DECLARED_DATE, @MonthEndDate) >= 0  
  AND 
  n.nwa_id NOT IN (select nwa_id FROM dbo.CANDIDATE_STATUS c where c.nwa_id=n.nwa_id AND c.disposi.on_code = 'PA' and c.status_e.ec.ve_date = (select max(cs.status_e.ec.ve_date) from candidate_status cs where cs.nwa_id = n.nwa_id))  
  ) 
 INNER JOIN [dbo].[MARINE_CANDIDATE] mc ON mc.MARINE_CANDIDATE_ID = n.MARINE_CANDIDATE_ID 
WHERE 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 SO.ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
 
-- records created as a result of a Component Code change. 
SELECT DISTINCT n.NWA_ID 
INTO #NwaZkc2 
FROM  
 #Nwa2 N  
 INNER JOIN MCRISS.dbo.NWA N_OLD  
  ON N_OLD.MARINE_CANDIDATE_ID = N.MARINE_CANDIDATE_ID  
   AND N_OLD.NWA_ID = (SELECT MAX(N2.NWA_ID)  
         FROM NWA N2  
         WHERE N2.NWA_ID < N.Nwa_ID  
         AND N.MARINE_CANDIDATE_ID = N2.MARINE_CANDIDATE_ID) 
 INNER JOIN MCRISS.dbo.CONTRACT C_OLD  
  ON C_OLD.NWA_ID = N_OLD.NWA_ID 
WHERE  
 C_OLD.DISCHARGE_CODE = 'ZKC' 
 AND N_OLD.NWA_ID < N.Nwa_ID 
  
-- Component Code is no longer excluded 
--DELETE FROM #Nwa2 WHERE NWA_ID IN (SELECT NWA_ID FROM #NwaZkc2) 
   
INSERT INTO 
 #CAI_REPORT(ORGANIZATION_ID, SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE, GRAD_ACTIVITY_COUNT, SENIOR_ACTIVITY_COUNT, GRAD_ACTIVITY_MALE_COUNT, GRAD_ACTIVITY_FEMALE_COUNT, SENIOR_ACTIVITY_MALE_COUNT, SENIOR_ACTIVITY_FEMALE_COUNT) 
SELECT 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_ID 
  WHEN 'R' THEN SO.DIST_ID 
  WHEN 'D' THEN SO.RS_ID 
  WHEN 'RS' THEN SO.RSS_ID 
 END AS ORGANIZATION_ID, 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_SHORT_NAME 
  WHEN 'R' THEN SO.DIST_SHORT_NAME 
  WHEN 'D' THEN SO.RS_SHORT_NAME 
  WHEN 'RS' THEN SO.RSS_SHORT_NAME 
 END AS SHORT_NAME, 
 --N.NWA_DECLARED_DATE AS ACTIVITY_DATE, 
 CAST(CAST(N.NWA_DECLARED_DATE AS DATE) AS DATETIME) AS ACTIVITY_DATE, 
 ACTIVITY_TYPE = 2, 
 SUM(CASE (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) 
  WHEN '11S' THEN 0 
  WHEN '11M' THEN 0 
  WHEN '11H' THEN 0 
  ELSE 1 
  END) AS GRAD_ACTIVITY_COUNT, 
 SUM(CASE (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) 
  WHEN '11S' THEN 1 
  WHEN '11M' THEN 1 
  WHEN '11H' THEN 1 
  ELSE 0 
  END) AS SENIOR_ACTIVITY_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11S' THEN 0 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11M' THEN 0 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11H' THEN 0 
  WHEN Gender_Code = 'M' THEN 1 
  END), 0) as GRAD_ACTIVITY_MALE_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11S' THEN 0 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11M' THEN 0 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11H' THEN 0 
  WHEN Gender_Code = 'F' THEN 1 
  END), 0) as GRAD_ACTIVITY_FEMALE_COUNT, 
 COALESCE(SUM(CASE  
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11S' AND Gender_Code = 'M'  THEN 1 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11M' AND Gender_Code = 'M'  THEN 1 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11H' AND Gender_Code = 'M'  THEN 1 
  ELSE 0 
  END), 0) as SENIOR_ACTIVITY_MALE_COUNT, 
 COALESCE(SUM(CASE  
     WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11S' AND Gender_Code = 'F'  THEN 1 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11M' AND Gender_Code = 'F'  THEN 1 
  WHEN (CE.EDUCATION_LEVEL + CE.EDUCATION_CODE) = '11H' AND Gender_Code = 'F'  THEN 1 
  ELSE 0 
  END), 0) as SENIOR_ACTIVITY_FEMALE_COUNT 
FROM 
 #SUBORGS SO 
 LEFT OUTER JOIN #Nwa2 N ON 
  ( 
  SO.ORG_ID = N.ORGANIZATION_OF_RECORD_ID  
  AND 
  DATEDIFF(DAY, @MonthBeginDate, N.NWA_DECLARED_DATE) >= 0 AND DATEDIFF(DAY, N.NWA_DECLARED_DATE, @MonthEndDate) >= 0  
  AND 
  n.nwa_id NOT IN (select nwa_id FROM dbo.CANDIDATE_STATUS c where c.nwa_id=n.nwa_id AND c.disposi.on_code = 'PA' and c.status_e.ec.ve_date = (select max(cs.status_e.ec.ve_date) from candidate_status cs where cs.nwa_id = n.nwa_id))  
  ) 
 LEFT OUTER JOIN CANDIDATE_EDUCATION CE ON 
  (N.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID AND 
  CE.EDUCATION_LEVEL IS NOT NULL AND 
  CE.EDUCATION_CODE IS NOT NULL) 
WHERE 
 CE.SCHOOL_END_DATE = dbo.GetMaxSchoolEndDate(N.MARINE_CANDIDATE_ID) AND 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 SO.ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
GROUP BY 
 SO.ORG_ID, SHORT_NAME, NWA_DECLARED_DATE, 
 SO.REG_ID, SO.REG_SHORT_NAME, SO.DIST_ID, SO.DIST_SHORT_NAME, 
 SO.RS_ID, SO.RS_SHORT_NAME, SO.RSS_ID, SO.RSS_SHORT_NAME 
 
--- INTERVIEW ACTIVITY DATA 
INSERT INTO 
 #CAI_REPORT(ORGANIZATION_ID, SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE, GRAD_ACTIVITY_COUNT, SENIOR_ACTIVITY_COUNT, GRAD_ACTIVITY_MALE_COUNT, GRAD_ACTIVITY_FEMALE_COUNT, SENIOR_ACTIVITY_MALE_COUNT, SENIOR_ACTIVITY_FEMALE_COUNT) 
SELECT   
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_ID 
  WHEN 'R' THEN SO.DIST_ID 
  WHEN 'D' THEN SO.RS_ID 
  WHEN 'RS' THEN SO.RSS_ID 
 END AS ORGANIZATION_ID, 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_SHORT_NAME 
  WHEN 'R' THEN SO.DIST_SHORT_NAME 
  WHEN 'D' THEN SO.RS_SHORT_NAME 
  WHEN 'RS' THEN SO.RSS_SHORT_NAME 
 END AS SHORT_NAME, 
 --COALESCE(RAGS.ACTIVITY_DATE, @MonthBeginDate) AS ACTIVITY_DATE, 
 COALESCE(CAST(CAST(RAGS.ACTIVITY_DATE AS DATE) AS DATETIME), @MonthBeginDate) AS ACTIVITY_DATE, 
 ACTIVITY_TYPE = 3,   
 COALESCE((RAGS.GRAD_INTERVIEWS), 0) AS GRAD_ACTIVITY_COUNT, 
 COALESCE((RAGS.SENIOR_INTERVIEWS), 0) AS SENIOR_ACTIVITY_COUNT, 
 COALESCE((RAGS.GRAD_MALE_INTERVIEWS), 0) AS GRAD_ACTIVITY_MALE_COUNT, 
 COALESCE((RAGS.GRAD_FEMALE_INTERVIEWS), 0) AS GRAD_ACTIVITY_FEMALE_COUNT, 
 COALESCE((RAGS.SENIOR_MALE_INTERVIEWS), 0) AS SENIOR_ACTIVITY_MALE_COUNT, 
 COALESCE((RAGS.SENIOR_FEMALE_INTERVIEWS), 0) AS SENIOR_ACTIVITY_FEMALE_COUNT 
FROM 
 #SUBORGS SO 
 LEFT OUTER JOIN RSS_ACTIVITY_GRAD_SENIOR RAGS ON 
  (SO.ORG_ID = RAGS.ORGANIZATION_ID AND 
  DATEDIFF(DAY, @MonthBeginDate, RAGS.ACTIVITY_DATE) >= 0 AND 
  DATEDIFF(DAY, RAGS.ACTIVITY_DATE, @MonthEndDate) >= 0) 
WHERE 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 SO.ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
 
--- APPOINTMENTS ACTIVITY DATA 
INSERT INTO 
 #CAI_REPORT(ORGANIZATION_ID, SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE, GRAD_ACTIVITY_COUNT, SENIOR_ACTIVITY_COUNT, GRAD_ACTIVITY_MALE_COUNT, GRAD_ACTIVITY_FEMALE_COUNT, SENIOR_ACTIVITY_MALE_COUNT, SENIOR_ACTIVITY_FEMALE_COUNT) 
SELECT 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_ID 
  WHEN 'R' THEN SO.DIST_ID 
  WHEN 'D' THEN SO.RS_ID 
  WHEN 'RS' THEN SO.RSS_ID 
 END AS ORGANIZATION_ID, 
 CASE @Organiza.onType 
  WHEN 'H' THEN SO.REG_SHORT_NAME 
  WHEN 'R' THEN SO.DIST_SHORT_NAME 
  WHEN 'D' THEN SO.RS_SHORT_NAME 
  WHEN 'RS' THEN SO.RSS_SHORT_NAME 
 END AS SHORT_NAME, 
 --COALESCE(RAGS.ACTIVITY_DATE, @MonthBeginDate) AS ACTIVITY_DATE, 
 COALESCE(CAST(CAST(RAGS.ACTIVITY_DATE AS DATE) AS DATETIME), @MonthBeginDate) AS ACTIVITY_DATE, 
 ACTIVITY_TYPE = 4, 
 COALESCE((RAGS.GRAD_APPOINTMENTS), 0) AS GRAD_ACTIVITY_COUNT, 
 COALESCE((RAGS.SENIOR_APPOINTMENTS), 0) AS SENIOR_ACTIVITY_COUNT, 
 COALESCE((RAGS.GRAD_MALE_APPOINTMENTS), 0) AS GRAD_ACTIVITY_MALE_COUNT, 
 COALESCE((RAGS.GRAD_FEMALE_APPOINTMENTS), 0) AS GRAD_ACTIVITY_FEMALE_COUNT, 
 COALESCE((RAGS.SENIOR_MALE_APPOINTMENTS), 0) AS SENIOR_ACTIVITY_MALE_COUNT, 
 COALESCE((RAGS.SENIOR_FEMALE_APPOINTMENTS), 0) AS SENIOR_ACTIVITY_FEMALE_COUNT 
FROM 
 #SUBORGS SO 
 LEFT OUTER JOIN RSS_ACTIVITY_GRAD_SENIOR RAGS ON 
  (SO.ORG_ID = RAGS.ORGANIZATION_ID AND 
  DATEDIFF(DAY, @MonthBeginDate, RAGS.ACTIVITY_DATE) >= 0 AND 
  DATEDIFF(DAY, RAGS.ACTIVITY_DATE, @MonthEndDate) >= 0) 
WHERE 
 DATEDIFF(MONTH, SO.EFFECTIVE_DATE, @MonthBeginDate) >= 0 AND 
 ORG_TYPE = 'RSS' AND 
 @Organiza.onID = CASE @Organiza.onType 
    WHEN 'H' THEN @Organiza.onID 
    WHEN 'R' THEN SO.REG_ID 
    WHEN 'D' THEN SO.DIST_ID 
    WHEN 'RS' THEN SO.RS_ID 
     END 
 
SELECT ORGANIZATION_ID, SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE, SUM(GRAD_ACTIVITY_COUNT) AS GRAD_ACTIVITY_COUNT, SUM(SENIOR_ACTIVITY_COUNT) AS SENIOR_ACTIVITY_COUNT 
 ,SUM(GRAD_ACTIVITY_MALE_COUNT) AS GRAD_ACTIVITY_MALE_COUNT 
 ,SUM(GRAD_ACTIVITY_FEMALE_COUNT) AS GRAD_ACTIVITY_FEMALE_COUNT 
 ,SUM(SENIOR_ACTIVITY_MALE_COUNT) AS SENIOR_ACTIVITY_MALE_COUNT 
 ,SUM(SENIOR_ACTIVITY_FEMALE_COUNT) AS SENIOR_ACTIVITY_FEMALE_COUNT 
 FROM #CAI_REPORT WHERE ACTIVITY_DATE IS NOT NULL GROUP BY ORGANIZATION_ID, SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE ORDER BY SHORT_NAME, ACTIVITY_DATE, ACTIVITY_TYPE 
 
-- CLEAN UP 
DROP TABLE #CAI_REPORT 
DROP TABLE #SUBORGS 
DROP TABLE #Nwa 
DROP TABLE #NwaZkc 
DROP TABLE #Nwa2 
DROP TABLE #NwaZkc2 
 
SET NOCOUNT OFF]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>