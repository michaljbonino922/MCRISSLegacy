<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetPreviousFYMission]" directorySegmentName="seg_8" id="2301E78D-8DEB-15A0-DCF7-2C756B42CBE7">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Organiza.onID     int,  
 @FiscalYear   int 
  
AS 
SET NOCOUNT ON 
DECLARE @Organiza.onType varchar(3) 
DECLARE @ChildOrgType varchar(3) 
 
 
SELECT  @Organiza.onType = Organiza.on_Type from recrui.ng_organiza.on RO 
        where RO.Organiza.on_ID = @Organiza.onID 
  
 
 
SET @ChildOrgType = CASE @Organiza.onType 
   WHEN 'H' THEN 'R' 
   WHEN 'R' THEN 'D' 
   WHEN 'D' THEN 'RS' 
   WHEN 'RS' THEN 'OSS' 
   ELSE 'OSS' 
   END 
 
 
CREATE TABLE #ORG  
( 
ORG_ID INT,  
SHORT_NAME varchar(15), 
-- the sp GetChildOrg does not return the name column 
--NAME varchar(45),  
ORG_TYPE varchar(3) DEFAULT 'D' 
) 
 
 
-- need to verify if the case for child organiza.on id is needed 
/*IF @Organiza.onType IN ('H', 'R', 'D', 'RS') 
BEGIN 
 --- GET CHILD ORGS 
 --INSERT INTO #ORG 
 --EXEC sp_GetChildOrgs @Organiza.onID, @ChildOrgType 
 
END */ 
 
-- .x this if condi.on based on the above scenerio for non-oss organiza.ons 
--IF @Organiza.onType = 'OSS' 
BEGIN 
 --- INSERT ONLY THE ORG ID 
 INSERT INTO #ORG (ORG_ID) VALUES (@Organiza.onID) 
END 
 
/****************************************************************************************** 
MISSION FOR PLC 
*******************************************************************************************/ 
(SELECT  
   
    [FISCAL_YEAR] AS FiscalYear, [OFFICER_SOURCE_CODE] AS O.cerSourceCode, 
    0 AS OCCClassNumber, -- this should be 0 in case or PLC 
    [GRAD_YEAR] AS MissionYear, 
       
       CASE  
        WHEN GRAD_YEAR = @FiscalYear + 1  Then  1  
        WHEN GRAD_YEAR = @FiscalYear + 2  Then  2  
        WHEN GRAD_YEAR = @FiscalYear + 3  Then  3 
        --there should be only three consecu.ve mission years for a .scal years.  
        -- all other records should be ignored and they are ignored in the where clause below 
   END AS DataTableNum, 
    
   [GRAD_YEAR] AS GradYear,  
 
--   mcc.component_code AS ComponentCode, 
   case 
    when ComponentDescrip.on in ('LAW1','LAW2','LAW3') then 'LAW' 
    when ComponentDescrip.on in ('NAVAL_AIR') then 'AIR' 
    else ComponentDescrip.on 
   end AS ComponentCode, 
   case  
    when ComponentDescrip.on in ('LAW1','LAW2','LAW3') then 'LAW' 
    when ComponentDescrip.on in ('NAVAL_AIR') then 'AIR' 
    else ComponentDescrip.on 
   end as ComponentAbbrevia.on, 
   --mcc.component_descrip.on AS ComponentAbbrevia.on, 
   ComponentDescrip.on,  
    
     NumMission 
      FROM   (SELECT OMP.[FISCAL_YEAR], [OFFICER_SOURCE_CODE], [OCC_CLASS_NUMBER], 
      [GRAD_YEAR],[GROUND_MISSION] AS GROUND,[NFO_MISSION] AS NFO, 
       
      [NAVAL_AIR_MISSION] AS NAVAL_AIR , 
      [OCCR_GROUND_MISSION] AS OCCR_GROUND,[BLACK_MISSION] AS AA,  
      [HISPANIC_MISSION] AS HISPANIC, [OTHER_MISSION] AS OTHER, 
      [FEMALE_MISSION] AS FEMALE ,[LAW1_MISSION] AS LAW1 ,[LAW2_MISSION] AS LAW2 , 
                 [LAW3_MISSION] AS LAW3 
       
 
           FROM --OFFICER_SHIP_MISSION_PLAN omp 
           RECRUITING_ORGANIZATION RO INNER JOIN #ORG O ON RO.ORGANIZATION_ID = O.ORG_ID 
      INNER JOIN OFFICER_SHIP_MISSION_PLAN OMP ON 
      (RO.ORGANIZATION_ID = OMP.ORGANIZATION_ID  
        AND OMP.FISCAL_YEAR = @FiscalYear 
        AND OMP.OFFICER_SOURCE_CODE = 'PLC') 
   
) p 
 
UNPIVOT  
   (NumMission for ComponentDescrip.on IN ([GROUND],[NFO] ,[NAVAL_AIR], 
              [OCCR_GROUND], [AA],[HISPANIC] 
              ,[OTHER],[FEMALE] ,[LAW1]) 
   ) As unpvt) 
     
   -- might need this join 
   --le. outer join usmc.mission_component_code  mcc on (mcc.Component_Descrip.on = unpvt.componentDescrip.on 
                 --and mcc.Component_Code  not  like '1%') 
 
 
--   ORDER BY ComponentDescrip.on, GRAD_YEAR) 
   --ORDER BY ComponentCode, GRAD_YEAR 
UNION 
 
/****************************************************************************************** 
MISSION FOR OCC 
*******************************************************************************************/ 
 
 
(SELECT  
   
   [FISCAL_YEAR] AS FiscalYear, [OFFICER_SOURCE_CODE] AS O.cerSourceCode, 
    [OCC_CLASS_NUMBER] AS OCCClassNumber,  
    0 AS MissionYear, 
      
 
  CASE 
   WHEN  [OCC_CLASS_NUMBER]  = (SELECT MIN (OC.CLASS_NUMBER) FROM OCS_CLASS OC WHERE OC.FISCAL_YEAR =  @FiscalYear and TRAINING_TYPE_CODE = 'OCC') THEN 1 
   WHEN [OCC_CLASS_NUMBER]  = ( SELECT MAX (OC.CLASS_NUMBER) FROM OCS_CLASS OC WHERE OC.FISCAL_YEAR = @FiscalYear and TRAINING_TYPE_CODE = 'OCC') THEN 3 
   WHEN  [OCC_CLASS_NUMBER] > (SELECT MIN (OC.CLASS_NUMBER) FROM OCS_CLASS OC WHERE OC.FISCAL_YEAR =  @FiscalYear and TRAINING_TYPE_CODE = 'OCC')  
          AND  [OCC_CLASS_NUMBER]  < (SELECT MAX (OC.CLASS_NUMBER) FROM OCS_CLASS OC  
          WHERE OC.FISCAL_YEAR = @FiscalYear and TRAINING_TYPE_CODE = 'OCC') THEN 2 
  -- ELSE there should be no else 
  END AS DataTableNum, 
  [GRAD_YEAR] AS GradYear, 
 
    --mcc.component_code AS ComponentCode, 
    case 
    when ComponentDescrip.on in ('LAW1','LAW2','LAW3') then 'LAW' 
    when ComponentDescrip.on in ('NAVAL_AIR') then 'AIR' 
    else ComponentDescrip.on 
   end AS ComponentCode, 
   case  
    when ComponentDescrip.on in ('LAW1','LAW2','LAW3') then 'LAW' 
    when ComponentDescrip.on in ('NAVAL_AIR') then 'AIR' 
    else ComponentDescrip.on 
   end as ComponentAbbrevia.on, 
   --mcc.component_descrip.on AS ComponentAbbrevia.on, 
    ComponentDescrip.on,NumMission 
    FROM   (SELECT OMP.[FISCAL_YEAR], [OFFICER_SOURCE_CODE], [OCC_CLASS_NUMBER], 
      [GRAD_YEAR],[GROUND_MISSION] AS GROUND,[NFO_MISSION] AS NFO, 
      [NAVAL_AIR_MISSION] AS NAVAL_AIR ,[BLACK_MISSION] AS AA,  
      [HISPANIC_MISSION] AS HISPANIC , [OTHER_MISSION] AS OTHER, 
      [FEMALE_MISSION] AS FEMALE ,[LAW1_MISSION] AS LAW1, 
      [LAW2_MISSION] AS LAW2, [LAW3_MISSION] AS LAW3, 
      [OCCR_GROUND_MISSION] AS OCCR_GROUND 
         FROM --OFFICER_SHIP_MISSION_PLAN omp 
         RECRUITING_ORGANIZATION RO INNER JOIN #ORG O ON RO.ORGANIZATION_ID = O.ORG_ID 
    INNER JOIN OFFICER_SHIP_MISSION_PLAN OMP ON 
    (RO.ORGANIZATION_ID = OMP.ORGANIZATION_ID  
    --AND OMP.FISCAL_YEAR = @FiscalYear 
    AND OMP.OFFICER_SOURCE_CODE = 'OCC') 
    INNER JOIN OCS_CLASS OC ON OC.CLASS_NUMBER = OMP.OCC_CLASS_NUMBER AND OC.FISCAL_YEAR = @FiscalYear  
  
) p 
 
UNPIVOT  
   (NumMission for ComponentDescrip.on IN ( [GROUND] ,[NFO] ,[NAVAL_AIR] ,[AA], [HISPANIC] 
            ,[OTHER] ,[FEMALE] ,[LAW1],[OCCR_GROUND]) 
   ) As unpvt ) 
   -- might need this join 
   --le. outer join usmc.mission_component_code  mcc on (mcc.Component_Descrip.on = unpvt.componentDescrip.on 
              -- and mcc.Component_Code  not  like '0%') 
   ORDER BY O.cerSourceCode,ComponentCode, GRAD_YEAR 
   --ORDER BY ComponentDescrip.on, GRAD_YEAR 
      
 
--- CLEAN UP 
DROP TABLE #ORG 
SET NOCOUNT OFF]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>