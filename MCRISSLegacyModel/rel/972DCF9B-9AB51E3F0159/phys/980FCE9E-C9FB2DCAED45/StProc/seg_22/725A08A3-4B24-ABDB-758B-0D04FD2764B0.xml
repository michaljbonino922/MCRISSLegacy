<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_MirsExport]" directorySegmentName="seg_22" id="725A08A3-4B24-ABDB-758B-0D04FD2764B0">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@eventType int, 
@nwaId int, 
@scheduleId int 
 
AS 
declare @exportData varchar(512) 
 
--Control Indicators (Flags) 
declare @personFlag char(1) , @asvabFlag char(1), @medicalFlag char(1),  @depFlag char(1),  @shipperFlag char(1), @svcRequiredFlag char(1), @depDischargeFlag char(1), 
 @ssnChangeFlag char(1), @entnacFlag char(1), @specialTestFlag char(1), @projec.onFlag char(1),  @nameChangeFlag char(1), @spfFlag char(1), @projec.onDele.onFlag char(1), 
 @dmdcFlag char(1) 
 
 
--person 
declare  @lastName varchar(20), @.rstName varchar(20),@middleName varchar(20), @su.x varchar(5), @fullName varchar(27), @recruiterSSN varchar(9),  
 @nwaSSN varchar(9), @personId int 
 
--nwa 
declare @spfCode varchar(3) 
 
--contract  
declare @contractId date.me, @dischargeDate date.me, @dischargeCode varchar(4), @validDischargeCode varchar(3) 
 
--marine candidate informa.on 
declare @maritalStatusCode varchar(1), @raceCode varchar(1),  @raceDesc varchar(10), @ethnicCode varchar(2), @ethnicDesc varchar(20), @genderCode varchar(1), 
 @religionCode varchar(2), @religionDesc varchar(75), @dateOfBirth date.me, @ci.zenship varchar(2), @birthCity varchar(17), @birthState varchar(10), 
 @driverLicenseState varchar(2), @driverLicenseNum varchar(25), @driverLicenseExp date.me, @countryOfOriginCode varchar(3),  @countryDesc varchar(50) 
 
--MEPS Scheudle 
declare @lodgingRequired varchar(1), @asvabRequired varchar(1), @transportRequired varchar(1), @specialTestRequired varchar(1), @completePhysical varchar(1), 
 @inspec.onPhysical varchar(1), @consulta.onPhysical varchar(1), @contract varchar(1), @ship varchar(1), @otherProcessing varchar(1), @processingDate date.me, 
 @arrivalDate date.me, @processingNotes varchar(250), @lastProcessedFor varchar(1), @mepsOrgId int 
 
--MEPS Organiza.on Lookup 
declare @mepsSta.onId varchar(3),@mepsIpAddress varchar(256), @mepsIpAddressUser varchar(20), @mepsIpAddressPwd varchar(20) 
 
--candidate address 
declare @cCountyCode varchar (3), @cStateCode varchar(2), @cZipCode varchar (9), @hCountyCode varchar(3), @hStateCode varchar(2), @hZipCode varchar(9), 
 @cStreetAddress varchar(50), @hStreetAddress varchar(50) , @cCityText varchar(30) , @hCityText varchar(30), @cCountyText varchar(30), @hCountyText varchar(30), 
 @cCityCode varchar(4), @hCityCode varchar(4) 
 
--Recrui.ng Organiza.on 
declare @rssOrgId int, @rssMCCCode varchar(5) 
 
 
 
 
 
--Candidate Educa.on 
declare @maxEdLevel varchar(2),  @maxEdCode varchar(1) 
 
--Candidate Language 
declare @langCode1 varchar(2), @langCode1Desc varchar(50), @langCode2 varchar(2), @langCode2Desc varchar(50) 
 
--MISCELLANEOUS 
declare @dependentCount int, @priorServiceDays int, @priorService int, @enlistmentType varchar(1),  
 @lastFullMedical date.me, @lastAsvab date.me 
 
 
 
begin 
 
 --First things .rst.  lets assign all the .ags to zero  0 
 select @personFlag = '1',  @asvabFlag = '0', @medicalFlag = '0',  @depFlag = '0',  @shipperFlag = '0', @svcRequiredFlag = '0', @depDischargeFlag = '0', 
 @ssnChangeFlag = '0', @entnacFlag = '0', @specialTestFlag = '0', @projec.onFlag = '0',  @nameChangeFlag = '0', @spfFlag = '0', @projec.onDele.onFlag = '0', 
 @dmdcFlag = '0',@projec.onDele.onFlag = '0' 
 
 --Now based on the event type lets turn on some of the control  indicators 
 --NOTE: Person Data is sent with every event 
 if @eventType = 1 begin 
  --Project to MIRS 
  select @projec.onFlag = '1' 
  select @projec.onDele.onFlag = '1' 
 end  
 else if @eventType = 2 begin 
  --Projec.on Dele.on 
  select  @projec.onDele.onFlag = '1' 
 end else if @eventType = 3 begin 
  --DEP-Discharge 
  select @depDischargeFlag = '1' 
 end else if @eventType = 4 begin 
  --SPF Change 
  select @spfFlag = '1' 
 end  else  
  raiserror ('Invalid MIRS Export Event Type: MIRS Data Not Exported',16,1)  
 
 
 --Now that we have our control indicator lets start building our export data string 
 Select @exportData =  '3' + @personFlag + @asvabFlag + @medicalFlag + @depFlag + @shipperFlag + @svcRequiredFlag + @depDischargeFlag +  
    @ssnChangeFlag + @entnacFlag + @specialTestFlag + @projec.onFlag 
 
 
 --Person informa.on is being transimted, irrespec.ve (for now), of the event type. so lets get as much data as we can 
 select  @maritalStatusCode = marital_status_code, 
            @raceCode = ltrim(rtrim(race_code)), @ethnicCode = ltrim(rtrim(ethnic_code)), @genderCode = ltrim(rtrim(gender_code)), 
            @religionCode = ltrim(rtrim(religion_code)), @dateOfBirth = date_of_birth, @ci.zenship = ltrim(rtrim(ci.zenship)), 
            @birthCity = ltrim(rtrim(birth_city)), @birthState = ltrim(rtrim(birth_state)), @driverLicenseState = ltrim(rtrim(driver_license_state)), 
            @driverLicenseNum = ltrim(rtrim(driver_license_num)), @driverLicenseExp = driver_license_exp, 
  @countryOfOriginCode = ltrim(rtrim(country_of_origin)), @personId = person_id, @lastName = ltrim(rtrim(last_name)),  
  @.rstName = ltrim(rtrim(.rst_name)), @middleName = ltrim(rtrim(legal_middle_name)), @su.x = ltrim(rtrim(su.x_cd)), 
  @nwaSSN = ltrim(rtrim(social_security_number)), @spfCode = CASE nwa.category_code 
                     WHEN 'R' THEN 'DMR' 
                     WHEN 'P' THEN 'DMZ' 
                     WHEN 'G' THEN 'DMV' 
                     WHEN 'A' THEN 'DMV' 
         ELSE '   ' 
        END 
 
 from marine_candidate mc, person p, nwa 
 where  nwa.nwa_id = @nwaId and 
  nwa.marine_candidate_id = mc.marine_candidate_id and 
  mc.marine_candidate_id = p.person_id 
 
 
 --We need to get the MEPS ORG ID to obtain the MEPS Sta.on ID for expor.ng purposes. There is negligable overhead on popula.ng the other variable if they  
 --are not used. NOTE: Irrespec.ve of the event type, there must be a schedule id 
 select  @lodgingRequired = ltrim(rtrim(lodging_required)), @completePhysical = ltrim(rtrim(complete_physical)), @inspec.onPhysical = ltrim(rtrim(inspec.on_physical)),@consulta.onPhysical = ltrim(rtrim(consulta.on_physical)), 
            @contract = ltrim(rtrim(contract)), @ship = ltrim(rtrim(ship)), @otherProcessing = ltrim(rtrim(other_processing)), @processingDate = processing_date, @processingNotes = ltrim(rtrim(processing_notes)), 
            @lastProcessedFor = last_processed_for, @mepsOrgId = ms.meps_organiza.on_id, @nwaId = nwa_id, @arrivalDate = arrival_date, 
  @asvabRequired = ltrim(rtrim(asvab)), @transportRequired = ltrim(rtrim(transporta.on_required)),@specialTestRequired = ltrim(rtrim(special_exam)), 
  @mepsSta.onId = ltrim(rtrim(meps_code)), @mepsIpAddress = meps_ip_address, @mepsIpAddressUser = meps_ipaddress_user, @mepsIpAddressPwd = meps_ipaddress_pwd 
 from meps_schedule ms, meps_organiza.on_lookup mol 
 where  schedule_id = @scheduleId and 
  ms.meps_organiza.on_id = mol.meps_organiza.on_id 
 
 
 select @dischargeCode = ltrim(rtrim(discharge_code)), @dischargeDate = discharge_date 
 from contract where nwa_id = @nwaId 
 
 
 if (@dischargeCode in ('ZAA','ZAB','ZAC','ZAD','ZBA','ZBB','ZBC','ZBD','ZBE','ZBF','ZCA','ZCB','ZCC','ZDA','ZDB','ZDC','ZEA','ZEB','ZEC','ZED','ZEE','ZFA','ZKC','ZZY','ZZZ')) 
  select @validDischargeCode = @dischargeCode 
 else 
  select @validDischargeCode = 'ZFA' 
 
 
 
 --SSN : exported with all transac.ons  ELEM# 2 
 select @exportData = @exportData + @nwaSSN 
 
 
 
 
 --TYPE Code: ELEM# 3 
 select @exportData = @exportData + 'P' 
 
 --Sequence Code: always 1 for s` ELEM# 4 
 select @exportData = @exportData + '1' 
 
 --MEPS Workd ID Code: ?????:  ELEM# 5 
 select @exportData = @exportData + 'P000' 
 
 --MEPS Sta.on ID: ELEM# 6 
 select @exportData = @exportData + @mepsSta.onId 
 
 --service Processed For: ELEM# 7 
 select @exportData = @exportData + @spfCode 
 
 --Date of Ac.on: ELEM# 8 
 select @exportData = @exportData + convert(varchar(8),getDate(),112) 
 
 --MEPS Status Code: ELEM# 9 
 select @exportData = @exportData + 'P' 
 
 --ELEM 10: Date Administered Test:  Set to all zeros 
 select @exportData = @exportData + '00000000' 
 
 --ELEM 11:  DateLast Full Physical:  ELEM# 11 
 select @lastFullMedical = max(medical_exam_date) 
 from candidate_medical_exam 
 where  medical_exam_type = 'FULL' and 
  marine_candidate_id = @personId 
 if (@lastFullMedical is null) 
  select @exportData = @exportData + '00000000' 
 else 
  select @exportData = @exportData + convert(varchar(8),@lastFullMedical,112) 
 
 --DMDC Prio Service indicator not set by MCRISS-RS: ELEM # 12 
 select @exportData = @exportData + ' ' 
  
 
 --set prior service indicators: ELEM # 13 
 if (exists(select 1 from candidate_prior_service where marine_candidate_id = @personId)) 
  select @exportData = @exportData + 'Y' 
 else 
  select @exportData = @exportData + 'N' 
 
 --Name of Person: ELEM # 14 
 if (@lastName is null) 
  select @lastName = '' 
 if (@.rstName is null) 
  select @.rstName = '' 
 if (@middleName is null) 
  select @middleName = '' 
 if (@su.x is null) 
  select @su.x = '' 
 
 select @fullName = @lastName + @.rstName + @middleName + @su.x 
 if (@fullName is not null) begin 
  if (len(@fullName) < 27) begin 
   --make sure the export program nows how many blanks to add 
    select @exportData = @exportData + @fullName + '~'+ convert(varchar(2),27-len(@fullName)) + '^' 
  end else 
   select @exportData = @exportData + substring(@fullName,1,27) 
 end  
 else 
  raiserror ('Applicant Must Have a Name:  Name Cannot Be null',16,1)  --THIS SHOULD NEVER HAPPEN 
 
 
 --ELEM # 15,16,17 
 --Current Address Informa.on 
 select @cCountyCode = ltrim(rtrim(COUNTY_CODE)), @cStateCode = ltrim(rtrim(STATE_CODE)), @cZipCode = ltrim(rtrim(ZIPCODE)), 
    @cStreetAddress = ltrim(rtrim(street_address)) , @cCityCode = ltrim(rtrim(CITY_CODE)) 
 from candidate_address 
 where marine_candidate_id = @personId and address_type = 'C' 
 
 
 if (@cStateCode is not null) 
  select @exportData = @exportData + substring(@cStateCode,1,2) 
 else 
  select @exportData = @exportData + '  ' 
 
 if (@cCountyCode is not null) 
  select @exportData = @exportData + @cCountyCode 
 else 
  select @exportData = @exportData + '   ' 
 
 if (@cZipCode is not null) begin 
  if (len(@cZipCode) < 9) begin 
    select @exportData = @exportData + @cZipCode + '~'+ convert(varchar(2),9-len(@cZipCode)) + '^' 
  end else begin 
   select @exportData = @exportData + substring(@cZipCode,1,9) 
  end 
 end 
 else begin 
  select @exportData = @exportData + '~9^' 
 end 
 
 --ELEM # 18,19,20 
 --Home of Record 
 select @hCountyCode = ltrim(rtrim(COUNTY_CODE)), @hStateCode = ltrim(rtrim(STATE_CODE)), @hZipCode =ltrim(rtrim( ZIPCODE)), 
    @hStreetAddress = ltrim(rtrim(street_address)) , @hCityCode = ltrim(rtrim(CITY_CODE)) 
 from candidate_address 
 where marine_candidate_id = @personId and address_type = 'H' 
 
 if (@hStateCode is not null) 
  select @exportData = @exportData + substring(@hStateCode,1,2) 
 else 
  select @exportData = @exportData + '  ' 
 
 if (@hCountyCode is not null) 
  select @exportData = @exportData + @hCountyCode 
 else 
  select @exportData = @exportData + '   ' 
 
 if (@hZipCode is not null) begin 
  if (len(@hZipCode) < 9) begin 
    select @exportData = @exportData + @hZipCode + '~'+ convert(varchar(2),9-len(@hZipCode)) + '^' 
  end else begin 
 
   select @exportData = @exportData + @hZipCode 
  end 
 end 
 else begin 
  select @exportData = @exportData + '~9^' 
 end 
 
 --ELEM 21 
 if (@ci.zenship is not null) 
  select @exportData = @exportData + @ci.zenship 
 else 
  select @exportData = @exportData + 'ZZ' 
     
 --ELEM 22 
 if (@genderCode is not null) 
  select @exportData = @exportData + @genderCode 
 else 
 
  select @exportData = @exportData + 'Z' 
 
    
 
 --ELEM 23 
 if (@raceCode is not null) 
  select @exportData = @exportData + @raceCode 
 else 
  select @exportData = @exportData + 'Z' 
 
 --ELEM 24 
 if (@ethnicCode is not null) 
  select @exportData = @exportData + @ethnicCode 
 else 
  select @exportData = @exportData + 'Z' 
        
 --ELEM 25  
 if (@maritalStatusCode is not null) 
  select @exportData = @exportData + @maritalStatusCode 
 else 
 
  select @exportData = @exportData + 'S' 
   
 --ELEM 26 
 select @dependentCount = count(*) from candidate_dependent where marine_candidate_id = @personId 
 if (@dependentCount is not null) begin 
  if (@dependentCount < 10) 
   select @exportData = @exportData + '0' + convert(varchar(1),@dependentCount) 
  else 
   select @exportData = @exportData + convert(varchar(2),@dependentCount) 
 end else 
  select @exportData = @exportData + '00' 
 
 
 --ELEM 27 
 if (@dateOfBirth is not null) begin 
  select @exportData = @exportData + convert(varchar(8),@dateOfBirth,112) 
 end else 
  select @exportData = @exportData + '00000000' 
     
 --ELEM 28 
 if (@religionCode is not null) 
  select @exportData = @exportData + @religionCode 
 else 
  select @exportData = @exportData + '00' 
 
    
 --ELEM 29, 30 
 select @maxEdLevel = ltrim(rtrim(max(educa.on_level))) from candidate_educa.on where marine_candidate_id = @personId 
 if (@maxEdLevel is not null) begin 
  if (len(@maxEdLevel) < 2) 
   select @exportData = @exportData + '0' + @maxEdLevel 
  else 
   select @exportData = @exportData +  @maxEdLevel 
 
  select @maxEdCode = ltrim(rtrim(educa.on_code))  from candidate_educa.on where marine_candidate_id = @personId and educa.on_level = @maxEdLevel 
  if (@maxEdCode is not null) 
   select @exportData = @exportData + @maxEdCode 
  else 
   select @exportData = @exportData + '1' 
 end else 
   select @exportData = @exportData + '001'  --no years of educa.on + less than HS diploma  NOTE: Highly unlikely 
 
 
 --ELEM # 31, 32, 33 
 select @exportData = @exportData + '~10^' 
 
 --ELEM #34 
 select @recruiterSSN = ltrim(rtrim(social_security_number)) 
 from person 
 where person_id = (select recruiter_of_record_id    
       from nwa   where nwa_id = @nwaId) 
 
 if (@recruiterSsn is not null)  
  select @exportData = @exportData + @recruiterSsn 
 else 
  select @exportData = @exportData + '~9^' 
 
 if (@eventType = 3) begin 
  --ELEM 35 thru 87 
 
  select @exportData = @exportData + '~251^' 
  --ELEM 88, 89 
  
  select @exportData = @exportData + @validDischargeCode  
  if (@dischargeDate is not null) 
   select @exportData = @exportData + convert(varchar(8), @dischargeDate, 112) 
  else 
   select @exportData = @exportData + '00000000' 
 end else begin 
  --ELEM 35 thru 89 
  select @exportData = @exportData + '~262^' 
 end 
 
 --ELEM 90,91 
 select @langCode1 = ltrim(rtrim(min(language_code))) 
 from candidate_language 
 where marine_candidate_id = @personId 
 if (@langCode1 is not null) begin 
  select @exportData = @exportData + @langCode1 
  select @langCode2 = ltrim(rtrim(min(language_code))) 
  from candidate_language 
  where marine_candidate_id = @personId and language_code <> @langCode1 
  if (@langCode2 is not null) 
   select @exportData = @exportData + @langCode2 
  else 
   select @exportData = @exportData + '  ' 
 end else 
  select @exportData = @exportData + '    ' 
 
 
 --ELEM 92 
 select @exportData = @exportData + 'MC' 
 
 --ELEM 93 
 if (@asvabRequired = 'Y') 
  select @exportData = @exportData + 'T' 
 else 
  select @exportData = @exportData + 'P' 
 
 --ELEM 94  
 select @rssOrgId = organiza.on_id, @rssMCCCode = ltrim(rtrim(mcc_code)) 
 from recrui.ng_organiza.on 
 where organiza.on_id = (select organiza.on_of_record_id    
       from nwa   where nwa_id = @nwaId) 
 
 if (@rssMCCCode is not null) begin 
  if (len(@rssMCCCode) < 5) begin 
    select @exportData =@exportData +  @rssMCCCode + '~'+ convert(varchar(2),5-len(@rssMCCCode)) + '^' 
  end else begin 
   select @exportData = @exportData + @rssMCCCode 
  end 
 end 
 else begin 
  raiserror ('Could Not Obtain Organiza.on of Record ID for NWA: Can Not Export MIRS Data',16,1) 
 end 
 
 --ELEM 95 
 if (@birthCity is not null) begin 
  if (len(@birthCity) < 17) begin 
    select @exportData = @exportData +  @birthCity + '~'+ convert(varchar(2),17-len(@birthCity)) + '^' 
 
  end else begin 
   select @exportData = @exportData + substring(@birthCity,1,17) 
  end 
 end 
 else begin 
  select @exportData = @exportData + '~17^' 
 end 
      
 
 --ELEM 96 
 if (@birthState is not null) begin 
  if (len(@birthState) < 2) begin 
    select @exportData = @exportData + @birthState + '~'+ convert(varchar(2),2-len(@birthState)) + '^' 
  end else begin 
   select @exportData = @exportData + substring(@birthState,1,2) 
  end 
 end 
 else begin 
  select @exportData = @exportData + '  ' 
 end 
 
 --ELEM 97 
 if (@countryOfOriginCode is not null) begin 
  if (len(@countryOfOriginCode) < 2) begin 
    select @exportData = @exportData + @countryOfOriginCode + ' ' 
  end else begin 
   select @exportData = @exportData + substring(@countryOfOriginCode,1,2) 
  end 
 end 
 else begin 
  select @exportData = @exportData + '  ' 
 end 
   
 
 --ELEM 98 thru  121 
 select @exportData = @exportData + '~113^' 
       
 
 --ELEM 122 thru 124  All populated or all blank 
 if (@driverLicenseNum is not null and  
  @driverLicenseState is not null and 
   @driverLicenseExp is not null) begin 
 
   if (len(@driverLicenseNum) < 25) begin 
     select @exportData = @exportData + @driverLicenseNum + '~'+ convert(varchar(2),25-len(@driverLicenseNum)) + '^' 
   end else begin 
    select @exportData = @exportData + substring(@driverLicenseNum,1,25) 
   end 
   select @exportData = @exportData + @driverLicenseState 
   select @exportData = @exportData + convert(varchar(8),@driverLicenseExp,112) 
 end else begin 
  select @exportData = @exportData + '~27^00000000' 
 
 end 
 
 --ELEM 125, 126  : Filler 
 select @exportData = @exportData + '  ' 
 
 --ELEM 127 thru 145 
 if (@eventType = 1) begin 
  --================PROJECTION Data=================== 
  --ELEM 127 
  if (@lodgingRequired is null or @lodgingRequired = 'N') 
   select @exportData = @exportData +  'N' 
  else 
   select @exportData = @exportData +  'Y' 
 
  --ELEM 128 
  if (@arrivalDate is null) 
   select @exportData = @exportData +  '00000000' 
  else 
   select @exportData = @exportData +  convert(varchar(8),@arrivalDate,112) 
 
  --ELEM 129 
  select @exportData = @exportData +  '    ' 
 
  --ELEM 130 mode of transporta.on 
  select @exportData = @exportData +  'G' 
 
 
  --ELEM 131  : Always Y 
  select @exportData = @exportData +  'Y' 
 
 
  --ELEM 132 
  --Set to E if Asvab Flag is Selected otherwise blank 
  if (@asvabRequired is null or @asvabRequired = 'N') 
   select @exportData = @exportData +  ' ' 
  else 
   select @exportData = @exportData +  'E' 
 
  --ELEM 133 
  if (@specialTestRequired is null or @specialTestRequired = 'N') 
   select @exportData = @exportData +  ' ' 
  else 
   select @exportData = @exportData +  'S' 
 
  --ELEM 134,135,136 
  select @exportData = @exportData +  '~9^' 
 
  --ELEM 137 : always Y 
  select @exportData = @exportData +  'Y' 
 
  --ELEM 138 
  if (@completePhysical is null or @completePhysical = 'N') 
   select @exportData = @exportData +  ' ' 
  else 
   select @exportData = @exportData +  'F' 
 
  --ELEM 139 
  if (@inspec.onPhysical is null or @inspec.onPhysical = 'N') 
   select @exportData = @exportData +  ' ' 
  else 
   select @exportData = @exportData +  'I' 
    
  --ELEM 140, 141 
  select @exportData = @exportData +  '  ' 
 
  --ELEM 142 
  if (@consulta.onPhysical is null or @consulta.onPhysical = 'N') 
   select @exportData = @exportData +  ' ' 
  else 
 
   select @exportData = @exportData +  'C' 
 
 
  --ELEM 143 
  if (@contract is null or @contract = 'N') begin 
   if (@ship is null or @ship = 'N') begin 
    select @enlistmentType = 'X' 
   end else begin 
    if (@spfCode = 'DMV') 
     select @enlistmentType = 'C' 
    else if (@spfCode = 'DMR') 
     select @enlistmentType = 'B' 
    else 
     select @enlistmentType = 'X' 
   end 
  end else begin 
   if (@ship is null or @ship = 'N') begin 
    if (@spfCode = 'DMV') 
     select @enlistmentType = 'A' 
    else if (@spfCode = 'DMR') 
     select @enlistmentType = 'D' 
    else 
     select @enlistmentType = 'X' 
   end else begin 
    if (@spfCode = 'DMV') 
     select @enlistmentType = 'C' 
    else if (@spfCode = 'DMR') 
     select @enlistmentType = 'B' 
    else 
     select @enlistmentType = 'X' 
   end 
  end 
  select @exportData = @exportData +  @enlistmentType 
 
  --ELEM 144 
  if (exists(select 1 from meps_schedule where nwa_id = @nwaId and meps_organiza.on_id != @mepsOrgId)) 
   select @exportData = @exportData +  'Y' 
  else 
 
   select @exportData = @exportData +  'N' 
  
  --ELEM 145 
  if (@processingDate is not null) begin 
   select @exportData = @exportData + convert(varchar(8),@processingDate,112) 
  end else 
   select @exportData = @exportData + '00000000' 
 end else 
  select @exportData = @exportData + '~42^' 
 
 --ELEM 146 
 if (@processingNotes is not null) begin 
  if (len(@processingNotes) < 180) begin 
    select @exportData = @exportData + @processingNotes + '~'+ convert(varchar(3),180-len(@processingNotes)) + '^' 
  end else begin 
   select @exportData = @exportData + substring(@processingNotes,1,180) 
  end 
 end else 
  select @exportData = @exportData + '~180^' 
 
 
 
 
 --ELEM 147 
 if (@lastName is not null) begin 
  if (len(@lastName) < 25) begin 
    select @exportData = @exportData +  @lastName + '~'+ convert(varchar(2),25-len(@lastName)) + '^' 
  end else 
    select @exportData = @exportData +  substring(@lastName,1,25)  
 end else 
   select @exportData = @exportData +  '~25^'  
 
 
 --ELEM 148 
 if (@.rstName is not null) begin 
  if (len(@.rstName) >= 15) begin 
    select @exportData = @exportData + substring(@.rstName,1,15)  
  end else begin 
    select @exportData = @exportData + @.rstName + '~'+ convert(varchar(2),15-len(@.rstName)) + '^' 
  end 
 end else 
   select @exportData = @exportData +  '~15^'  
 
 
 --ELEM 149 
 if (@middleName is not null) begin 
  if (len(@middleName) >= 15) begin 
    select @exportData = @exportData + substring(@middleName,1,15)  
  end else begin 
    select @exportData = @exportData + @middleName + '~'+ convert(varchar(2),15-len(@middleName)) + '^' 
  end 
 end else 
   select @exportData = @exportData +  '~15^'  
 
 --ELEM 150 
 if (@su.x is not null) begin 
  if (len(@su.x) < 6) begin 
    select @exportData = @exportData + @su.x + '~'+ convert(varchar(2),6-len(@su.x)) + '^' 
  end else 
    select @exportData = @exportData + substring(@su.x,1,6) 
 end else 
   select @exportData = @exportData +  '~6^'  
 
 
 --ELEM 151     : May need column to store number days 
 select @exportData = @exportData +  '0000'  
 
   
 
 --ELEM 152, 153 
 select @exportData = @exportData +  '0000000000000000' 
  
 
 --ELEM 154: Selec.ve Service Indicator:  What do we set the value to.  Can not be blank 
 select @exportData = @exportData +  '   ' 
 
 
  
 --ELEM 155 CANDIDATE_ADDRESS Current 
 if (@cStreetAddress is not null) begin 
  if (len(@cStreetAddress) >= 29) begin 
    select @exportData = @exportData + substring(@cStreetAddress,1,29)  
  end else begin 
    select @exportData = @exportData + @cStreetAddress + '~'+ convert(varchar(2),29-len(@cStreetAddress)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~29^'  
 
 
 
 
 --ELEM 156 , 157: City Text, County Text 
 select @cCityText = ltrim(rtrim(city_text)), @cCountyText = ltrim(rtrim(county_text))  
 from geo_loca.on  
 where  city_code = @cCityCode and  
  County_Code = @cCountyCode and 
  State_Code = @cStateCode 
 --ELEM 156 
 if (@cCityText is not null) begin 
  if (len(@cCityText) >= 21) begin 
    select @exportData = @exportData + substring(@cCityText,1,21)  
  end else begin 
    select @exportData = @exportData + @cCityText + '~'+ convert(varchar(2),21-len(@cCityText)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~21^'  
 
 
 --ELEM 157 
 if (@cCountyText is not null) begin 
  if (len(@cCountyText) >= 36) begin 
    select @exportData = @exportData + substring(@cCountyText,1,36)  
  end else begin 
    select @exportData = @exportData + @cCountyText + '~'+ convert(varchar(2),36-len(@cCountyText)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~36^'  
 
 --Country Descrip.on:  Use for Current and HOR:  ??????   
 --ELEM 158 
 select @countryDesc = ltrim(rtrim(country_descrip.on)) 
 from geo_loca.on 
 where state_code = @countryOfOriginCode 
 if (@countryDesc is not null) begin 
 
  if (len(@countryDesc) >= 12) begin 
    select @countryDesc = substring(@countryDesc,1,12)  
  end else begin 
    select @countryDesc = @countryDesc + '~'+ convert(varchar(2),12-len(@countryDesc)) + '^' 
  end 
 end else 
  select @countryDesc =  '~12^'  
 
 select @exportData = @exportData +  @countryDesc 
    
 
 --ELEM 159 
 if (@hStreetAddress is not null) begin 
  if (len(@hStreetAddress) >= 29) begin 
    select @exportData = @exportData + substring(@hStreetAddress,1,29)  
  end else begin 
    select @exportData = @exportData + @hStreetAddress + '~'+ convert(varchar(2),29-len(@hStreetAddress)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~29^'  
 
 
 
 --ELEM 160 , 161: City Text, County Text 
 select @hCityText = ltrim(rtrim(city_text)), @hCountyText = ltrim(rtrim(county_text))  
 from geo_loca.on  
 where  city_code = @hCityCode and  
  County_Code = @hCountyCode and 
  State_Code = @hStateCode 
 --ELEM 160 
 if (@hCityText is not null) begin 
  if (len(@hCityText) >= 21) begin 
    select @exportData = @exportData + substring(@hCityText,1,21)  
  end else begin 
    select @exportData = @exportData + @hCityText + '~'+ convert(varchar(2),21-len(@hCityText)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~21^'  
 
 --ELEM 161 
 if (@hCountyText is not null) begin 
  if (len(@hCountyText) >= 36) begin 
    select @exportData = @exportData + substring(@hCountyText,1,36)  
  end else begin 
    select @exportData = @exportData + @hCountyText + '~'+ convert(varchar(2),36-len(@hCountyText)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~36^'  
 
 --ELEM 162 
 select @exportData = @exportData +  @countryDesc 
 
 
 --ELEM 163, 164: MCRISS-RS Does Not Send 
 select @exportData = @exportData +  '~24^'  
 
 --ELEM 165:  Race Desc   Literal X or Z ?????????????????? 
 select @raceDesc = ltrim(rtrim(race_desc)) 
 from race 
 where race_code = @raceCode 
 if (@raceDesc is not null) begin 
  if (len(@raceDesc) >= 8) begin 
    select @exportData = @exportData + substring(@raceDesc,1,8)  
  end else begin 
    select @exportData = @exportData + @raceDesc + '~'+ convert(varchar(2),8-len(@raceDesc)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~8^'  
 
 --ELEM 166:  Ethnic Indicator 
 if (@ethnicCode in ('1','4','6','5','9')) 
  select @exportData = @exportData +  'Y' 
 else  
  select @exportData = @exportData +  'N' 
 
 
 --ELEM 167 
 select @ethnicDesc = ltrim(rtrim(ethnic_abbrevea.on)) 
 from ethnic 
 where ethnic_code = @ethnicCode 
 if (@ethnicDesc is not null) begin 
  if (len(@ethnicDesc) >= 8) begin 
    select @exportData = @exportData + substring(@ethnicDesc,1,8)  
  end else begin 
    select @exportData = @exportData + @ethnicDesc + '~'+ convert(varchar(2),8-len(@ethnicDesc)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~8^'  
 
 --ELEM 168 
 --Religion Desc 
 select @religionDesc = ltrim(rtrim(religion_code_desc)) 
 from religion 
 where religion_code = @religionCode 
 if (@religionDesc is not null) begin 
  if (len(@religionDesc) >= 11) begin 
    select @exportData = @exportData + substring(@religionDesc,1,11)  
  end else begin 
    select @exportData = @exportData + @religionDesc + '~'+ convert(varchar(2),11-len(@religionDesc)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~11^'  
   
 --ELEM 169 
 --Lang1 Desc 
 select @langCode1Desc = ltrim(rtrim(language_code_descrip.on)) 
 from language 
 where language_code = @langCode1 
 if (@langCode1Desc is not null) begin 
  if (len(@langCode1Desc) >= 22) begin 
    select @exportData = @exportData + substring(@langCode1Desc,1,22)  
  end else begin 
    select @exportData = @exportData + @langCode1Desc + '~'+ convert(varchar(2),22-len(@langCode1Desc)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~22^'  
 
 --ELEM 170 
 if (@langCode1 is not null) 
  select @exportData = @exportData +  'Y'  
 else  
  select @exportData = @exportData +  'N' 
 
  
 --ELEM 171 
 --lang 2 
 select @langCode2Desc = ltrim(rtrim(language_code_descrip.on)) 
 from language 
 where language_code = @langCode2 
 if (@langCode2Desc is not null) begin 
  if (len(@langCode2Desc) >= 22) begin 
    select @exportData = @exportData + substring(@langCode2Desc,1,22)  
  end else begin 
    select @exportData = @exportData + @langCode2Desc + '~'+ convert(varchar(2),22-len(@langCode2Desc)) + '^' 
  end 
 end else 
  select @exportData = @exportData +  '~22^'  
 
 --ELEM 172 
 if (@driverLicenseNum is not null) 
  select @exportData = @exportData +  'Y'  
 else  
  select @exportData = @exportData +  'N' 
 
 --ELEM 173,174 
 select @exportData = @exportData +  '  '  
  
 
 
 --ELEM 175 
 select @lastAsvab = max(asvab_date) 
 from candidate_asvab 
 where  marine_candidate_id = @personId 
 if (@lastAsvab is null) 
  select @exportData = @exportData + '00000000' 
 else 
  select @exportData = @exportData + convert(varchar(8),@lastAsvab,112) 
  
  
 
 
 --ELEM 176 thru 219 
 select @exportData = @exportData +  '~1545^'  
 
 --ELEM 220 
 if (@eventType = 2) begin 
  if (@processingDate is not null) 
   select @exportData = @exportData + convert(varchar(8),@processingDate,112) 
  else 
   select @exportData = @exportData + '00000000' 
 
 end else 
  select @exportData = @exportData + '00000000' 
   
   
 
 
 if (@eventType = 3) begin 
  --ELEM 221 
  select @exportData = @exportData +  @spfCode 
 
  --ELEM 222 thru 281 
  select @exportData = @exportData +  '~1221^'  
 
   
 end  
 else begin 
  --ELEM 221 - 281 
  select @exportData = @exportData +  '~1224^'  
 end 
 
   
 
 
 select @exportData = @exportData +  @nameChangeFlag + @spfFlag + @projec.onDele.onFlag + @dmdcFlag 
 select @exportData = @exportData +  '00000000Z' 
 insert into mirs_export (person_id, schedule_id, transac.on_type_id, exported_data, meps_ip_address, meps_ipaddress_user, meps_ipaddress_pwd,user_login,update_date) 
 values (@personId, @scheduleId,@eventType,@ExportData,@mepsIpAddress,@mepsIpAddressUser,@mepsIpAddressPwd,'MIRS_INTERFACE',getDate()) 
 
end]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>