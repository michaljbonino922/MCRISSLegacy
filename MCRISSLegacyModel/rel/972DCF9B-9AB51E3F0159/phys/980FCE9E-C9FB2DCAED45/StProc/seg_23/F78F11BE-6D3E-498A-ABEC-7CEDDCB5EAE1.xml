<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[SP_SSRS_Recruiter_EndOfTour_Remove]" directorySegmentName="seg_23" id="F78F11BE-6D3E-498A-ABEC-7CEDDCB5EAE1">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@SSN varchar(9) = NULL, 
 @TicketNum varchar(50) = NULL, 
 @SsrsUser varchar(250) = NULL, 
 @UpdateNow bit = 0 
 
AS 
BEGIN 
 
 
DECLARE @OopsInValid BIT, 
  @ValidAndReadyToUpdate BIT 
 
 
----------------------------------------------------------- 
--Handle User GUID Checks (for use with Prospec.ng Data) 
 
DECLARE @SsrsUserExists BIT = (SELECT CASE WHEN EXISTS  
   (SELECT 1 from UserMgmt.dbo.[User]   
    where Username = @SsrsUser 
    GROUP BY Username 
    HAVING Count(*) = 1) 
    THEN 1 ELSE 0 END) 
 
IF @SSrsUserExists = 0 AND @UpdateNow = 1 
BEGIN 
 select 'Sorry, Username not in UserMgmt' as Ac.onTable 
 SET @OopsInValid = 1 
END 
 
IF @SSrsUserExists = 1 AND @UpdateNow = 1 
BEGIN 
 DECLARE @SsrsUserGUID varchar(100) 
 SET @SsrsUserGUID = (SELECT UserID FROM UserMgmt.dbo.[User] where Username = @SsrsUser) 
 --select @SsrsUserGUID, @SsrsUser 
END 
 
----------------------------------------------------------- 
--Check for Good SSN 
DECLARE @PersonExists BIT = (SELECT CASE WHEN EXISTS  
   (SELECT 1 from dbo.RECRUITING_PERSON (nolock) rp 
   join dbo.PERSON (nolock) p on rp.RECRUITING_PERSON_ID = p.PERSON_ID  
   where p.SOCIAL_SECURITY_NUMBER = LTRIM(RTRIM(@SSN))) 
   THEN 1 ELSE 0 END) 
 
IF @PersonExists = 0 
BEGIN 
 select 'Sorry, Invalid SSN' as Ac.onTable 
 SET @OopsInValid = 1 
END 
 
 
------------------------------------------ 
--Check to see if All .elds are .lled out Completely 
 
IF @UpdateNow = 1           --Asked to update 
 AND @SSrsUserExists = 1 --Upda.ng user is in the UserMgmt table 
 AND @PersonExists = 1   --Gave good Social 
 
BEGIN 
 SET @ValidAndReadyToUpdate = 1 
END 
 
 
 
------------------------------------------ 
------------------------------------------  
--Lets Grab Some Data 
--To prepare for display, update, and history 
 
IF @PersonExists = 1 
BEGIN 
 
DECLARE 
  @RecTemp TABLE( 
  SSN VARCHAR(9),  
  Ac.onTable VARCHAR(250),  
  IdType VARCHAR(250),  
  IdKey VARCHAR(250),  
  FullName VARCHAR(250),  
  Org VARCHAR(250), 
  TOUR_BEGIN_DATE DATETIME,  
  TOUR_END_DATE DATETIME,  
  BILLET_BEGIN_DATE DATETIME, 
  BILLET_END_DATE DATETIME, 
  LastUpdatedBy VARCHAR(250), 
  LastUpdatedDate DATETIME 
   ) 
 
INSERT @RecTemp( 
  SSN, 
  Ac.onTable,  
  IdType,  
  IdKey,  
  FullName,  
  Org, 
  TOUR_BEGIN_DATE, 
  TOUR_END_DATE,  
  BILLET_BEGIN_DATE, 
  BILLET_END_DATE, 
  LastUpdatedBy, 
  LastUpdatedDate 
  ) 
SELECT 
  p.SOCIAL_SECURITY_NUMBER as SSN 
  ,'MCRISS.dbo.RECRUITING_PERSON' as Ac.onTable 
  ,'RECRUITING_PERSON_ID' as IdType 
  ,CAST(rp.RECRUITING_PERSON_ID AS varchar(50)) AS IdKey 
  ,LTRIM(RTRIM(ISNULL(p.FIRST_NAME,''))) + ' ' + LTRIM(RTRIM(ISNULL(p.LAST_NAME,''))) as FullName 
  ,rp.ORGANIZATION_ID 
  ,rp.TOUR_BEGIN_DATE 
  ,rp.TOUR_END_DATE 
  ,rp.BILLET_BEGIN_DATE 
  ,rp.BILLET_END_DATE 
  ,rp.USER_LOGIN 
  ,rp.UPDATE_DATE 
from  
 dbo.RECRUITING_PERSON (nolock) rp 
 join dbo.PERSON (nolock) p on rp.RECRUITING_PERSON_ID = p.PERSON_ID 
where  
 p.SOCIAL_SECURITY_NUMBER = LTRIM(RTRIM(@SSN)) 
 
END 
 
 
------------------------------------------ 
------------------------------------------  
--Load the History Table: 
 
IF @ValidAndReadyToUpdate = 1 
BEGIN 
 INSERT INTO [HelpDesk].[SSRS_Toolbox_Update_History] 
  ([TicketNum] 
  ,[Ac.onTable] 
  ,[Ac.onDesc] 
  ,[IdType] 
  ,[IdKey] 
  ,[SSN] 
  ,[BeforeUpdate] 
  ,[A.erUpdate] 
  ,[USER_LOGIN] 
  ,[UPDATE_DATE]) 
 SELECT   
  @TicketNum, 
  Ac.onTable, 
  'Recruiter TOUR_END_DATE Removed',  --Ac.onDesc 
  IdType,  
  IdKey, 
  SSN, 
  'TOUR_END_DATE: ' + CONVERT(VARCHAR(10), ISNULL(TOUR_END_DATE,''),20) + ' | '  
       + ' BILLET_END_DATE: ' + CONVERT(VARCHAR(10),ISNULL(BILLET_END_DATE,''),20),  --BeforeUpdate 
  'TOUR_END_DATE: NULL | BILLET_END_DATE: NULL',  --A.erUpdate 
  @SsrsUser,  --USER_LOGIN 
  getdate()   --UPDATE_DATE 
 FROM @RecTemp 
 WHERE SSN = LTRIM(RTRIM(@SSN)) 
 
 --SELECT * FROM [HelpDesk].[SSRS_Toolbox_Update_History] 
 --delete FROM [HelpDesk].[SSRS_Toolbox_Update_History] 
END 
 
 
 
 
------------------------------------------ 
------------------------------------------  
--UPDATE THE DATA!!!! 
 
IF @ValidAndReadyToUpdate = 1 
BEGIN 
 UPDATE rp 
 SET  
   TOUR_END_DATE = NULL 
  ,BILLET_END_DATE = NULL 
  ,USER_LOGIN = @SsrsUser + '_SSRS'  --USER_LOGIN 
  ,UPDATE_DATE = getdate() 
 from  
  dbo.RECRUITING_PERSON rp 
  join dbo.PERSON p on rp.RECRUITING_PERSON_ID = p.PERSON_ID 
 where  
  p.SOCIAL_SECURITY_NUMBER = LTRIM(RTRIM(@SSN)) 
END 
 
 
 
---------------------------------------------- 
---------------------------------------------- 
--This will show 'on-screen' data 'pre-update' 
 
IF @OopsInValid = 0 OR @UpdateNow = 0 
BEGIN 
 SELECT * FROM @RecTemp 
END 
 
 
---------------------------------------------- 
---------------------------------------------- 
--Results (a.er update) 
--Rerun the 'same' query as earlier to show 'Results' a.er update! 
--Yes, it is redundant for now... maybe a 'view' later? 
 
IF @UpdateNow = 1 and @ValidAndReadyToUpdate = 1 
BEGIN 
SELECT 
  p.SOCIAL_SECURITY_NUMBER as SSN 
  ,'MCRISS.dbo.RECRUITING_PERSON' as Ac.onTable 
  ,'RECRUITING_PERSON_ID' as IdType 
  ,CAST(rp.RECRUITING_PERSON_ID AS varchar(50)) AS IdKey 
  ,LTRIM(RTRIM(ISNULL(p.FIRST_NAME,''))) + ' ' + LTRIM(RTRIM(ISNULL(p.LAST_NAME,''))) as FullName 
  ,rp.ORGANIZATION_ID 
  ,rp.TOUR_BEGIN_DATE 
  ,rp.TOUR_END_DATE 
  ,rp.BILLET_BEGIN_DATE 
  ,rp.BILLET_END_DATE 
  ,rp.USER_LOGIN as LastUpdatedBy 
  ,rp.UPDATE_DATE as LastUpdatedDate 
from  
 dbo.RECRUITING_PERSON (nolock) rp 
 join dbo.PERSON (nolock) p on rp.RECRUITING_PERSON_ID = p.PERSON_ID 
where  
 p.SOCIAL_SECURITY_NUMBER = LTRIM(RTRIM(@SSN)) 
END 
 
 
--SELECT * FROM [HelpDesk].[SSRS_Toolbox_Update_History] 
END]]></body>
<schema>E0072523-8B4F-426D-2784-57AD654F1189</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>