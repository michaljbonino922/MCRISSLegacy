<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_InsertUpdateProgramMOSCodes]" directorySegmentName="seg_21" id="A6AB8680-EEE3-53F6-D334-311440FD2387">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[AS 
 
DECLARE @ContractCount int 
 
--- INSERT NEW CONTRACT IDs INTO PROGRAM_MOS_CODES 
INSERT INTO  
 PROGRAM_MOS_CODES (CONTRACT_ID, USER_LOGIN, UPDATE_DATE) 
SELECT  
 C.CONTRACT_ID, 'SA', GETDATE() 
FROM  
 CONTRACT C 
WHERE 
 NOT EXISTS (SELECT 1 FROM PROGRAM_MOS_CODES PMC WHERE PMC.CONTRACT_ID = C.CONTRACT_ID) 
 
 
SET @ContractCount = @@ROWCOUNT 
 
--- IF NEW CONTRACTS WERH ADDED THEN UPDATE THE PROGRAM MOS CODES 
IF @ContractCount > 0 
BEGIN 
 --- UPDATE PROGRAM_MOS_CODE_CODES WITH QSN DATA FOR RESERVISTS WITHOUT QSNs 
 UPDATE 
  PROGRAM_MOS_CODES 
 SET 
  PROGRAM_MOS_CODE = SPACE(0) 
 FROM 
  PROGRAM_MOS_CODES PMC INNER JOIN CONTRACT C ON PMC.CONTRACT_ID = C.CONTRACT_ID 
 WHERE 
  C.COMPONENT_CODE IN ('K4', 'K8', 'K9', 'B5') AND 
  NOT EXISTS (SELECT 1 FROM QSN WHERE QSN.CONTRACT_ID = PMC.CONTRACT_ID) 
 
 
 
 --- UPDATE PROGRAM_MOS_CODE_CODES WITH QSN DATA FOR RESERVISTS WITH QSNs 
 UPDATE 
  PROGRAM_MOS_CODES 
 SET 
  PROGRAM_MOS_CODE = QSN.QSN_ID + '/' + QSN.MOS 
 FROM  
  PROGRAM_MOS_CODES PMC INNER JOIN QSN ON PMC.CONTRACT_ID = QSN.CONTRACT_ID 
  INNER JOIN CONTRACT C ON PMC.CONTRACT_ID = C.CONTRACT_ID 
 WHERE 
  C.COMPONENT_CODE IN ('K4', 'K8', 'K9', 'B5') AND 
  EXISTS (SELECT 1 FROM QSN WHERE QSN.CONTRACT_ID = PMC.CONTRACT_ID) 
  
 
 --- UPDATE POOL VIEW WITH PROGRAM CODE DATA FOR REGULARS WITHOUT A PROGRAM ASSIGNED 
 --- DO THIS FIRST TO MINIMIZE THE NUMBER OF LOOKUPS TO THE PROGRAM AND PROGRAM_AVAILABILITY TABLES 
 UPDATE 
  PROGRAM_MOS_CODES 
 SET 
  PROGRAM_MOS_CODE = '00000-000-000-00-' 
 FROM 
  PROGRAM_MOS_CODES PMC INNER JOIN CONTRACT C ON PMC.CONTRACT_ID = C.CONTRACT_ID 
 WHERE 
  C.COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
  NOT EXISTS (SELECT 1 FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = PMC.CONTRACT_ID) 
  
 
 --- CREATE TEMPORARY PROGRAM TYPES TABLE AND POPULATE #PROGRAM_TYPES WITH PROGRAM TYPE DATA 
 --- DROP TABLE #PROGRAM_TYPES  
 CREATE TABLE #PROGRAM_TYPES (PROGRAM_TYPE_ID INT, PROGRAM_TYPE VARCHAR(4)) 
 CREATE CLUSTERED INDEX idxPROG_TYPE_ID ON #PROGRAM_TYPES (PROGRAM_TYPE_ID)  
 CREATE NONCLUSTERED INDEX idxPROG_TYPE ON #PROGRAM_TYPES (PROGRAM_TYPE)  
  
 DECLARE @i int 
 SET @i = 1 
  
 WHILE @i <= 4 
 BEGIN 
  --- CAPTURE THE PROGRAM TYPE DATA 
  INSERT INTO  
   #PROGRAM_TYPES 
  SELECT 
   @i, PT.PROGRAM_TYPE_CODE  
  FROM  
   PROGRAM_TYPE PT  
  WHERE  
   (@i = 1 AND PT.PROGRAM_TYPE_CODE IN ('EOP', 'QEP', 'MEOP')) OR 
   (@i = 2 AND PT.PROGRAM_TYPE_CODE = 'EBP') OR 
   (@i = 3 AND PT.PROGRAM_TYPE_CODE = 'MCCF') OR 
   (@i = 4 AND PT.PROGRAM_TYPE_CODE IN ('QEP', 'GOP', 'CEP')) 
    
  SET @i = @i + 1 
 END 
  
 --- RESET THE COUNTER AND 
 --- UPDATE POOL VIEW WITH PROGRAM CODE DATA FOR REGULARS WITH AN ASSIGNED PROGRAM 
 SET @i = 1 
  
  
 WHILE @i <= 4 
 BEGIN  
  --- UPDATE THE POOL VIEW WITH PROGRAM DATA 
  UPDATE 
   PROGRAM_MOS_CODES 
  SET 
   PROGRAM_MOS_CODE = CASE   
     --- SKILL INFO 
     WHEN @i = 1 THEN ISNULL((SELECT CONVERT(VARCHAR(5), PG.PROGRAM_CODE + REPLICATE('0', 5 - LEN(PG.PROGRAM_CODE))) FROM PROGRAM PG 
        INNER JOIN PROGRAM_AVAILABILITY PA ON PG.PROGRAM_ID = PA.PROGRAM_ID 
        INNER JOIN #PROGRAM_TYPES PT ON (PG.PROGRAM_TYPE = PT.PROGRAM_TYPE AND PT.PROGRAM_TYPE_ID = @i) 
        WHERE PA.CONTRACT_ID = C.CONTRACT_ID AND 
        PA.PROGRAM_AVAILABILITY_ID = (SELECT MAX(PA1.PROGRAM_AVAILABILITY_ID) FROM PROGRAM_AVAILABILITY PA1 
            INNER JOIN PROGRAM PG1 ON PA1.PROGRAM_ID = PG1.PROGRAM_ID 
            INNER JOIN #PROGRAM_TYPES PT1 ON (PG1.PROGRAM_TYPE = PT1.PROGRAM_TYPE AND PT1.PROGRAM_TYPE_ID = @i) 
            WHERE PA1.CONTRACT_ID = PA.CONTRACT_ID AND  
            PT1.PROGRAM_TYPE_ID = PT.PROGRAM_TYPE_ID)), '00000') 
     --- BONUS, MCCF INFO 
     WHEN @i IN (2, 3) THEN PROGRAM_MOS_CODE + ISNULL((SELECT CONVERT(VARCHAR(3), PG.PROGRAM_CODE + REPLICATE('0', 3 - LEN(PG.PROGRAM_CODE))) FROM PROGRAM PG 
        INNER JOIN PROGRAM_AVAILABILITY PA ON PG.PROGRAM_ID = PA.PROGRAM_ID 
        INNER JOIN #PROGRAM_TYPES PT ON (PG.PROGRAM_TYPE = PT.PROGRAM_TYPE AND PT.PROGRAM_TYPE_ID = @i) 
        WHERE PA.CONTRACT_ID = C.CONTRACT_ID AND 
        PA.PROGRAM_AVAILABILITY_ID = (SELECT MAX(PA1.PROGRAM_AVAILABILITY_ID) FROM PROGRAM_AVAILABILITY PA1 
            INNER JOIN PROGRAM PG1 ON PA1.PROGRAM_ID = PG1.PROGRAM_ID 
            INNER JOIN #PROGRAM_TYPES PT1 ON (PG1.PROGRAM_TYPE = PT1.PROGRAM_TYPE AND PT1.PROGRAM_TYPE_ID = @i) 
            WHERE PA1.CONTRACT_ID = PA.CONTRACT_ID AND  
            PT1.PROGRAM_TYPE_ID = PT.PROGRAM_TYPE_ID)), '000') 
     --- LOC INFO 
     WHEN @i = 4 THEN PROGRAM_MOS_CODE + ISNULL((SELECT CONVERT(VARCHAR(2), C1.DUTY_PREFERENCE1) FROM CONTRACT C1  
           INNER JOIN PROGRAM_AVAILABILITY PA ON C1.CONTRACT_ID = PA.CONTRACT_ID 
           INNER JOIN PROGRAM PG ON PA.PROGRAM_ID = PG.PROGRAM_ID 
           INNER JOIN #PROGRAM_TYPES PT ON (PG.PROGRAM_TYPE = PT.PROGRAM_TYPE AND PT.PROGRAM_TYPE_ID = @i) 
           WHERE C1.CONTRACT_ID = C.CONTRACT_ID AND 
           PA.PROGRAM_AVAILABILITY_ID = (SELECT MAX(PA1.PROGRAM_AVAILABILITY_ID) FROM PROGRAM_AVAILABILITY PA1 
               INNER JOIN PROGRAM PG1 ON PA1.PROGRAM_ID = PG1.PROGRAM_ID 
               INNER JOIN #PROGRAM_TYPES PT1 ON (PG1.PROGRAM_TYPE = PT1.PROGRAM_TYPE AND PT1.PROGRAM_TYPE_ID = @i) 
               WHERE PA1.CONTRACT_ID = PA.CONTRACT_ID AND  
               PT1.PROGRAM_TYPE_ID = PT.PROGRAM_TYPE_ID)), '00') 
     END + '-' 
  FROM 
   PROGRAM_MOS_CODES PMC INNER JOIN CONTRACT C ON PMC.CONTRACT_ID = C.CONTRACT_ID 
  WHERE 
   C.COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
   EXISTS (SELECT PA.PROGRAM_AVAILABILITY_ID FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = PMC.CONTRACT_ID)  
  
 
  SET @i = @i + 1 
 END 
 
 
 
 --- UPDATE PROGRAM_MOS_CODE WITH THE PROGRAM ASSIGNMENT DATE 
 UPDATE 
  PROGRAM_MOS_CODES 
 SET 
  PROGRAM_MOS_CODE = PROGRAM_MOS_CODE + ISNULL(CONVERT(VARCHAR(8), (SELECT MAX(PA.PROGRAM_ASSIGNMENT_DATE) FROM PROGRAM_AVAILABILITY PA  
         WHERE PA.CONTRACT_ID = PMC.CONTRACT_ID), 112), SPACE(0)) 
 FROM 
  PROGRAM_MOS_CODES PMC INNER JOIN CONTRACT C ON PMC.CONTRACT_ID = C.CONTRACT_ID 
 WHERE 
  C.COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
  EXISTS (SELECT PA.PROGRAM_AVAILABILITY_ID FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = PMC.CONTRACT_ID)  
  
 
 --- CLEAN UP 
 DROP INDEX #PROGRAM_TYPES.idxPROG_TYPE  
 DROP INDEX #PROGRAM_TYPES.idxPROG_TYPE_ID  
 DROP TABLE #PROGRAM_TYPES  
END]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>