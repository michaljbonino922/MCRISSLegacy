<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[spArmsExport]" directorySegmentName="seg_25" id="7994EF10-B143-E523-0632-741B8396D9AC">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@SEED_DATE  date.me  = NULL ,  
 @CID   int   = NULL,  
 @VIEW_MODE  char(1)  = 'N' 
AS 
 
SET NOCOUNT ON 
SET ANSI_WARNINGS OFF 
 
DECLARE @SeedDate  date.me 
DECLARE @ContractID  int  
DECLARE @ViewMode  char(1) 
 
DECLARE @FromDate  date.me 
DECLARE @ToDate  date.me 
DECLARE @ViewMsg  varchar(75)  
 
SELECT  
 @SeedDate  = @SEED_DATE, 
 @ContractID  = @CID, 
 @ViewMode = COALESCE(@VIEW_MODE, 'N') 
 
SET @FromDate  = COALESCE(@SeedDate, GETDATE()) 
SET @ToDate  = DATEADD(DAY, 15, @FromDate) 
 
 
--- CREATE TEMP TABLE TO HOLD ARMS EXPORT DATA 
CREATE TABLE #ARMS_EXPORT (MARINE_CANDIDATE_ID INT, NWA_ID INT, CONTRACT_ID INT, SHIP_ID INT, RSS_ID INT,  
 SSN CHAR(10) NOT NULL DEFAULT SPACE(0),  
 LAST_NAME CHAR(26) NOT NULL DEFAULT SPACE(0),  
 FIRST_NAME CHAR(20) NOT NULL DEFAULT SPACE(0),  
 MIDDLE_NAME CHAR(20) NOT NULL DEFAULT SPACE(0),  
 SUFFIX CHAR(4) NOT NULL DEFAULT SPACE(0),  
 ARC CHAR(3) NOT NULL DEFAULT SPACE(0),  
 AFADBD CHAR(8) NOT NULL DEFAULT SPACE(0),  
 ARC_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),   
 DATE_OF_BIRTH CHAR(8) NOT NULL DEFAULT SPACE(0),  
 CITIZENSHIP_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 COUNTRY_OF_ORIGIN CHAR(2) NOT NULL DEFAULT SPACE(0),  
 HIGH_GRADE_COMPLETE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 EDUCATION_CERTIFICATION CHAR(1) NOT NULL DEFAULT SPACE(0),  
 COMPONENT_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 CUR_CITY_CODE CHAR(4) NOT NULL DEFAULT SPACE(0),  
 CUR_CITY_TEXT CHAR(30) NOT NULL DEFAULT SPACE(0),  
 CUR_COUNTY_CODE CHAR(3) NOT NULL DEFAULT SPACE(0),  
 CUR_STATE_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 CUR_STREET_ADDRESS CHAR(40) NOT NULL DEFAULT SPACE(0),  
 CUR_ZIPCODE CHAR(9) NOT NULL DEFAULT SPACE(0),  
 DLAB_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_ID_1 INT,  
 DEPENDENT_RELATIONSHIP_1 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_DATE_OF_BIRTH_1 CHAR(8) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_FIRST_NAME_1 CHAR(20) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_MIDDLE_NAME_1 CHAR(20) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_LAST_NAME_1 CHAR(26) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_SUFFIX_1 CHAR(4) NOT NULL DEFAULT SPACE(0),   
 DEPENDENT_ID_2 INT,  
 DEPENDENT_RELATIONSHIP_2 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_DATE_OF_BIRTH_2 CHAR(8) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_FIRST_NAME_2 CHAR(20) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_MIDDLE_NAME_2 CHAR(20) NOT NULL DEFAULT SPACE(0), 
 DEPENDENT_LAST_NAME_2 CHAR(26) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_SUFFIX_2 CHAR(4) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_ID_3 INT,  
 DEPENDENT_RELATIONSHIP_3 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_DATE_OF_BIRTH_3 CHAR(8) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_FIRST_NAME_3 CHAR(20) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_MIDDLE_NAME_3 CHAR(20) NOT NULL DEFAULT SPACE(0), 
 DEPENDENT_LAST_NAME_3 CHAR(26) NOT NULL DEFAULT SPACE(0),  
 DEPENDENT_SUFFIX_3 CHAR(4) NOT NULL DEFAULT SPACE(0),  
 DISTRICT_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),   
 DUTY_PREFERENCE_CODE CHAR(3) NOT NULL DEFAULT SPACE(0),  
 EDPT_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 CONTRACT_BEGIN_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),   
 REFERRAL_COUNT CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ETHNIC_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 FOREIGN_LANGUAGE_CODE_1 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 FOREIGN_LANGUAGE_CODE_2 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 FOREIGN_LANGUAGE_CODE_3 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 FOREIGN_LANGUAGE_CODE_4 CHAR(2) NOT NULL DEFAULT SPACE(0),  
 PROJECTED_TRAINING_ORG_ID INT,  
 TRAINING_ORGANIZATION_ID INT,  
 FUTURE_TRAINING CHAR(3) NOT NULL DEFAULT SPACE(0),  
 HEIGHT CHAR(2) NOT NULL DEFAULT SPACE(0),  
 HOR_CITY_CODE CHAR(4) NOT NULL DEFAULT SPACE(0),  
 HOR_COUNTY_CODE CHAR(3) NOT NULL DEFAULT SPACE(0),  
 HOR_STATE_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 HOR_ZIPCODE CHAR(9) NOT NULL DEFAULT SPACE(0),  
 HOME_TELEPHONE CHAR(10) NOT NULL DEFAULT SPACE(0),  
 WEIGHT CHAR(3) NOT NULL DEFAULT SPACE(0),  
 HIGH_SCHOOL_LAST_YEAR CHAR(4) NOT NULL DEFAULT SPACE(0),  
 MARITAL_STATUS_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 ASVAB_AFQT CHAR(2) NOT NULL DEFAULT SPACE(0),  
 DLAB CHAR(3) NOT NULL DEFAULT SPACE(0),  
 EDPT CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_GT CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_EL CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_CL CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_MM CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_GS CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_AR CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_WK CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_PC CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_NO CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_CS CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_AS CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_MK CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_MC CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_EI CHAR(2) NOT NULL DEFAULT SPACE(0),  
 ASVAB_VE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 MEPS_MCC CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_VERSION CHAR(3) NOT NULL DEFAULT SPACE(0),  
 ASVAB_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),   
 PEBD CHAR(8) NOT NULL DEFAULT SPACE(0),  
 RANK_CODE CHAR(3) NOT NULL DEFAULT SPACE(0), 
 PRESENT_GRADE_RANK_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 PRIMARY_MOS_CODE CHAR(4) NOT NULL DEFAULT SPACE(0),   
 PRIOR_SERVICE_CODE CHAR(2) NOT NULL DEFAULT 'NO',  
 PRIOR_SERVICE_ENTRY_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 PEF_BONUS CHAR(2) NOT NULL DEFAULT SPACE(0),  
 PEF_SKILL CHAR(2) NOT NULL DEFAULT SPACE(0),  
 PEF_MCCF CHAR(2) NOT NULL DEFAULT SPACE(0),  
 PROJECTED_SHIP_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 QSN CHAR(9) NOT NULL DEFAULT SPACE(0),  
 RACE_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 MEPCOM_RACE_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 MOS CHAR(4) NOT NULL DEFAULT SPACE(0),  
 QSN_MCC CHAR(3) NOT NULL DEFAULT SPACE(0), 
 RSS_MCC CHAR(5) NOT NULL DEFAULT SPACE(0),  
 RELIGION_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 RUC CHAR(5) NOT NULL DEFAULT SPACE(0),  
 BONUS_CONTROL_NUMBER CHAR(8) NOT NULL DEFAULT SPACE(0),  
 GENDER_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 SHIP_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 SOURCE_OF_ENTRY_CODE CHAR(4) NOT NULL DEFAULT SPACE(0), 
 TERM_OF_ENLISTMENT CHAR(1) NOT NULL DEFAULT SPACE(0),  
 VALID_DRIVERS_LICENSE_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 RIGHT_UNCORR_VISUAL_ACUITY CHAR(3) NOT NULL DEFAULT SPACE(0),  
 LEFT_UNCORR_VISUAL_ACUITY CHAR(3) NOT NULL DEFAULT SPACE(0),  
 RIGHT_CORR_VISUAL_ACUITY CHAR(3) NOT NULL DEFAULT SPACE(0),  
 LEFT_CORR_VISUAL_ACUITY CHAR(3) NOT NULL DEFAULT SPACE(0),  
 VISUAL_COLOR_CODE CHAR(1) NOT NULL DEFAULT SPACE(0),  
 PROJECTED_TRAINING_COMPLETE_DATE CHAR(8) NOT NULL DEFAULT SPACE(0),  
 FILLER1 CHAR(99) NOT NULL DEFAULT SPACE(0),  
 BIRTH_STATE_CODE CHAR(2) NOT NULL DEFAULT SPACE(0),  
 EYE_COLOR CHAR(5) NOT NULL DEFAULT SPACE(0),  
 HAIR_COLOR CHAR(5) NOT NULL DEFAULT SPACE(0),  
 FILLER2 CHAR(100) NOT NULL DEFAULT SPACE(0),  
 EXPORTED_DATA CHAR(1000) NOT NULL DEFAULT SPACE(0)) 
 
 
--- RETRIEVE CONTRACT IDs FOR ALL CONTRACTS WHOSE PADD IS IN THE DATE WINDOW 
--- AND ALL SHIPPERS WHO SHIPPED IN THE DATE WINDOW 
 
--- MCRISS SHIPPERS 
INSERT INTO #ARMS_EXPORT  
 (MARINE_CANDIDATE_ID, NWA_ID, CONTRACT_ID, SHIP_ID, RSS_ID) 
SELECT     
 N.MARINE_CANDIDATE_ID, N.NWA_ID, C.CONTRACT_ID, S.SHIP_ID,  
 N.ORGANIZATION_OF_RECORD_ID AS RSS_ID 
FROM 
 SHIPPER S INNER JOIN CONTRACT C ON  
  (S.CONTRACT_ID = C.CONTRACT_ID AND 
  DATEDIFF(DAY, @FromDate, S.SHIP_DATE) BETWEEN -7 AND 1 AND   
  S.TRAINING_ORGANIZATION_ID IN (1, 2) AND 
  (@ContractID IS NULL OR (@ContractID IS NOT NULL AND C.CONTRACT_ID = @ContractID)) AND 
  C.COMPONENT_CODE IN ('B5', 'K4', 'K5', 'K8', 'K9')) 
 INNER JOIN NWA N ON C.NWA_ID = N.NWA_ID 
 
--- CONTRACTS SCHEDULED TO SHIP IN DATE WINDOW 
INSERT INTO #ARMS_EXPORT  
 (MARINE_CANDIDATE_ID, NWA_ID, CONTRACT_ID, SHIP_ID, RSS_ID) 
SELECT 
 N.MARINE_CANDIDATE_ID, N.NWA_ID, C.CONTRACT_ID, NULL,  
 N.ORGANIZATION_OF_RECORD_ID AS RSS_ID 
FROM 
 CONTRACT C INNER JOIN NWA N ON  
  (C.NWA_ID = N.NWA_ID AND 
  (@ContractID IS NULL OR (@ContractID IS NOT NULL AND C.CONTRACT_ID = @ContractID)) AND 
  NOT EXISTS (SELECT 1 FROM #ARMS_EXPORT AE WHERE AE.CONTRACT_ID = C.CONTRACT_ID) AND 
  DATEDIFF(DAY, @FromDate, C.PROJECTED_SHIP_DATE) BETWEEN -7 AND 15 AND 
  C.PROJECTED_TRAINING_ORG_ID IN (1, 2) AND 
  C.COMPONENT_CODE IN ('B5', 'K4', 'K5', 'K8', 'K9') AND 
  C.DISCHARGE_DATE IS NULL) 
 
 
--- MCC DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 RSS_MCC = RSS.MCC_CODE 
FROM 
 #ARMS_EXPORT AE INNER JOIN RECRUITING_ORGANIZATION RSS ON AE.RSS_ID = RSS.ORGANIZATION_ID  
 
 
--- PERSON DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 LAST_NAME  = COALESCE(P.LAST_NAME, SPACE(0)), 
 MIDDLE_NAME = COALESCE(P.LEGAL_MIDDLE_NAME, SPACE(0)), 
 FIRST_NAME = COALESCE(P.FIRST_NAME, SPACE(0)), 
 SSN  = COALESCE('0' + P.SOCIAL_SECURITY_NUMBER, SPACE(0)), 
 SUFFIX  = COALESCE(P.SUFFIX_CD, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN PERSON P ON AE.MARINE_CANDIDATE_ID = P.PERSON_ID 
 
--- MARINE CANDIDATE DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 DATE_OF_BIRTH    = COALESCE(CONVERT(CHAR(8), MC.DATE_OF_BIRTH, 112), SPACE(0)), 
 BIRTH_STATE_CODE  = COALESCE(MC.BIRTH_STATE, SPACE(0)), 
 CITIZENSHIP_CODE  = COALESCE(MC.CITIZENSHIP, SPACE(0)), 
 COUNTRY_OF_ORIGIN  = COALESCE(MC.COUNTRY_OF_ORIGIN, SPACE(0)), 
 ETHNIC_CODE   = COALESCE(MC.ETHNIC_CODE, SPACE(0)), 
 MARITAL_STATUS_CODE  = COALESCE(MC.MARITAL_STATUS_CODE, SPACE(0)), 
 RACE_CODE   = COALESCE(MC.RACE_CODE, SPACE(0)), 
 MEPCOM_RACE_CODE   = COALESCE(MC.MEPCOM_RACE_CODE, SPACE(0)),  
 RELIGION_CODE   = COALESCE(MC.RELIGION_CODE, SPACE(0)), 
 VALID_DRIVERS_LICENSE_CODE = CASE  
      WHEN MC.DRIVER_LICENSE_EXP IS NOT NULL AND  
       MC.DRIVER_LICENSE_NUM IS NOT NULL AND 
       MC.DRIVER_LICENSE_STATE IS NOT NULL  
      THEN 'Y' 
      ELSE 'N' 
      END, 
 GENDER_CODE   = COALESCE(MC.GENDER_CODE, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN MARINE_CANDIDATE MC ON AE.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID 
 
 
--- CONTRACT DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 COMPONENT_CODE    = COALESCE(C.COMPONENT_CODE, SPACE(0)), 
 DUTY_PREFERENCE_CODE  = COALESCE(C.DUTY_PREFERENCE1, SPACE(0)), 
 CONTRACT_BEGIN_DATE  = COALESCE(CONVERT(CHAR(8), C.CONTRACT_BEGIN_DATE, 112), SPACE(0)), 
 PROJECTED_SHIP_DATE   = COALESCE(CONVERT(CHAR(8), C.PROJECTED_SHIP_DATE, 112), SPACE(0)), 
 TERM_OF_ENLISTMENT  = COALESCE(CONVERT(CHAR(1), C.TERM_OF_ENLISTMENT), SPACE(0)), 
 SOURCE_OF_ENTRY_CODE  = COALESCE(C.SOURCE_OF_ENTRY_CODE, SPACE(0)), 
 PROJECTED_TRAINING_ORG_ID  = C.PROJECTED_TRAINING_ORG_ID  
FROM 
 #ARMS_EXPORT AE INNER JOIN CONTRACT C ON AE.CONTRACT_ID = C.CONTRACT_ID 
 
--- SHIPPER DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 AFADBD    = COALESCE(CONVERT(CHAR(8), S.AFADBD, 112), SPACE(0)), 
 PRESENT_GRADE_RANK_DATE  = COALESCE(CONVERT(CHAR(8), S.PAY_GRADE_ED_DATE, 112), SPACE(0)), 
 PEBD    = COALESCE(CONVERT(CHAR(8), S.PAY_ENTRY_BASE_DATE, 112), SPACE(0)), 
 SHIP_DATE   = COALESCE(CONVERT(CHAR(8), S.SHIP_DATE, 112), SPACE(0)), 
 TRAINING_ORGANIZATION_ID = S.TRAINING_ORGANIZATION_ID 
FROM 
 #ARMS_EXPORT AE INNER JOIN SHIPPER S ON AE.SHIP_ID = S.SHIP_ID 
 
 
 
--- QSN DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 QSN   = COALESCE(QSN.QSN_ID, SPACE(0)), 
 RUC   = COALESCE(QSN.RUC, SPACE(0)), 
 BONUS_CONTROL_NUMBER = COALESCE(QSN.BONUS_CONTROL_NUMBER, SPACE(0)), 
 MOS   = COALESCE(QSN.MOS, SPACE(0)), 
 QSN_MCC   = COALESCE(QSN.MCC_CODE, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN QSN ON AE.CONTRACT_ID = QSN.CONTRACT_ID 
 
 
 
--- CURRENT ADDRESS DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 CUR_CITY_CODE   = COALESCE(CUR.CITY_CODE, SPACE(0)), 
 CUR_CITY_TEXT   = COALESCE(GL.CITY_TEXT, SPACE(0)), 
 CUR_COUNTY_CODE  = COALESCE(CUR.COUNTY_CODE, SPACE(0)), 
 CUR_STATE_CODE   = COALESCE(CUR.STATE_CODE, SPACE(0)), 
 CUR_ZIPCODE   = COALESCE(CUR.ZIPCODE, SPACE(0)), 
 CUR_STREET_ADDRESS  = COALESCE(CUR.STREET_ADDRESS, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_ADDRESS CUR ON  
  (AE.MARINE_CANDIDATE_ID = CUR.MARINE_CANDIDATE_ID AND 
  CUR.ADDRESS_TYPE = 'C') 
 LEFT OUTER JOIN GEO_LOCATION GL ON 
  (CUR.STATE_CODE = GL.STATE_CODE AND 
  CUR.COUNTY_CODE = GL.COUNTY_CODE AND 
  CUR.CITY_CODE = GL.CITY_CODE) 
 
 
--- HOR ADDRESS DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 HOR_CITY_CODE   = COALESCE(HOR.CITY_CODE, SPACE(0)), 
 HOR_COUNTY_CODE  = COALESCE(HOR.COUNTY_CODE, SPACE(0)), 
 HOR_STATE_CODE   = COALESCE(HOR.STATE_CODE, SPACE(0)), 
 HOR_ZIPCODE   = COALESCE(HOR.ZIPCODE, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_ADDRESS HOR ON  
  (AE.MARINE_CANDIDATE_ID = HOR.MARINE_CANDIDATE_ID AND 
  HOR.ADDRESS_TYPE = 'H') 
 
--- ASVAB DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 ASVAB_AFQT  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.AFQT_SCORE)) +  
    CONVERT(CHAR(2), CA.AFQT_SCORE)), '00'), 
 ASVAB_GT  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3 - LEN(CA.GT_SCORE)) +  
    CONVERT(CHAR(3), CA.GT_SCORE)), '000'), 
 ASVAB_MM  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3 - LEN(CA.MM_SCORE)) +  
    CONVERT(CHAR(3), CA.MM_SCORE)), '000'), 
 ASVAB_EL  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3 - LEN(CA.EL_SCORE)) +  
    CONVERT(CHAR(3), CA.EL_SCORE)), '000'), 
 ASVAB_CL  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3 - LEN(CA.CL_SCORE)) +  
    CONVERT(CHAR(3), CA.CL_SCORE)), '000'), 
 ASVAB_AR  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.AR_SUBTEST)) +  
    CONVERT(CHAR(2), CA.AR_SUBTEST)), '00'), 
 ASVAB_WK  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.WK_SUBTEST)) +  
    CONVERT(CHAR(2), CA.WK_SUBTEST)), '00'), 
 ASVAB_AS  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.AS_SUBTEST)) +  
    CONVERT(CHAR(2), CA.AS_SUBTEST)), '00'), 
 ASVAB_CS  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.CS_SUBTEST)) +  
    CONVERT(CHAR(2), CA.CS_SUBTEST)), '00'), 
 ASVAB_EI  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.EI_SUBTEST)) +  
    CONVERT(CHAR(2), CA.EI_SUBTEST)), '00'), 
 ASVAB_GS  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.GS_SUBTEST)) +  
    CONVERT(CHAR(2), CA.GS_SUBTEST)), '00'), 
 ASVAB_MC  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.MC_SUBTEST)) +  
    CONVERT(CHAR(2), CA.MC_SUBTEST)), '00'), 
 ASVAB_MK  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.MK_SUBTEST)) +  
    CONVERT(CHAR(2), CA.MK_SUBTEST)), '00'), 
 ASVAB_NO  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.NO_SUBTEST)) +  
    CONVERT(CHAR(2), CA.NO_SUBTEST)), '00'), 
 ASVAB_PC  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.PC_SUBTEST)) +  
    CONVERT(CHAR(2), CA.PC_SUBTEST)), '00'), 
 ASVAB_VE  = COALESCE(CONVERT(CHAR(2), REPLICATE('0', 2 - LEN(CA.VE_SUBTEST)) +  
    CONVERT(CHAR(2), CA.VE_SUBTEST)), '00'), 
 ASVAB_VERSION  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3 - LEN(CA.VERSION)) +  
    CONVERT(CHAR(3), CA.VERSION)), '000'), 
 ASVAB_DATE  = COALESCE(CONVERT(CHAR(8), CA.ASVAB_DATE, 112), SPACE(0)), 
 MEPS_MCC  = COALESCE(M.MCC_CODE, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_ASVAB CA ON  
  (AE.MARINE_CANDIDATE_ID = CA.MARINE_CANDIDATE_ID AND 
  CA.ASVAB_DATE = (SELECT MAX(CA1.ASVAB_DATE) FROM CANDIDATE_ASVAB CA1 
     WHERE CA1.MARINE_CANDIDATE_ID = CA.MARINE_CANDIDATE_ID)) 
 INNER JOIN MEPS_ORGANIZATION_LOOKUP M ON CA.MEPS_ORGANIZATION_ID = M.MEPS_ORGANIZATION_ID 
 
--- MEDICAL EXAM DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 LEFT_CORR_VISUAL_ACUITY  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3- LEN(CME.LEFT_CORR_VISUAL_ACUITY)) + 
      CONVERT(CHAR(3), CME.LEFT_CORR_VISUAL_ACUITY)), SPACE(0)), 
 RIGHT_CORR_VISUAL_ACUITY  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3- LEN(CME.RIGHT_CORR_VISUAL_ACUITY)) + 
      CONVERT(CHAR(3), CME.RIGHT_CORR_VISUAL_ACUITY)), SPACE(0)), 
 LEFT_UNCORR_VISUAL_ACUITY  = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3- LEN(CME.LEFT_UNCORR_VISUAL_ACUITY)) + 
      CONVERT(CHAR(3), CME.LEFT_UNCORR_VISUAL_ACUITY)), SPACE(0)),  
 RIGHT_UNCORR_VISUAL_ACUITY = COALESCE(CONVERT(CHAR(3), REPLICATE('0', 3- LEN(CME.RIGHT_UNCORR_VISUAL_ACUITY)) + 
      CONVERT(CHAR(3), CME.RIGHT_UNCORR_VISUAL_ACUITY)), SPACE(0)), 
 VISUAL_COLOR_CODE   = COALESCE(CME.VISUAL_COLOR, SPACE(0)), 
 HEIGHT     = COALESCE(REPLICATE('0', 2 - LEN(CME.HEIGHT)) + CME.HEIGHT, '00'), 
 WEIGHT     = COALESCE(REPLICATE('0', 3 - LEN(CME.WEIGHT)) + CME.WEIGHT, '000') 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_MEDICAL_EXAM CME ON  
  (AE.MARINE_CANDIDATE_ID = CME.MARINE_CANDIDATE_ID AND 
  CME.MEDICAL_EXAM_TYPE = 'FULL' AND 
  CME.MEDICAL_EXAM_DATE = (SELECT MAX(CME1.MEDICAL_EXAM_DATE)                
      FROM CANDIDATE_MEDICAL_EXAM CME1 
      WHERE CME1.MARINE_CANDIDATE_ID = CME.MARINE_CANDIDATE_ID AND 
      CME1.MEDICAL_EXAM_TYPE = CME.MEDICAL_EXAM_TYPE)) 
 
 
--- DISTRICT CODE AND REFERRAL COUNT 
UPDATE 
 #ARMS_EXPORT 
SET 
 DISTRICT_CODE = (SELECT CASE DIST.ORGANIZATION_ID 
     WHEN 903 THEN  '01'                
     WHEN 904 THEN  '04'                
     WHEN 905 THEN  '06'                
     WHEN 906 THEN  '08'                
     WHEN 907 THEN  '09'                
     WHEN 908 THEN  '12'                
     ELSE SPACE(0) 
     END  
    FROM RECRUITING_ORGANIZATION DIST  
     INNER JOIN ORGANIZATION_MAP RS ON DIST.ORGANIZATION_ID = RS.PARENT_ORGANIZATION_ID 
     INNER JOIN ORGANIZATION_MAP RSS ON  
      (RS.CHILD_ORGANIZATION_ID = RSS.PARENT_ORGANIZATION_ID AND 
      RSS.CHILD_ORGANIZATION_ID = AE.RSS_ID)),  
 REFERRAL_COUNT = (SELECT CASE  
     WHEN COUNT(R.DEP_CONTRACT_ID) < 10 THEN '0' + CONVERT(CHAR(1), COUNT(R.DEP_CONTRACT_ID)) 
     ELSE CONVERT(CHAR(2), COUNT(R.DEP_CONTRACT_ID)) 
     END 
    FROM REFERRAL R WHERE R.DEP_CONTRACT_ID = AE.CONTRACT_ID) 
FROM 
 #ARMS_EXPORT AE  
 
 
 
--- FOREIGN LANGUAGE DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 FOREIGN_LANGUAGE_CODE_1 = COALESCE((SELECT TOP 1 CL.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID  
      ORDER BY CL.LANGUAGE_CODE DESC), SPACE(0)), 
 FOREIGN_LANGUAGE_CODE_2 = COALESCE((SELECT TOP 1 CL.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
      CL.LANGUAGE_CODE != (SELECT TOP 1 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
         WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
         ORDER BY CL1.LANGUAGE_CODE DESC) 
      ORDER BY CL.LANGUAGE_CODE DESC), SPACE(0)), 
 FOREIGN_LANGUAGE_CODE_3 = COALESCE((SELECT TOP 1 CL.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
      CL.LANGUAGE_CODE NOT IN (SELECT TOP 2 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
         WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
         ORDER BY CL1.LANGUAGE_CODE DESC) 
      ORDER BY CL.LANGUAGE_CODE DESC), SPACE(0)), 
 FOREIGN_LANGUAGE_CODE_4 = COALESCE((SELECT TOP 1 CL.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
      CL.LANGUAGE_CODE NOT IN (SELECT TOP 3 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
         WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
         ORDER BY CL1.LANGUAGE_CODE DESC) 
      ORDER BY CL.LANGUAGE_CODE DESC), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE  
 
 
--- DEPENDENT DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 DEPENDENT_ID_1   = CD1.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_1  = COALESCE(CD1.DEPENDENT_TYPE, SPACE(0)), 
 DEPENDENT_DATE_OF_BIRTH_1 = COALESCE(CONVERT(CHAR(8), CD1.DATE_OF_BIRTH, 112), SPACE(0)), 
 DEPENDENT_LAST_NAME_1   = COALESCE(CD1.LAST_NAME, SPACE(0)), 
 DEPENDENT_FIRST_NAME_1   = COALESCE(CD1.FIRST_NAME, SPACE(0)), 
 DEPENDENT_MIDDLE_NAME_1  = COALESCE(CD1.MIDDLE_NAME, SPACE(0)), 
 DEPENDENT_SUFFIX_1   = COALESCE(CD1.SUFFIX_CD, SPACE(0)), 
 DEPENDENT_ID_2   = CD2.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_2  = COALESCE(CD2.DEPENDENT_TYPE, SPACE(0)), 
 DEPENDENT_DATE_OF_BIRTH_2 = COALESCE(CONVERT(CHAR(8), CD2.DATE_OF_BIRTH, 112), SPACE(0)), 
 DEPENDENT_LAST_NAME_2   = COALESCE(CD2.LAST_NAME, SPACE(0)), 
 DEPENDENT_FIRST_NAME_2   = COALESCE(CD2.FIRST_NAME, SPACE(0)), 
 DEPENDENT_MIDDLE_NAME_2  = COALESCE(CD2.MIDDLE_NAME, SPACE(0)), 
 DEPENDENT_SUFFIX_2   = COALESCE(CD2.SUFFIX_CD, SPACE(0)), 
 DEPENDENT_ID_3   = CD3.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_3  = COALESCE(CD3.DEPENDENT_TYPE, SPACE(0)), 
 DEPENDENT_DATE_OF_BIRTH_3 = COALESCE(CONVERT(CHAR(8), CD3.DATE_OF_BIRTH, 112), SPACE(0)), 
 DEPENDENT_LAST_NAME_3   = COALESCE(CD3.LAST_NAME, SPACE(0)), 
 DEPENDENT_FIRST_NAME_3   = COALESCE(CD3.FIRST_NAME, SPACE(0)), 
 DEPENDENT_MIDDLE_NAME_3  = COALESCE(CD3.MIDDLE_NAME, SPACE(0)), 
 DEPENDENT_SUFFIX_3   = COALESCE(CD3.SUFFIX_CD, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE LEFT OUTER JOIN CANDIDATE_DEPENDENT CD1 ON  
  (AE.MARINE_CANDIDATE_ID = CD1.MARINE_CANDIDATE_ID AND 
  CD1.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID) FROM CANDIDATE_DEPENDENT CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD1.MARINE_CANDIDATE_ID)) 
 LEFT OUTER JOIN CANDIDATE_DEPENDENT CD2 ON  
  (AE.MARINE_CANDIDATE_ID = CD2.MARINE_CANDIDATE_ID AND 
  CD2.DEPENDENT_ID > CD1.DEPENDENT_ID AND 
  CD2.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID) FROM CANDIDATE_DEPENDENT CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD2.MARINE_CANDIDATE_ID)) 
 LEFT OUTER JOIN CANDIDATE_DEPENDENT CD3 ON  
  (AE.MARINE_CANDIDATE_ID = CD3.MARINE_CANDIDATE_ID AND 
  CD3.DEPENDENT_ID > CD2.DEPENDENT_ID AND 
  CD3.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID) FROM CANDIDATE_DEPENDENT CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD3.MARINE_CANDIDATE_ID)) 
 
 
--- HOME TELEPHONE DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 HOME_TELEPHONE = LEFT(COALESCE(CT.AREA_CODE, SPACE(0)) + COALESCE(CT.TELEPHONE_NUMBER, SPACE(0)), 10) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_TELEPHONE CT ON  
  (AE.MARINE_CANDIDATE_ID = CT.MARINE_CANDIDATE_ID AND 
  CT.TELEPHONE_TYPE = 'H') 
 
 
--- ARC DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 ARC   = COALESCE(REPLICATE('0', 3 - LEN(ARC.SPECIAL_EXAM_SCORE)) +  
     CONVERT(CHAR(3), ARC.SPECIAL_EXAM_SCORE), SPACE(0)), 
 ARC_DATE  = COALESCE(CONVERT(CHAR(8), ARC.SPECIAL_EXAM_DATE, 112), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_SPECIAL_EXAM ARC ON  
  (AE.MARINE_CANDIDATE_ID = ARC.MARINE_CANDIDATE_ID AND 
  ARC.SPECIAL_EXAM_TYPE = 'ARC' AND 
  ARC.SPECIAL_EXAM_DATE = (SELECT MAX(ARC1.SPECIAL_EXAM_DATE) FROM CANDIDATE_SPECIAL_EXAM ARC1 
      WHERE ARC1.MARINE_CANDIDATE_ID = ARC.MARINE_CANDIDATE_ID AND 
      ARC1.SPECIAL_EXAM_TYPE = ARC.SPECIAL_EXAM_TYPE)) 
 
 
--- DLAB DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 DLAB   = COALESCE(REPLICATE('0', 3 - LEN(DLAB.SPECIAL_EXAM_SCORE)) +  
     CONVERT(CHAR(3), DLAB.SPECIAL_EXAM_SCORE), SPACE(0)), 
 DLAB_DATE  = COALESCE(CONVERT(CHAR(8), DLAB.SPECIAL_EXAM_DATE, 112), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_SPECIAL_EXAM DLAB ON  
  (AE.MARINE_CANDIDATE_ID = DLAB.MARINE_CANDIDATE_ID AND 
  DLAB.SPECIAL_EXAM_TYPE = 'DLAB' AND 
  DLAB.SPECIAL_EXAM_DATE = (SELECT MAX(DLAB1.SPECIAL_EXAM_DATE) FROM CANDIDATE_SPECIAL_EXAM DLAB1 
      WHERE DLAB1.MARINE_CANDIDATE_ID = DLAB.MARINE_CANDIDATE_ID AND 
      DLAB1.SPECIAL_EXAM_TYPE = DLAB.SPECIAL_EXAM_TYPE)) 
 
--- EDPT DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 EDPT   = COALESCE(REPLICATE('0', 3 - LEN(EDPT.SPECIAL_EXAM_SCORE)) +  
     CONVERT(CHAR(3), EDPT.SPECIAL_EXAM_SCORE), SPACE(0)), 
 EDPT_DATE  = COALESCE(CONVERT(CHAR(8), EDPT.SPECIAL_EXAM_DATE, 112), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_SPECIAL_EXAM EDPT ON  
  (AE.MARINE_CANDIDATE_ID = EDPT.MARINE_CANDIDATE_ID AND 
  EDPT.SPECIAL_EXAM_TYPE = 'EDPT' AND 
  EDPT.SPECIAL_EXAM_DATE = (SELECT MAX(EDPT1.SPECIAL_EXAM_DATE) FROM CANDIDATE_SPECIAL_EXAM EDPT1 
      WHERE EDPT1.MARINE_CANDIDATE_ID = EDPT.MARINE_CANDIDATE_ID AND 
      EDPT1.SPECIAL_EXAM_TYPE = EDPT.SPECIAL_EXAM_TYPE)) 
 
--- EDUCATION DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 HIGH_GRADE_COMPLETE  = COALESCE(CONVERT(CHAR(2), CE.EDUCATION_LEVEL), SPACE(0)), 
 EDUCATION_CERTIFICATION = COALESCE(CE.EDUCATION_CODE, SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_EDUCATION CE ON  
  (AE.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID AND 
  CE.SCHOOL_END_DATE = (SELECT MAX(CE1.SCHOOL_END_DATE) FROM CANDIDATE_EDUCATION CE1 
     WHERE CE1.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID)) 
 
--- PRIOR SERVICE 
UPDATE 
 #ARMS_EXPORT 
SET 
 PRIOR_SERVICE_ENTRY_DATE  = COALESCE(CONVERT(CHAR(8), CPS.BEGIN_DATE), SPACE(0)), 
 PRIOR_SERVICE_CODE   = COALESCE(CPS.COMPONENT_CODE, 'NO') 
FROM 
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_PRIOR_SERVICE CPS ON  
  (AE.MARINE_CANDIDATE_ID = CPS.MARINE_CANDIDATE_ID AND 
  CPS.BEGIN_DATE = (SELECT MAX(CPS1.BEGIN_DATE) FROM CANDIDATE_PRIOR_SERVICE CPS1 
     WHERE CPS1.MARINE_CANDIDATE_ID = CPS.MARINE_CANDIDATE_ID)) 
 
 
--- FUTURE TRAINING 
UPDATE 
 #ARMS_EXPORT 
SET 
 FUTURE_TRAINING = CASE  
    WHEN TRNG.MCC_CODE IS NULL OR TRNG.MCC_CODE = '00000' THEN SPACE(0) 
    ELSE TRNG.MCC_CODE  
    END 
FROM 
 #ARMS_EXPORT AE INNER JOIN TRAINING_ORGANIZATION TRNG ON  
  COALESCE(AE.TRAINING_ORGANIZATION_ID, AE.PROJECTED_TRAINING_ORG_ID) = TRNG.TRAINING_ORGANIZATION_ID 
 
 
 
--- HIGH SCHOOL LAST YEAR  
UPDATE  
 #ARMS_EXPORT 
SET 
 HIGH_SCHOOL_LAST_YEAR = COALESCE(CONVERT(CHAR(4), YEAR(CE.SCHOOL_END_DATE)), SPACE(0))  
FROM  
 #ARMS_EXPORT AE INNER JOIN CANDIDATE_EDUCATION CE ON  
  (AE.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID AND 
   CE.EDUCATION_LEVEL = (SELECT MAX(CE1.EDUCATION_LEVEL) FROM CANDIDATE_EDUCATION CE1 
      INNER JOIN HIGH_SCHOOL HS ON (CE.SCHOOL_CODE = HS.SCHOOL_CODE AND  
          HS.SCHOOL_TYPE = 'HS') 
      WHERE CE1.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID)) 
 
 
--- PEF SKILL 
UPDATE 
 #ARMS_EXPORT 
SET 
 PEF_SKILL = COALESCE(LEFT(PG.PROGRAM_CODE, 2), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN  PROGRAM_AVAILABILITY PA ON AE.CONTRACT_ID = PA.CONTRACT_ID 
 INNER JOIN PROGRAM PG ON  
  (PA.PROGRAM_ID = PG.PROGRAM_ID AND  
  PG.PROGRAM_TYPE IN ('MEOP', 'QEP', 'EOP')) 
 
 
--- PEF BONUS 
UPDATE 
 #ARMS_EXPORT 
SET 
 PEF_BONUS = COALESCE(LEFT(PG.PROGRAM_CODE, 2), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN  PROGRAM_AVAILABILITY PA ON AE.CONTRACT_ID = PA.CONTRACT_ID 
 INNER JOIN PROGRAM PG ON  
  (PA.PROGRAM_ID = PG.PROGRAM_ID AND  
  PG.PROGRAM_TYPE = 'EBP') 
 
--- PEF MCCF 
UPDATE 
 #ARMS_EXPORT 
SET 
 PEF_MCCF = COALESCE(LEFT(PG.PROGRAM_CODE, 2), SPACE(0)) 
FROM 
 #ARMS_EXPORT AE INNER JOIN PROGRAM_AVAILABILITY PA ON AE.CONTRACT_ID = PA.CONTRACT_ID 
 INNER JOIN PROGRAM PG ON  
  (PA.PROGRAM_ID = PG.PROGRAM_ID AND  
  PG.PROGRAM_TYPE = 'MCCF') 
 
 
--- RANK CODE AND PRIMARY MOS CODE 
UPDATE 
 #ARMS_EXPORT 
SET 
 --- SET RANK_CODE BASED ON REFERRAL COUNT 
 RANK_CODE = CASE  
   WHEN REFERRAL_COUNT >= 2 THEN 'E2' 
   ELSE 'E1' 
   END, 
 PRIMARY_MOS_CODE = CASE  
    WHEN LEN(QSN) > 0 OR  
     (LEN(PEF_SKILL) = 0 AND LEN(PEF_BONUS) = 0 AND LEN(PEF_MCCF) = 0)  
    THEN '9900' 
    WHEN LEN(PEF_SKILL) != 0 OR LEN(PEF_BONUS) != 0 OR LEN(PEF_MCCF) != 0  
    THEN '9971' 
    ELSE SPACE(0) 
    END 
 
 
 
--- UPDATE FILLERS 
UPDATE 
 #ARMS_EXPORT 
SET 
 FILLER1 = SPACE(99),  
 FILLER2 = SPACE(100)  
 
 
--- EXPORTED DATA 
UPDATE 
 #ARMS_EXPORT 
SET 
 EXPORTED_DATA =  
  SSN + LAST_NAME + FIRST_NAME + MIDDLE_NAME + SUFFIX +  
  ARC + AFADBD + ARC_DATE + DATE_OF_BIRTH + CITIZENSHIP_CODE + COUNTRY_OF_ORIGIN + 
  HIGH_GRADE_COMPLETE + EDUCATION_CERTIFICATION + COMPONENT_CODE +  
  CUR_CITY_CODE + CUR_CITY_TEXT + CUR_COUNTY_CODE + CUR_STATE_CODE + CUR_STREET_ADDRESS + CUR_ZIPCODE +  
  DLAB_DATE +  
  DEPENDENT_RELATIONSHIP_1 + DEPENDENT_DATE_OF_BIRTH_1 + DEPENDENT_FIRST_NAME_1 + DEPENDENT_MIDDLE_NAME_1 + 
  DEPENDENT_LAST_NAME_1 + DEPENDENT_SUFFIX_1 + DEPENDENT_RELATIONSHIP_2 + DEPENDENT_DATE_OF_BIRTH_2 + DEPENDENT_FIRST_NAME_2 + DEPENDENT_MIDDLE_NAME_2 + 
  DEPENDENT_LAST_NAME_2 + DEPENDENT_SUFFIX_2 + DEPENDENT_RELATIONSHIP_3 + DEPENDENT_DATE_OF_BIRTH_3 + DEPENDENT_FIRST_NAME_3 + DEPENDENT_MIDDLE_NAME_3 + 
  DEPENDENT_LAST_NAME_3 + DEPENDENT_SUFFIX_3 +  
  DISTRICT_CODE +  
  DUTY_PREFERENCE_CODE + EDPT_DATE + CONTRACT_BEGIN_DATE +  
  REFERRAL_COUNT + ETHNIC_CODE +  
  FOREIGN_LANGUAGE_CODE_1 + FOREIGN_LANGUAGE_CODE_2 + FOREIGN_LANGUAGE_CODE_3 + FOREIGN_LANGUAGE_CODE_4 +  
  FUTURE_TRAINING + HEIGHT +  
  HOR_CITY_CODE + HOR_COUNTY_CODE + HOR_STATE_CODE + HOR_ZIPCODE + HOME_TELEPHONE +  
  WEIGHT + HIGH_SCHOOL_LAST_YEAR + MARITAL_STATUS_CODE +  
  ASVAB_AFQT + DLAB + EDPT +      
  ASVAB_GT + ASVAB_EL + ASVAB_CL + ASVAB_MM +  
  ASVAB_GS + ASVAB_AR + ASVAB_WK +  
  ASVAB_PC + ASVAB_NO + ASVAB_CS +  
  ASVAB_AS + ASVAB_MK + ASVAB_MC +  
  ASVAB_EI + ASVAB_VE +  
  MEPS_MCC + ASVAB_VERSION + ASVAB_DATE +  
  PEBD +  
  RANK_CODE + PRESENT_GRADE_RANK_DATE +  
  PRIMARY_MOS_CODE + PRIOR_SERVICE_CODE + PRIOR_SERVICE_ENTRY_DATE +  
  PEF_BONUS + PEF_SKILL + PEF_MCCF +  
  PROJECTED_SHIP_DATE + QSN + RACE_CODE +  
  MOS + QSN_MCC +  
  RSS_MCC +  
  RELIGION_CODE + RUC + BONUS_CONTROL_NUMBER + GENDER_CODE + SHIP_DATE +  
  SOURCE_OF_ENTRY_CODE + TERM_OF_ENLISTMENT + VALID_DRIVERS_LICENSE_CODE +  
  RIGHT_UNCORR_VISUAL_ACUITY + LEFT_UNCORR_VISUAL_ACUITY +  
  RIGHT_CORR_VISUAL_ACUITY + LEFT_CORR_VISUAL_ACUITY +  
  VISUAL_COLOR_CODE + PROJECTED_TRAINING_COMPLETE_DATE +  
  MEPCOM_RACE_CODE + FILLER1 +  
  BIRTH_STATE_CODE + EYE_COLOR + HAIR_COLOR + FILLER2 
 
 
--- POPULATE ARMS EXPORT 
IF @ViewMode = 'N' 
BEGIN 
 --- INSERT DATA INTO ARMS_EXPORT 
 --- INSERT INTO ARMS_EXPORT_TEST (CONTRACT_ID, EXPORTED, EXPORT_DATE, EXPORTED_DATA, USER_LOGIN, UPDATE_DATE) 
 INSERT INTO ARMS_EXPORT (CONTRACT_ID, EXPORTED, EXPORT_DATE, EXPORTED_DATA, USER_LOGIN, UPDATE_DATE) 
 SELECT 
  AE.CONTRACT_ID, 'N',  
  GETDATE(), AE.EXPORTED_DATA, 
  'ARMS_INTERFACE', GETDATE() 
 FROM 
  #ARMS_EXPORT AE 
END 
ELSE 
BEGIN 
 --- VIEW DATA BUT DO NOT INSERT IT INTO THE ARMS_EXPORT TABLE 
 SELECT 
  AE.CONTRACT_ID, 'N',  
  GETDATE(), AE.EXPORTED_DATA, 
  'ARMS_INTERFACE', GETDATE() 
  --- , AE.* 
 FROM 
  #ARMS_EXPORT AE 
END 
 
--- CLEAN UP 
DROP TABLE #ARMS_EXPORT  
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>