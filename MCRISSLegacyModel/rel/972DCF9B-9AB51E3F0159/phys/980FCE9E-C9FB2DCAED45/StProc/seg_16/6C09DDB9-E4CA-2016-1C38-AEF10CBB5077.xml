<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1138" directorySegmentName="seg_16" id="6C09DDB9-E4CA-2016-1C38-AEF10CBB5077">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Id      uniqueiden..er, 
 @ProspectId    uniqueiden..er,   
 @ProspectProfessedExamType varchar(1), 
 @Score1     .oat=null, 
 @Score2     int=null, 
 @Score3     int=null, 
 @PiCatMmScore   int = null, 
 @PiCatGtScore   int = null, 
 @PiCatElScore   int = null, 
 @PiCatClScore   int = NULL,  
 @ExamDate    DateTime=null, 
 @ExamEnteredDate  DateTime=null, 
 @LastUpdateUserId  uniqueiden..er 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ProspectProfessedExamId FROM [USMC].ProspectProfessedExam WHERE ProspectProfessedExamId = @Id) 
BEGIN 
 -- if @intCount > 0, UPDATE. 
 UPDATE  [USMC].ProspectProfessedExam 
    SET   
   ProspectId = @ProspectId, 
   ProspectProfessedExamType=@ProspectProfessedExamType, 
   Score1=@Score1, 
   Score2=@Score2, 
   Score3=@Score3, 
   PiCatMmScore = @PiCatMmScore, 
   PiCatGtScore = @PiCatGtScore, 
   PiCatElScore = @PiCatElScore, 
   PiCatClScore = @PiCatClScore, 
   ExamDate=@ExamDate, 
   ExamEnteredDate=@ExamEnteredDate, 
   LastUpdateDate = GETDATE(), 
   LastUpdateUserId = @LastUpdateUserId     
  WHERE ProspectProfessedExamId = @Id 
END 
ELSE 
 BEGIN 
  -- if @intCount = 0, then the Employee does not exist.  INSERT. 
  INSERT INTO [USMC].ProspectProfessedExam( 
   ProspectProfessedExamId, 
   ProspectId, 
   ProspectProfessedExamType, 
   Score1, 
   Score2, 
   Score3, 
   PiCatMmScore, 
   PiCatGtScore, 
   PiCatElScore, 
   PiCatClScore, 
   ExamDate, 
   ExamEnteredDate, 
   LastUpdateDate, 
   LastUpdateUserId  
   ) 
  VALUES ( 
   @Id, 
   @ProspectId, 
   @ProspectProfessedExamType, 
   @Score1, 
   @Score2, 
   @Score3, 
   @PiCatMmScore, 
   @PiCatGtScore, 
   @PiCatElScore, 
   @PiCatClScore, 
   @ExamDate, 
   @ExamEnteredDate, 
   GETDATE(), 
   @LastUpdateUserId)    
END 
 
 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>