<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1129" directorySegmentName="seg_16" id="FD4D22C2-B80E-2A1C-929C-36D31BCA7A50">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ID      uniqueiden..er, 
 @ProspectID    uniqueiden..er, 
 @FirstName    varchar(30), 
 @LastName    varchar(20), 
 @MiddleName    varchar(20) = NULL, 
 @Su.xCode    varchar(5) = NULL, 
 @DateOfBirth   date.me= NULL, 
 @DependentType   varchar(2), 
    @OtherDescrip.on       varchar(25), 
    @RecordStatus           varchar(1), 
 @LastUpdateUserID  uniqueiden..er, 
    @DependentAddressID  uniqueiden..er 
AS 
 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ProspectDependentId FROM ProspectDependent WHERE ProspectDependentId = @ID) 
BEGIN 
 -- if @intCount > 0, then the prospect dependent already exists.  UPDATE. 
 UPDATE 
   ProspectDependent 
  SET     
   ProspectId = @ProspectID, 
   FirstName  = @FirstName, 
   LastName   = @LastName, 
   MiddleName = @MiddleName, 
   Su.xCode = @Su.xCode, 
   DependentType = @DependentType,   
   DateOfBirth = @DateOfBirth,  
   LastUpdateDate = GETDATE(),  
   RecordStatus = @RecordStatus, 
   OtherDescrip.on = @OtherDescrip.on,    
   LastUpdateUserId = @LastUpdateUserID, 
   DependentAddressID = @DependentAddressID 
  WHERE  
   ProspectDependentId = @ID 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the prospect dependent does not exist.  INSERT. 
 INSERT INTO ProspectDependent( 
    ProspectDependentId, 
    ProspectId, 
    FirstName, 
    LastName, 
    MiddleName, 
    Su.xCode, 
    DependentType, 
    DateOfBirth, 
    LastUpdateDate, 
    LastUpdateUserId, 
    RecordStatus, 
    OtherDescrip.on, 
    DependentAddressID)      
  VALUES ( 
    @ID,  
    @ProspectID,  
    @FirstName, 
    @LastName, 
    @MiddleName, 
    @Su.xCode, 
    @DependentType, 
    @DateOfBirth, 
    GETDATE(), 
    @LastUpdateUserID, 
    @RecordStatus, 
    @OtherDescrip.on, 
    @DependentAddressID) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>