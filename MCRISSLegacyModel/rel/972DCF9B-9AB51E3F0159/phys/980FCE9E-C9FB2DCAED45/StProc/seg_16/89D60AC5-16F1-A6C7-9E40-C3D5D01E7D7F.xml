<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc1140" directorySegmentName="seg_16" id="89D60AC5-16F1-A6C7-9E40-C3D5D01E7D7F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:56 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ID     uniqueiden..er, 
 @ProspectID   uniqueiden..er, 
 @SchoolID   uniqueiden..er, 
 @LastUpdateUserID uniqueiden..er, 
 @Major    varchar(2)= NULL, 
 @Gradua.onDate  DateTime = NULL, 
 @IsFullTimeStudent bit = NULL,  
 @CurrentGpa   .oat = NULL, 
 @Cumula.veGpa  .oat = NULL, 
 @Educa.onLevel  varchar(2)= NULL, 
 @Educa.onCode  varchar(1)= NULL, 
 @ProjectedCompletedDate DATETIME = NULL, 
 @ProspectSchoolTypeId smallint, 
 @CreditHours        int = NULL, 
 @IsLawSchool      bit = NULL, 
 @EduStatusCode      int = NULL 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ProspectSchoolId FROM ProspectSchool WHERE ProspectSchoolId = @ID) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   ProspectSchool 
  SET  
   ProspectId = @ProspectID, 
   SchoolId = @SchoolID, 
   LastUpdateDate   = GETDATE(), 
   LastUpdateUserId = @LastUpdateUserID, 
   Major = @Major, 
   Gradua.onDate = @Gradua.onDate, 
   IsFullTimeStudent = @IsFullTimeStudent, 
   CurrentGpa = @CurrentGpa, 
   Cumula.veGpa =@Cumula.veGpa, 
   Educa.onLevel=@Educa.onLevel, 
   Educa.onCode=@Educa.onCode, 
   ProjectedCompletedDate=@ProjectedCompletedDate, 
   ProspectSchoolTypeId = @ProspectSchoolTypeId, 
   IsLawSchool = @IsLawSchool, 
   CreditHours = @CreditHours, 
   EduStatusCode = @EduStatusCode 
  WHERE  
   ProspectSchoolId = @ID 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 INSERT INTO ProspectSchool ( 
   ProspectSchoolId, 
   ProspectId, 
   SchoolId, 
   LastUpdateDate, 
   LastUpdateUserId, 
   Major, 
   Gradua.onDate, 
   IsFullTimeStudent, 
   CurrentGpa, 
   Cumula.veGpa, 
   Educa.onLevel, 
   Educa.onCode, 
   ProjectedCompletedDate, 
   ProspectSchoolTypeId, 
   IsLawSchool, 
            CreditHours, 
            EduStatusCode 
  ) 
  VALUES ( 
   @ID, 
   @ProspectID, 
   @SchoolID, 
   GETDATE(), 
   @LastUpdateUserID, 
   @Major, 
   @Gradua.onDate, 
   @IsFullTimeStudent, 
   @CurrentGpa, 
   @Cumula.veGpa, 
   @Educa.onLevel, 
   @Educa.onCode, 
   @ProjectedCompletedDate, 
   @ProspectSchoolTypeId, 
   @IsLawSchool, 
   @CreditHours, 
   @EduStatusCode 
   ) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>