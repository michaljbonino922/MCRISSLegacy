<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc939" directorySegmentName="seg_16" id="2708DE3F-B1EA-AE83-9612-4BFE5353B59A">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@RecruiterID   uniqueiden..er = null, 
    @OrgID   int = null, 
    @Year   int, 
    @Month  int, 
    @IsApproved bit = 1 
 
AS 
BEGIN 
  
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
 SET ARITHABORT ON 
 
 DECLARE @Recrui.ngOrganiza.onId uniqueiden..er 
  
 SELECT @Recrui.ngOrganiza.onId = rowguid  
 FROM MCRISS.dbo.RECRUITING_ORGANIZATION 
 WHERE ORGANIZATION_ID = @OrgID 
 
  
 -- Here we calculate start and end dates for the selected week, that will be used later   
 DECLARE @StartDate date.me 
 DECLARE @EndDate date.me 
 
 SET @EndDate =  CAST( CONVERT(varchar(4), @Year) + '-' +  
                            CONVERT(varchar(2), @Month) + '-' +  
                            CONVERT(varchar(2), 1) as Date.me) 
     
    SET @StartDate = DateAdd(month, -1, @EndDate); 
 
 SELECT @StartDate AS AnalysisMonth INTO #MonthList 
 
 INSERT INTO #MonthList  
 SELECT DateAdd(month, -2, @EndDate) 
 
 INSERT INTO #MonthList  
 SELECT DateAdd(month, -3, @EndDate) 
 
 SET @StartDate = DateAdd(month, -3, @EndDate); 
 
 SELECT  
  p.ProspectId, p.Recrui.ngOrganiza.onId, p.Ac.vity  
 INTO #Prospect 
 FROM 
  Prospec.ng.USMC.Prospect p 
 WHERE  
  p.Recrui.ngOrganiza.onId = @Recrui.ngOrganiza.onId 
    
 SELECT  
  pc.ProspectId, pc.Recrui.ngPersonID, pc.ProspectDate, pc.ProspectAc.vityCommentId 
 INTO #ProspectComment 
 FROM 
  Prospec.ng.USMC.ProspectComment pc  
  INNER JOIN #Prospect p 
     ON pc.ProspectId = p.ProspectId 
 WHERE 
     (pc.ProspectDate >= @StartDate AND pc.ProspectDate < @EndDate) 
  AND pc.IsApproved = 1 
  
 -- This table is used to hold the various types of comments atached to a prospect 
 SELECT 
  pc.Recrui.ngPersonID AS RecruiterID, 
  pac.Ac.vity AS Ac.vity, 
  pac.ProspectAc.vityCommentId, 
  pc.ProspectDate AS ProspectDate 
  ,pct.ProspectCommentType 
  ,pc.ProspectId 
 INTO #TEMP_PROSPECT_COMMENTS  
 FROM  
  #ProspectComment pc 
  INNER JOIN Prospec.ng.USMC.ProspectAc.vityComment pac ON pac.ProspectAc.vityCommentId = pc.ProspectAc.vityCommentId 
  INNER JOIN Prospec.ng.USMC.ProspectCommentType pct ON pct.ProspectCommentTypeId = pac.ProspectCommentTypeId 
 WHERE  
     ( @RecruiterID IS NULL OR  
    (@RecruiterID IS NOT NULL AND pc.Recrui.ngPersonID = @RecruiterID ) 
  )  
  AND pct.ProspectCommentType IN ('CM', 'OT-S', 'Col', 'Col-S', 'Col-R', 'NI') 
  
 SELECT DISTINCT e.id, e.EventTypeId, e.StartDate, e.IsApproved 
    INTO #Event  
    FROM RSSOSS.USMC.Event e 
  INNER JOIN RSSOSS.USMC.EventOwners eo ON  e.ID = eo.EventId 
        INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId 
        INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
        INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
 WHERE   
  e.Organiza.onId = @OrgID  
  AND (InterviewOutcomeId=1 or InterviewOutcomeId=2) -- New Working Applicant or Follow-up 
  AND et.Type != 'Follow Up' 
  AND e.IsApproved = 1 
  AND e.StartDate >= DateAdd(day, -90, @StartDate) 
  AND e.StartDate < @EndDate  
  
   
 -- This table is used to hold interviews scheduled for a prospect 
 SELECT  
  eo.CreatorId AS RecruiterID, 
  p.Ac.vity AS Ac.vity, 
  e.ID, 
  e.StartDate AS ProspectInterviewDate 
 INTO #TEMP_PROSPECT_INTERVIEWS 
 FROM 
  RSSOSS.USMC.EventOwners eo  
  INNER JOIN #Event e ON  e.ID = eo.EventId 
  INNER JOIN RSSOSS.USMC.EventSubject s on s.EventId = e.ID 
  INNER JOIN #Prospect p ON s.SubjectId = p.ProspectId  
   
 WHERE  
     ( @RecruiterID IS NULL OR  
    (@RecruiterID IS NOT NULL AND eo.CreatorId = @RecruiterID ) 
  )  
  AND (e.StartDate >= @StartDate AND e.StartDate < @EndDate) 
  
 SELECT DISTINCT 
  ProspectDate, 
  RecruiterID, 
  Ac.vity, 
  ProspectID   
 INTO #TEMP_PROSPECT_COMMENTS_DATES  
 FROM #TEMP_PROSPECT_COMMENTS pc 
 
 SELECT pc.ProspectDate, pc.Recrui.ngPersonID AS RecruiterID 
 INTO #TcMade 
 FROM  
  #ProspectComment pc 
  INNER JOIN Prospec.ng.USMC.ProspectAc.vityComment pac ON pac.ProspectAc.vityCommentId = pc.ProspectAc.vityCommentId 
  INNER JOIN Prospec.ng.USMC.ProspectCommentType pct ON pct.ProspectCommentTypeId = pac.ProspectCommentTypeId 
    WHERE  
  ( @RecruiterID IS NULL OR  
    (@RecruiterID IS NOT NULL AND pc.Recrui.ngPersonID = @RecruiterID ) 
  )  
  AND pac.Ac.vity = 'TC'  
  AND pct.ProspectCommentType IN ('CM', 'Col', 'Col-S', 'Col-R', 'NI', 'NA', 'NH', 'NHCB', 'NHLM') 
   
     AND NOT EXISTS (SELECT p2.ProspectId 
                   FROM #Event e 
       INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId 
       INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
       INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
       INNER JOIN #Prospect p2 ON s.subjectId = p2.ProspectId  
              WHERE  
           p2.ProspectId= pc.ProspectId 
           AND ( 
        CAST( (STR(Year(StartDate)) + '-' + STR(MONTH(StartDate)) + '-' + STR(DAY(StartDate)) ) AS date.me) < 
              CAST( (STR(Year(pc.ProspectDate)) + '-' + STR(MONTH(pc.ProspectDate)) + '-' + STR(DAY(pc.ProspectDate)) ) AS date.me) 
                        AND StartDate >= DateAdd(day, -90, pc.ProspectDate) ) ) 
                     
     
  
 SELECT pc.ProspectDate, pc.Recrui.ngPersonID AS RecruiterID 
 INTO #HvMade 
 FROM  
  #ProspectComment pc  
  INNER JOIN Prospec.ng.USMC.ProspectAc.vityComment pac ON pac.ProspectAc.vityCommentId = pc.ProspectAc.vityCommentId 
  INNER JOIN Prospec.ng.USMC.ProspectCommentType pct ON pct.ProspectCommentTypeId = pac.ProspectCommentTypeId 
 WHERE 
  ( @RecruiterID IS NULL OR  
    (@RecruiterID IS NOT NULL AND pc.Recrui.ngPersonID = @RecruiterID ) 
  )  
  AND pac.Ac.vity = 'HV'  
  AND pct.ProspectCommentType IN ('CM', 'Col', 'Col-S', 'Col-R', 'NI', 'HV-NA', 'HV-NH') 
      
 
 
 SELECT pc.ProspectDate, pc.Recrui.ngPersonID AS RecruiterID 
 INTO #EpSent 
 FROM  
  #ProspectComment pc   
  INNER JOIN Prospec.ng.USMC.ProspectAc.vityComment pac ON pac.ProspectAc.vityCommentId = pc.ProspectAc.vityCommentId 
  INNER JOIN Prospec.ng.USMC.ProspectCommentType pct ON pct.ProspectCommentTypeId = pac.ProspectCommentTypeId 
 WHERE 
  ( @RecruiterID IS NULL OR  
    (@RecruiterID IS NOT NULL AND pc.Recrui.ngPersonID = @RecruiterID ) 
  )  
  AND pac.Ac.vity = 'DC'  
  AND pct.ProspectCommentType IN ('CM', 'Col', 'Col-S', 'Col-R', 'NI', 'DC-U', 'DC-M', 'DC-R') 
  
  
 SELECT DISTINCT n.NWA_ID, n.NWA_DECLARED_DATE, rp.rowguid 
 INTO #Nwa 
 FROM  
  MCRISS.DBO.NWA AS n INNER JOIN 
  MCRISS.DBO.RECRUITING_PERSON  AS rp  
   ON rp.RECRUITING_PERSON_ID=n.RECRUITER_OF_RECORD_ID 
 WHERE 
  n.ORGANIZATION_OF_RECORD_ID= @OrgID 
 
 SELECT 
  ml.AnalysisMonth, 
 
  ( SELECT COUNT(ProspectDate) 
   FROM #TcMade tc 
   WHERE  
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(tc.ProspectDate) = Year(AnalysisMonth) AND Month(tc.ProspectDate) = Month(AnalysisMonth)  
  ) AS TcMade, 
 
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS t 
   WHERE  
    Ac.vity = 'TC' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectInterviewDate) = Year(AnalysisMonth) AND Month(ProspectInterviewDate) = Month(AnalysisMonth)  
  ) AS TcInt,   
   
  ( SELECT COUNT(ProspectDate) 
   FROM #TEMP_PROSPECT_COMMENTS_DATES  
   WHERE  
    Ac.vity = 'OT' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectDate) = Year(AnalysisMonth) AND Month(ProspectDate) = Month(AnalysisMonth) 
  )  AS OtMade, 
 
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS  
   WHERE  
    Ac.vity = 'OT' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectInterviewDate) = Year(AnalysisMonth) AND Month(ProspectInterviewDate) = Month(AnalysisMonth) 
  ) AS OtInt, 
  
  ( SELECT COUNT(ProspectDate) 
   FROM #TEMP_PROSPECT_COMMENTS_DATES  
   WHERE  
    Ac.vity = 'AC' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectDate) = Year(AnalysisMonth) AND Month(ProspectDate) = Month(AnalysisMonth) 
  ) AS AcMade, 
   
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS  
   WHERE  
    Ac.vity = 'AC' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectInterviewDate) = Year(AnalysisMonth) AND Month(ProspectInterviewDate) = Month(AnalysisMonth) 
  ) AS AcInt,   
   
  ( SELECT COUNT(ProspectDate) 
   FROM #HvMade  
   WHERE  
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectDate) = Year(AnalysisMonth) AND Month(ProspectDate) = Month(AnalysisMonth) 
  )  AS HvMade, 
  
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS  
   WHERE  
    Ac.vity = 'HV' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectInterviewDate) = Year(AnalysisMonth) AND Month(ProspectInterviewDate) = Month(AnalysisMonth) 
  ) AS HvInt,  
  
  ( SELECT COUNT(ProspectDate) 
   FROM #EpSent  
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectDate) = Year(AnalysisMonth) AND Month(ProspectDate) = Month(AnalysisMonth) 
  ) AS EpMade, 
   
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS  
   WHERE  
    Ac.vity = 'DC' 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
    AND Year(ProspectInterviewDate) = Year(AnalysisMonth) AND Month(ProspectInterviewDate) = Month(AnalysisMonth) 
  ) AS EpInt, 
   
  (SELECT Count(dis.nct n.NWA_ID)  
  FROM   
   #NWA AS n  
  WHERE 
   ( (@RecruiterID IS NOT NULL AND n.rowguid=@RecruiterID ) OR @RecruiterID IS NULL)  
   AND (YEAR(n.NWA_DECLARED_DATE)=Year(AnalysisMonth) ) 
   AND (MONTH (n.NWA_DECLARED_DATE) = Month(AnalysisMonth) )) 
  AS Nwa, 
   
  (SELECT Count(dis.nct mi.nwa_id)  
  FROM   
   MCRISS.dbo.MIContract mi 
   INNER JOIN #Nwa AS n ON n.NWA_ID = mi.NWA_ID  
   LEFT JOIN MCRISS.DBO.Contract c on c.NWA_ID = n.NWA_ID 
  WHERE 
   ( (@RecruiterID IS NOT NULL AND n.rowguid=@RecruiterID ) OR @RecruiterID IS NULL)  
   AND (YEAR(mi.CONTRACT_BEGIN_DATE)=Year(AnalysisMonth)) 
   AND (MONTH (mi.CONTRACT_BEGIN_DATE) = Month(AnalysisMonth)) ) 
  AS Contract 
    
 INTO #TEMP_DATA 
 FROM #MonthList ml 
  
 
 SELECT *  
 FROM #TEMP_DATA 
 ORDER BY AnalysisMonth 
 
 DROP TABLE #TEMP_PROSPECT_COMMENTS 
 DROP TABLE #TEMP_PROSPECT_INTERVIEWS 
 DROP TABLE #TEMP_DATA 
 DROP TABLE #TEMP_PROSPECT_COMMENTS_DATES 
 DROP TABLE #TcMade 
 DROP TABLE #HvMade 
 DROP TABLE #EpSent 
 DROP TABLE #MonthList 
 DROP TABLE #Event 
 DROP TABLE #Prospect 
 DROP TABLE #ProspectComment 
 DROP TABLE #Nwa 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>