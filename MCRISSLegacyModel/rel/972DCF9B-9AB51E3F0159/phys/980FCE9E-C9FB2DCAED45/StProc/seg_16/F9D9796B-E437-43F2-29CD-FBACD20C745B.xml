<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="Proc952" directorySegmentName="seg_16" id="F9D9796B-E437-43F2-29CD-FBACD20C745B">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@orgUnitId int, 
     @.scalYear int, 
     @schooltype varchar(10)     
   
AS 
BEGIN 
   
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
  
 CREATE TABLE #DataTable   
 (  
   [rowid] INT NOT NULL IDENTITY(1,1) 
  ,[Sector] VARCHAR(10) NULL 
  ,[Name] varchar(50)  
  ,[Address] varchar(200)  
  ,[SchoolType] varchar(20) 
  ,[Priority] varchar(1) Default null 
  ,[MaleSeniors] INT DEFAULT 0 
  ,[SchoolId] uniqueiden..er 
  ,[SchoolPro.leId] uniqueiden..er 
     
 ) 
 
 CREATE UNIQUE CLUSTERED INDEX IX_rowid ON #DataTable (rowid) 
 
 DECLARE @SchoolYear int 
 DECLARE @SchoolYearStartDate date.me 
 DECLARE @SchoolYearEndDate date.me 
  
 SET @SchoolYear = @FiscalYear 
 SET @SchoolYearStartDate = Convert(date.me, str(@SchoolYear-1)+'/7/1', 101)  
 SET @SchoolYearEndDate =   Convert(date.me, str(@SchoolYear)+'/6/30', 101)   
 
 -- Get all the shcools for the org 
 -- should not be closed for the school year 
 SELECT DISTINCT hs.* 
 INTO #SchoolList 
 FROM  
  MCRISS.dbo.High_School hs 
  INNER JOIN MCRISS.USMC.vwDecendentRecrui.ngOrgs c 
   ON hs.ORGANIZATION_ID = c.decendent  
 WHERE  
  (hs.ORGANIZATION_ID = @OrgUnitId OR c.Parent = @OrgUnitId) 
  AND (  
    E.ec.ve_Date IS NULL OR 
    ( E.ec.ve_Date IS NOT NULL AND 
      ((  hs.DELETED <> 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate) OR 
       (  hs.DELETED = 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate AND UPDATE_DATE >= @SchoolYearStartDate) 
      ) 
    ) 
   ) 
  AND hs.School_Type <> 'COL' and hs.School_Type <> '4Y' 
 
 
 --- retrieve the most current sector designator for the school base on zip code 
 SELECT School_Code, SectorDesignator 
 INTO #SchoolSectorDesignator  
 FROM 
  (   
   SELECT  
    Rank() OVER (par..on by School_Code ORDER BY EndDate Desc) AS 'Rank' 
    ,* 
   FROM   
    ( 
     SELECT hs.School_Code, hs.highschool_name, SectorDesignator,E.ec.veDate, GETDATE() as EndDate 
     FROM  
      #SchoolList AS hs  
      INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org 
       ON org.ORGANIZATION_ID = hs.ORGANIZATION_ID 
      INNER JOIN RSSOSS.USMC.MapsSectorZip msz 
       ON LEFT(hs.ZIP_CODE, 5) = msz.Zip AND @SchoolYearEndDate >= E.ec.veDate 
      INNER JOIN RSSOSS.USMC.MapsSector ms  
       ON ms.SectorID = msz.SectorID AND Recrui.ngOrganiza.onId = org.rowguid AND SectorType = 'E'  
   UNION 
 
   SELECT hs.School_Code, hs.highschool_name, SectorDesignator,E.ec.veDate, EndDate  
   FROM  
    #SchoolList AS hs  
    INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION org 
     ON org.ORGANIZATION_ID = hs.ORGANIZATION_ID 
    INNER JOIN RSSOSS.USMC.MapsSectorZipHist mszh 
     ON LEFT(hs.ZIP_CODE, 5) = mszh.Zip AND @SchoolYearEndDate >= E.ec.veDate AND @SchoolYearStartDate <= EndDate 
    INNER JOIN RSSOSS.USMC.MapsSector ms  
     ON ms.SectorID = mszh.SectorID AND Recrui.ngOrganiza.onId = org.rowguid AND SectorType = 'E'  
    
   ) t1 
  ) t2 
 WHERE rank = 1 
 
  
  
 Insert into #DataTable([Name],[Sector],[Address],[SchoolType],[SchoolId],[SchoolPro.leId],[Priority]) 
 /***  Get the High Schools ***/ 
 SELECT   hs.HighSchool_Name 
   ,SectorDesignator 
   ,hs.Street + ', ' + hs.City + ', ' + hs.State_Code + ' ' + le.(hs.Zip_Code,5) As Address 
   ,hs.school_type 
   ,hs.rowguid 
   ,hsp.rowguid as ScholPro.leGUID 
   ,hsp.Priority_Code as Priority 
 FROM          
  #SchoolList AS hs  
  LEFT OUTER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE AS hsp  
   ON hsp.SCHOOL_CODE = hs.SCHOOL_CODE AND hsp.SCHOOL_YEAR = @SchoolYear 
  LEFT OUTER JOIN #SchoolSectorDesignator ssd 
   ON ssd.School_Code = hs.School_Code 
 WHERE 
  SectorDesignator IS NOT NULL 
            
  
 update  #DataTable set [MaleSeniors] = rst.Mhssr from #DataTable dt inner join  
 (SELECT   COUNT(p.PersonId) AS Mhssr, ps.SchoolId  
              FROM     USMC.Prospect AS p INNER JOIN 
                          USMC.ProspectSchool AS ps ON ps.ProspectId = p.ProspectId INNER JOIN 
                         USMC.Person AS pr ON p.PersonId = pr.PersonId AND p.Gradua.onYear = @.scalYear 
                          AND   pr.Gender = 'M' group by ps.SchoolId) rst on dt.SchoolId = rst.SchoolId                           
     
 
 
if (@schooltype = 'CC')  
 select * from #DataTable where schooltype=@schooltype or schooltype='2Y' order by Sector, Name 
else if (@schooltype= 'COL')   
 select * from #DataTable where schooltype=@schooltype or schooltype='4Y' order by Sector, Name        
    
else 
   select * from #DataTable where schooltype=@schooltype order by Sector, Name  
    
   drop TABLE #DataTable 
    
 
    
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>