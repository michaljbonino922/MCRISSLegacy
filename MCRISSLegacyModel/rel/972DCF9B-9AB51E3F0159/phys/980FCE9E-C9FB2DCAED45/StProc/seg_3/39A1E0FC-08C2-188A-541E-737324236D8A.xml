<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetAvailableProgramsView]" directorySegmentName="seg_3" id="39A1E0FC-08C2-188A-541E-737324236D8A">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Recrui.ngOrgID  int, 
 @FY int 
AS 
 
SET NOCOUNT ON 
SET ANSI_WARNINGS OFF 
 
DECLARE @OrgType varchar(3) 
SELECT @OrgType = ORGANIZATION_TYPE FROM [dbo].[RECRUITING_ORGANIZATION] WITH (NOLOCK) WHERE ORGANIZATION_ID = @Recrui.ngOrgID  
 
CREATE TABLE #REMOVED_PROGRAMS   
 (PROGRAM_AVAILABILITY_ID INT) 
  
INSERT INTO #REMOVED_PROGRAMS  
 (PROGRAM_AVAILABILITY_ID) 
SELECT PROGRAM_AVAILABILITY_ID FROM [dbo].[REMOVED_PROGRAMS]  
  
CREATE TABLE #AVAILABLE_PROGRAMS   
 (PROGRAM_ID INT, PROGRAM_CODE VARCHAR(8), FY INT, PERIOD_CODE INT, PROGRAM_PERIOD_ID INT,  
 AVAILABLE_PROGRAM_COUNT INT, ASSIGNED_PROGRAM_COUNT INT) 
 
INSERT INTO #AVAILABLE_PROGRAMS  
 (PROGRAM_ID, PROGRAM_CODE, FY, PERIOD_CODE, PROGRAM_PERIOD_ID, AVAILABLE_PROGRAM_COUNT) 
SELECT  
 PG.PROGRAM_ID, 
 PG.PROGRAM_CODE + 
 CASE  
  WHEN PG.PROGRAM_DESCRIPTION LIKE '%FEMALE%' AND PG.PROGRAM_CODE NOT LIKE '%F' THEN ' - F' 
  ELSE SPACE(0) 
 END AS PROGRAM_CODE, 
 PP.FY, PP.PERIOD_CODE, PP.PROGRAM_PERIOD_ID, 
 --- GET THE AVAILABLE [dbo].[PROGRAM] COUNT 
 COUNT(PA.PROGRAM_AVAILABILITY_ID) AS AVAILABLE_PROGRAM_COUNT 
FROM 
 [dbo].[PROGRAM] PG WITH (NOLOCK) INNER JOIN [dbo].[PROGRAM_PERIOD] PP ON  
  (PP.FY = @FY AND 
  PG.STATUS = 'A') 
 LEFT OUTER JOIN [dbo].[PROGRAM_AVAILABILITY] PA ON  
  (PG.PROGRAM_ID = PA.PROGRAM_ID AND 
  PA.PROGRAM_PERIOD_ID = PP.PROGRAM_PERIOD_ID AND 
  PA.ASSIGNED_ORGANIZATION_ID = @Recrui.ngOrgID AND 
  PA.CONTRACT_ID IS NULL AND 
  PA.NWA_ID IS NULL AND 
  PA.PROGRAM_AVAILABILITY_ID NOT IN (SELECT PROGRAM_AVAILABILITY_ID FROM #REMOVED_PROGRAMS))  
GROUP BY 
 PG.PROGRAM_ID, PG.PROGRAM_CODE, PG.PROGRAM_DESCRIPTION, PP.PROGRAM_PERIOD_ID, PP.FY, PP.PERIOD_CODE 
ORDER BY 
 PG.PROGRAM_CODE, PG.PROGRAM_ID, PP.PERIOD_CODE 
 
 
UPDATE 
 #AVAILABLE_PROGRAMS  
SET 
 ASSIGNED_PROGRAM_COUNT = CASE @OrgType 
     WHEN 'D' THEN (SELECT COUNT(PA.PROGRAM_AVAILABILITY_ID) FROM [dbo].[PROGRAM_AVAILABILITY] PA 
       INNER JOIN [dbo].[ORGANIZATION_MAP] RS ON  
        (PA.ASSIGNED_ORGANIZATION_ID = RS.CHILD_ORGANIZATION_ID AND 
        RS.PARENT_ORGANIZATION_ID = @Recrui.ngOrgID) 
       WHERE PA.PROGRAM_ID = AP.PROGRAM_ID AND 
       PA.PROGRAM_PERIOD_ID = AP.PROGRAM_PERIOD_ID AND 
       PA.CONTRACT_ID IS NULL AND 
       PA.NWA_ID IS NULL AND 
       PA.PROGRAM_AVAILABILITY_ID NOT IN (SELECT PROGRAM_AVAILABILITY_ID FROM #REMOVED_PROGRAMS))  
     ELSE 0 
    END 
FROM 
 #AVAILABLE_PROGRAMS AP  
 
 
--- RETURN THE DATA 
SELECT 
 PROGRAM_ID, PROGRAM_CODE, FY, PERIOD_CODE,  
 AVAILABLE_PROGRAM_COUNT, ASSIGNED_PROGRAM_COUNT 
FROM 
 #AVAILABLE_PROGRAMS 
ORDER BY  
 PROGRAM_CODE, PROGRAM_ID, PERIOD_CODE 
 
--- CLEAN UP 
DROP TABLE #AVAILABLE_PROGRAMS 
DROP TABLE #REMOVED_PROGRAMS 
 
SET ANSI_WARNINGS ON 
SET NOCOUNT OFF]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>