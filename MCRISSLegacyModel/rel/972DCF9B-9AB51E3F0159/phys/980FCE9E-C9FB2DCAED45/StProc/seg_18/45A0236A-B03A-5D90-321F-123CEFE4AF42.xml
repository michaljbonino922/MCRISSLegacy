<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetNWA]" directorySegmentName="seg_18" id="45A0236A-B03A-5D90-321F-123CEFE4AF42">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@NWAID  int   
AS   
   
DECLARE @MarineCandidateID  int   
DECLARE @StatusType   char(1)   
DECLARE @ProjectedGradDate char(11)   
   
DECLARE @DefaultMEPSDate date.me   
DECLARE @ASVABDate   date.me   
DECLARE @ASVABMEPS  int   
DECLARE @MedicalExamDate date.me   
DECLARE @MedicalMEPS  int   
DECLARE @LastMEPS   varchar(20)   
DECLARE @MaxPFTID  int   
DECLARE @LSIHistoryPresent bit   
DECLARE @PriorServiceHistoryPresent bit   
DECLARE @LanguageRecordPresent bit   
   
--- RETRIEVE THE LSI HISTORY PRESENT FLAG   
SET @LSIHistoryPresent = CASE    
    WHEN EXISTS (SELECT 1 FROM LSI_HISTORY LSIH INNER JOIN NWA N ON LSIH.PERSON_ID = N.MARINE_CANDIDATE_ID   
      WHERE N.NWA_ID = @NWAID)   
    THEN 1   
    ELSE 0   
    END   
   
--- RETRIEVE THE PRIOR SERVICE HISTORY PRESENT FLAG   
SET @PriorServiceHistoryPresent = CASE    
    WHEN EXISTS (SELECT 1 FROM CANDIDATE_PRIOR_SERVICE PSH INNER JOIN NWA N ON PSH.MARINE_CANDIDATE_ID = N.MARINE_CANDIDATE_ID   
      WHERE N.NWA_ID = @NWAID)   
    THEN 1   
    ELSE 0   
    END   
   
--- RETRIEVE THE LANGUAGE RECORD PRESENT FLAG   
SET @LanguageRecordPresent = CASE    
    WHEN EXISTS (SELECT 1 FROM CANDIDATE_LANGUAGE CL INNER JOIN NWA N ON CL.MARINE_CANDIDATE_ID = N.MARINE_CANDIDATE_ID AND N.NWA_ID = @NWAID)   
    THEN 1   
    ELSE 0   
    END   
   
   
--- RETRIEVE THE NWA STATUS TYPE AND MARINE_CANDIDATE_ID   
SELECT @StatusType = CS.STATUS_TYPE FROM CANDIDATE_STATUS CS WHERE CS.NWA_ID = @NWAID   
SELECT @MarineCandidateID = MARINE_CANDIDATE_ID FROM NWA WHERE NWA_ID = @NWAID   
   
--- RETRIEVE LAST MEPS DATA FOR NWAs WHO HAVE TAKEN AN ASVAB OR MEDICAL EXAM.   
SET @LastMEPS = dbo.GetLastMEPS(@MarineCandidateID, @StatusType)   
   
--- GET THE PROJECTED GRAD DATE   
SET @ProjectedGradDate = CASE @StatusType   
    WHEN 'O' THEN COALESCE(NULLIF(CONVERT(CHAR(11),    
      (SELECT MAX(COALESCE(CE.PROJECTED_COMPL_DATE, SPACE(0)))    
      FROM CANDIDATE_EDUCATION CE    
      WHERE CE.MARINE_CANDIDATE_ID = @MarineCandidateID AND   
      CE.SCHOOL_END_DATE IS NULL), 106), '01 Jan 1900'), SPACE(0))   
    ELSE NULL   
    END   
   
--- GET THE MAX PFT ID   
SET @MaxPFTID = CASE @StatusType   
   WHEN 'O' THEN dbo.GetMaxPFTID(@NWAID)   
   ELSE NULL   
   END   
   
--- RETURN THE NWA DATA   
SELECT   
 N.NWA_ID,   
 CONVERT(VARCHAR(11), N.NWA_DECLARED_DATE, 106) AS NWA_DECLARED_DATE,   
 CONVERT(VARCHAR(11), N.NWA_DATE_STARTED_WORKING, 106) AS [DATE_STARTED_WORKING/INITIAL_CONTACT],   
 N.PARENTAL_CONSENT, N.PROJECTED_SHIP_MONTH, N.NWA_LOG_NOTES,   
 N.PROJECTED_PROG_CHOICE1, N.PROJECTED_PROG_CHOICE2, N.PROJECTED_PROG_CHOICE3,   
 COALESCE(N.ACTIVITY_CODE, SPACE(0)) AS ACTIVITY_CODE,     
 COALESCE(N.SOURCE_CODE, SPACE(0)) AS SOURCE_CODE,    
 COALESCE(N.SOURCE_CODE_DUAL, SPACE(0)) AS SOURCE_CODE_DUAL,   
 N.CATEGORY_CODE, N.PPC,   
 CONVERT(VARCHAR(11), MC.DATE_OF_BIRTH, 106) AS DATE_OF_BIRTH,   
 COALESCE(MC.MARITAL_STATUS_CODE, SPACE(0)) AS MARITAL_STATUS_CODE,   
 COALESCE(MC.RACE_CODE, SPACE(0)) AS RACE_CODE,   
 COALESCE(MC.ETHNIC_CODE, SPACE(0)) AS ETHNIC_CODE,   
 COALESCE(MC.RELIGION_CODE, SPACE(0)) AS RELIGION_CODE,   
 COALESCE(MC.CITIZENSHIP, SPACE(0)) AS CITIZENSHIP,   
 COALESCE(MC.COUNTRY_OF_ORIGIN, SPACE(0)) AS COUNTRY_OF_ORIGIN,   
 COALESCE(MC.DRIVER_LICENSE_STATE, SPACE(0)) AS DRIVER_LICENSE_STATE,   
 COALESCE(MC.DRIVER_LICENSE_NUM, SPACE(0)) AS DRIVER_LICENSE_NUM,   
 CONVERT(VARCHAR(11), MC.DRIVER_LICENSE_EXP, 106) AS DRIVER_LICENSE_EXP,   
 @LastMEPS AS LAST_MEPS,    
 COALESCE(N.OFFICER_COMPONENT_CODE, SPACE(0)) AS PROGRAM,   
 N.NATIONAL_CALL_TO_SERVICE,   
 --N.OCCR,   
 COALESCE(N.BACH_GRAD_YEAR, 0) AS BACH_GRAD_YEAR,    
 COALESCE(N.SHIP_MISSION, 0) AS SHIP_MISSION,    
 @StatusType AS STATUS_TYPE,   
 COALESCE(RS.SOURCE_DESCRIPTION, SPACE(0)) AS SOURCE_DESCRIPTION,   
 COALESCE(RS.TYPE, SPACE(0)) AS SOURCE_TYPE,   
 COALESCE(RS.ACTIVE, SPACE(0)) AS SOURCE_ACTIVE,   
 --- MEPCOM RACE AND ETHNIC CODES   
 COALESCE(MC.MEPCOM_RACE_CODE, SPACE(0)) AS MEPCOM_RACE_CATEGORY_CODE,   
 COALESCE(MC.MEPCOM_ETHNIC_CODE, SPACE(0)) AS MEPCOM_ETHNIC_CATEGORY_CODE,   
 --- ADDITIONAL NWA OFFICER DATA   
 COALESCE(N.EMAIL_ADDRESS, SPACE(0)) AS EMAIL_ADDRESS,   
 COALESCE(CONVERT(CHAR(11), N.RAPP_ISSUE_DATE, 106), SPACE(0)) AS RAPP_ISSUE_DATE,   
 CONVERT(CHAR(11), N.RAPP_SUBMIT_DATE, 106) AS RAPP_SUBMIT_DATE,   
 COALESCE(N.BACH_GRAD_MONTH, 0) AS BACH_GRAD_MONTH,   
 --- COALESCE(CONVERT(CHAR(11), @ProjectedGradDate, 106), SPACE(0)) AS PROJECTED_GRAD_DATE   
 @ProjectedGradDate AS PROJECTED_GRAD_DATE,    
 --- OCS FIELDS   
 COALESCE(OCS.OCS_ID, 0) AS OCS_ID,   
 COALESCE(CL.TRAINING_TYPE_CODE, SPACE(0)) AS OCS_CLASS,   
 COALESCE(CL.CLASS_NUMBER, 0) AS CLASS_NUMBER,   
 COALESCE(CL.FISCAL_YEAR, 0) AS CLASS_FY,   
 --- REFERRER DATA   
 CASE    
 WHEN @StatusType = 'O' AND N.SOURCE_CODE IN ('ERR', 'DEP', 'REF') THEN dbo.GetReferrerSSN (@NWAID, N.SOURCE_CODE, @StatusType)   
 ELSE SPACE(0)   
 END AS REFERRER_SSN,   
 COALESCE(ARN.ARN, SPACE(0)) AS ARN,   
 COALESCE(M.MISSION_MONTH, 0) AS MISSION_MONTH,   
 COALESCE(M.MISSION_YEAR, 0) AS MISSION_YEAR,    
 COALESCE(ME.ETHNIC_CATEGORY_DESC, SPACE(0)) AS MEPCOM_ETHNIC_CATEGORY_DESCRIPTION,    
 COALESCE(E.ETHNIC_ABBREVEATION, SPACE(0)) AS ETHNIC_DESCRIPTION,   
 COALESCE(MR.RACE_CATEGORY_DESC, SPACE(0)) AS MEPCOM_RACE_CATEGORY_DESCRIPTION,   
 COALESCE(R.RACE_DESC, SPACE(0)) AS RACE_DESCRIPTION,   
 @LSIHistoryPresent AS LSI_HISTORY_PRESENT,   
 @PriorServiceHistoryPresent AS PRIOR_SERVICE_HISTORY_PRESENT,    
 COALESCE(RS_DUAL.SOURCE_DESCRIPTION, SPACE(0)) AS SOURCE_DUAL_DESCRIPTION,   
 @LanguageRecordPresent AS LANGUAGE_RECORD_PRESENT   
FROM    
 NWA N INNER JOIN MARINE_CANDIDATE MC ON    
  (N.NWA_ID = @NWAID AND   
  N.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID)   
 LEFT OUTER JOIN MEPCOM_ETHNIC_CATEGORY ME ON MC.MEPCOM_ETHNIC_CODE = ME.ETHNIC_CATEGORY_CODE   
 LEFT OUTER JOIN ETHNIC E ON MC.ETHNIC_CODE = E.ETHNIC_CODE   
 LEFT OUTER JOIN MEPCOM_RACE_CATEGORY MR ON MC.MEPCOM_RACE_CODE = MR.RACE_CATEGORY_CODE   
 LEFT OUTER JOIN RACE R ON MC.RACE_CODE = R.RACE_CODE   
 LEFT OUTER JOIN RECRUITING_SOURCE RS ON N.SOURCE_CODE = RS.SOURCE_CODE   
 LEFT OUTER JOIN OCS ON   
  (N.NWA_ID = OCS.NWA_ID AND   
  OCS.OCS_ID = dbo.GetMaxOCSID(OCS.NWA_ID, NULL))   
 LEFT OUTER JOIN OCS_CLASS CL ON OCS.OCS_CLASS_ID = CL.CLASS_ID    
 LEFT OUTER JOIN ALIEN_REGISTRATION ARN ON MC.MARINE_CANDIDATE_ID = ARN.MARINE_CANDIDATE_ID   
 LEFT OUTER JOIN NWA_OFFICER_MISSION M ON N.NWA_ID = M.NWA_ID   
 LEFT OUTER JOIN RECRUITING_SOURCE RS_DUAL ON N.SOURCE_CODE_DUAL = RS_DUAL.SOURCE_CODE]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>