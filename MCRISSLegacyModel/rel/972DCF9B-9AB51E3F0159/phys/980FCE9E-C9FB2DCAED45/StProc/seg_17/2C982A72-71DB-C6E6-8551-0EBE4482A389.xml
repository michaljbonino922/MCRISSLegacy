<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetEnlistedPoolViewTest]" directorySegmentName="seg_17" id="2C982A72-71DB-C6E6-8551-0EBE4482A389">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@FromDate date.me, 
 @ToDate  date.me, 
 @RS  int = NULL, 
 @RSS  int = NULL, 
 @SortBy  int = NULL 
AS 
 
SET NOCOUNT ON 
 
--- CREATE A TEMP TABLE FOR ORG IDs 
CREATE TABLE #ORGID (Organiza.onId int) 
 
--- RETRIEVE THE ORG IDs  
IF (@RSS IS NOT NULL AND @RSS > 0) 
 BEGIN 
 INSERT INTO #ORGID  
 SELECT @RSS 
 END 
ELSE 
 BEGIN 
 INSERT INTO #ORGID  
 SELECT CHILD_ORGANIZATION_ID FROM ORGANIZATION_MAP WHERE PARENT_ORGANIZATION_ID = @RS 
 END  
 
 
--- CREATE A TEMP TABLE FOR POOL VIEW DATA 
CREATE TABLE #POOL_VIEW (PERSON_NAME VARCHAR(62), PERSON_ID INT, NWA_ID INT, CONTRACT_ID INT, SSN CHAR(9), 
 PROJECTED_SHIP_DATE DATETIME, CONTRACT_BEGIN_DATE DATETIME, IST_DATE DATETIME, 
 GENDER_CODE CHAR(1), COMPONENT_CODE VARCHAR(2), COMPONENT_DESCRIPTION VARCHAR(50), RSS_NAME VARCHAR(45), 
 DISPOSITION_DESCRIPTION VARCHAR(40), PROGRAM_QSN VARCHAR(25)) 
 
--- INDEX TEMP TABLE 
CREATE NONCLUSTERED INDEX idxPOOL_VIEW_CONTRACT ON #POOL_VIEW (CONTRACT_ID) 
CREATE NONCLUSTERED INDEX idxPOOL_VIEW_CC ON #POOL_VIEW (COMPONENT_CODE) 
 
--- RETRIEVE POOL VIEW DATA 
INSERT INTO #POOL_VIEW (PERSON_NAME, PERSON_ID, NWA_ID, CONTRACT_ID, SSN, PROJECTED_SHIP_DATE,  
   CONTRACT_BEGIN_DATE, IST_DATE, GENDER_CODE, COMPONENT_CODE,  
   COMPONENT_DESCRIPTION, RSS_NAME, DISPOSITION_DESCRIPTION) 
SELECT  
 RTRIM(P.LAST_NAME) + SPACE(1) + RTRIM(P.FIRST_NAME) + SPACE(1) + ISNULL(P.LEGAL_MIDDLE_NAME, SPACE(0)) AS PERSON_NAME, 
 P.PERSON_ID, NWA.NWA_ID, C.CONTRACT_ID, P.SOCIAL_SECURITY_NUMBER AS SSN, 
 C.PROJECTED_SHIP_DATE, C.CONTRACT_BEGIN_DATE, C.IST_DATE, 
 MC.GENDER_CODE, C.COMPONENT_CODE,  
 CC.COMPONENT_DESCRIPTION, RO.NAME AS RSS_NAME, SD.DISPOSITION_DESCRIPTION 
FROM  
 PERSON P INNER JOIN MARINE_CANDIDATE MC ON P.PERSON_ID = MC.MARINE_CANDIDATE_ID 
 INNER JOIN NWA ON MC.MARINE_CANDIDATE_ID = NWA.MARINE_CANDIDATE_ID  
 INNER JOIN CONTRACT C ON NWA.NWA_ID = C.NWA_ID  
 INNER JOIN COMPONENT_CODE CC ON C.COMPONENT_CODE = CC.COMPONENT_CODE 
 INNER JOIN RECRUITING_ORGANIZATION RO ON NWA.ORGANIZATION_OF_RECORD_ID = RO.ORGANIZATION_ID 
 INNER JOIN CANDIDATE_STATUS CS ON (NWA.NWA_ID = CS.NWA_ID AND 
      CS.CANDIDATE_STATUS_ID = (SELECT MAX(CS2.CANDIDATE_STATUS_ID) FROM CANDIDATE_STATUS CS2 
          WHERE CS2.NWA_ID = CS.NWA_ID)) 
 INNER JOIN STATUS_DISPOSITION SD ON (CS.STATUS_TYPE = SD.STATUS_TYPE AND CS.STATUS_CODE = SD.STATUS_CODE  
      AND CS.DISPOSITION_CODE = SD.DISPOSITION_CODE) 
WHERE  
 C.PROJECTED_SHIP_DATE BETWEEN @FromDate AND @ToDate AND 
 NWA.ORGANIZATION_OF_RECORD_ID IN (SELECT Organiza.onId FROM #ORGID) AND 
 CS.STATUS_TYPE = 'E' AND 
 CS.STATUS_CODE = 'B' AND 
 CS.DISPOSITION_CODE IN ('K', 'M') 
 
 
--- UPDATE POOL VIEW WITH QSN DATA FOR RESERVISTS 
UPDATE 
 #POOL_VIEW 
SET 
 PROGRAM_QSN = ISNULL((SELECT QSN.QSN_ID + '/' + QSN.MOS FROM QSN  
    WHERE QSN.CONTRACT_ID = #POOL_VIEW.CONTRACT_ID), SPACE(0)) 
WHERE 
 COMPONENT_CODE IN ('K4', 'K8', 'K9', 'B5') 
 
 
--- UPDATE POOL VIEW WITH PROGRAM CODE DATA FOR REGULARS WITHOUT A PROGRAM ASSIGNED 
--- DO THIS FIRST TO MINIMIZE THE NUMBER OF LOOKUPS TO THE PROGRAM AND PROGRAM_AVAILABILITY TABLES 
UPDATE 
 #POOL_VIEW 
SET 
 PROGRAM_QSN = '00000-000-000-00-' 
WHERE 
 COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
 NOT EXISTS (SELECT 1 FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = #POOL_VIEW.CONTRACT_ID) 
 
 
--- CREATE TEMPORARY PROGRAM TYPES TABLE AND POPULATE #PROGRAM_TYPES WITH PROGRAM TYPE DATA 
DECLARE @i int 
SET @i = 1 
 
CREATE TABLE #PROGRAM_TYPES (PROGRAM_TYPE_ID INT, PROGRAM_TYPE VARCHAR(4)) 
 
WHILE @i <= 4 
BEGIN 
 --- CAPTURE THE PROGRAM TYPE DATA 
 INSERT INTO  
  #PROGRAM_TYPES 
 SELECT 
  @i, PT.PROGRAM_TYPE_CODE  
 FROM  
  PROGRAM_TYPE PT  
 WHERE  
  (@i = 1 AND PT.PROGRAM_TYPE_CODE IN ('EOP', 'QEP', 'MEOP')) OR 
  (@i = 2 AND PT.PROGRAM_TYPE_CODE = 'EBP') OR 
  (@i = 3 AND PT.PROGRAM_TYPE_CODE = 'MCCF') OR 
  (@i = 4 AND PT.PROGRAM_TYPE_CODE IN ('QEP', 'GOP', 'CEP')) 
   
 SET @i = @i + 1 
END 
 
 
--- RESET THE COUNTER AND 
--- UPDATE POOL VIEW WITH PROGRAM CODE DATA FOR REGULARS WITH AN ASSIGNED PROGRAM 
SET @i = 1 
 
WHILE @i <= 4 
BEGIN  
 --- SELECT PT.* FROM #PROGRAM_TYPES PT WHERE PT.PROGRAM_TYPE_ID = @i 
 
 --- UPDATE THE POOL VIEW WITH PROGRAM DATA 
 UPDATE 
  #POOL_VIEW 
 SET 
  PROGRAM_QSN = CASE   
    --- SKILL INFO 
    WHEN @i = 1 THEN ISNULL((SELECT CONVERT(VARCHAR(5), PG.PROGRAM_CODE + REPLICATE('0', 5 - LEN(PG.PROGRAM_CODE))) FROM PROGRAM PG  
      INNER JOIN PROGRAM_AVAILABILITY PA ON PG.PROGRAM_ID = PA.PROGRAM_ID 
      INNER JOIN #PROGRAM_TYPES PT ON (PT.PROGRAM_TYPE_ID = @i AND PG.PROGRAM_TYPE = PT.PROGRAM_TYPE) 
      WHERE PA.CONTRACT_ID = PV.CONTRACT_ID), '00000') + '-' 
    --- BONUS, MCCF INFO 
    WHEN @i IN (2, 3) THEN PROGRAM_QSN + ISNULL((SELECT CONVERT(VARCHAR(3), PG.PROGRAM_CODE + REPLICATE('0', 3 - LEN(PG.PROGRAM_CODE))) FROM PROGRAM PG  
        INNER JOIN PROGRAM_AVAILABILITY PA ON PG.PROGRAM_ID = PA.PROGRAM_ID  
        INNER JOIN #PROGRAM_TYPES PT ON (PT.PROGRAM_TYPE_ID = @i AND PG.PROGRAM_TYPE = PT.PROGRAM_TYPE) 
        WHERE PA.CONTRACT_ID = PV.CONTRACT_ID), '000') + '-' 
    --- LOC INFO 
    WHEN @i = 4 THEN PROGRAM_QSN + ISNULL((SELECT CONVERT(VARCHAR(2), C.DUTY_PREFERENCE1 + REPLICATE('0', 2 - LEN(C.DUTY_PREFERENCE1))) FROM CONTRACT C 
        WHERE C.CONTRACT_ID = PV.CONTRACT_ID AND 
        EXISTS (SELECT 1 FROM PROGRAM_AVAILABILITY PA  
         INNER JOIN PROGRAM PG ON PA.PROGRAM_ID = PG.PROGRAM_ID  
         INNER JOIN #PROGRAM_TYPES PT ON (PT.PROGRAM_TYPE_ID = @i AND PG.PROGRAM_TYPE = PT.PROGRAM_TYPE) 
         WHERE PA.CONTRACT_ID = PV.CONTRACT_ID)), '00') + '-' 
 
    END 
 FROM 
  #POOL_VIEW PV --- INNER JOIN CONTRACT C ON PV.CONTRACT_ID = C.CONTRACT_ID 
 WHERE 
  PV.COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
  EXISTS (SELECT 1 FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = PV.CONTRACT_ID) 
 
 SET @i = @i + 1 
END 
 
 
--- UPDATE THE PROGRAM ASSIGNMENT DATE 
UPDATE 
 #POOL_VIEW 
SET 
 --- PROGRAM ASSIGNMENT DATE 
 PROGRAM_QSN = PROGRAM_QSN + ISNULL(CONVERT(VARCHAR(8), (SELECT MAX(PA.PROGRAM_ASSIGNMENT_DATE) FROM PROGRAM_AVAILABILITY PA  
        WHERE PA.CONTRACT_ID = #POOL_VIEW.CONTRACT_ID), 112), SPACE(0)) 
WHERE 
 #POOL_VIEW.COMPONENT_CODE NOT IN ('K4', 'K8', 'K9', 'B5') AND 
 EXISTS (SELECT 1 FROM PROGRAM_AVAILABILITY PA WHERE PA.CONTRACT_ID = #POOL_VIEW.CONTRACT_ID) 
 
SET NOCOUNT OFF 
 
--- RETURN THE POOL VIEW DATA 
SELECT  
 PERSON_NAME, PERSON_ID, NWA_ID, CONTRACT_ID, SSN,  
 CONVERT(VARCHAR(11), PROJECTED_SHIP_DATE, 106) AS PROJECTED_SHIP_DATE, 
 CONVERT(VARCHAR(11), CONTRACT_BEGIN_DATE, 106) AS CONTRACT_BEGIN_DATE, 
 CONVERT(VARCHAR(11), IST_DATE, 106) AS IST_DATE, 
 GENDER_CODE, COMPONENT_CODE, COMPONENT_DESCRIPTION,  
 RSS_NAME, DISPOSITION_DESCRIPTION, PROGRAM_QSN,  
 --- PROJECTED_SHIP_DATE, CONTRACT_BEGIN_DATE, IST_DATE,  
 SORT_COLUMN = CASE @SortBy 
    WHEN 1 THEN CONVERT(VARCHAR(11), PROJECTED_SHIP_DATE, 106) --- PROJECTED_SHIP_DATE 
    WHEN 2 THEN PERSON_NAME 
    WHEN 3 THEN GENDER_CODE 
    WHEN 4 THEN CONVERT(VARCHAR(11), CONTRACT_BEGIN_DATE, 106) --- CONTRACT_BEGIN_DATE 
    WHEN 5 THEN CONVERT(VARCHAR(11), IST_DATE, 106) --- IST_DATE 
    WHEN 6 THEN COMPONENT_DESCRIPTION 
    WHEN 7 THEN RSS_NAME 
    WHEN 8 THEN DISPOSITION_DESCRIPTION 
    ELSE CONVERT(VARCHAR(11), PROJECTED_SHIP_DATE, 106) --- PROJECTED_SHIP_DATE 
   END 
FROM  
 #POOL_VIEW  
ORDER BY 
 SORT_COLUMN]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>