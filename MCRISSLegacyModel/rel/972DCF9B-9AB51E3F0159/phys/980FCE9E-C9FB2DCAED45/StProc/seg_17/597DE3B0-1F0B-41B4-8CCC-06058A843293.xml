<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetFourKData]" directorySegmentName="seg_17" id="597DE3B0-1F0B-41B4-8CCC-06058A843293">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@PersonID    int, 
 @NWAID    int,  
 @MEPSOrgID   int,  
 --- MEPS DATA PARAMETERS 
 @MepsIPAddress    varchar(20) OUTPUT,  
 @MepsIPAddressUser   varchar(20) OUTPUT,  
 @MepsIPAddressPwd   varchar(20) OUTPUT, 
 @MepsSta.onID    char(3) OUTPUT, 
 @OtherMEPSRecordExists   char(1) OUTPUT, 
 --- EDUCATION DATA 
 @MaxEdLevel    char(2) OUTPUT, 
 @MaxEdCode    char(1) OUTPUT, 
 --- LANGUAGE DATA  
 @LangCode1    char(2) OUTPUT, 
 @LangCode2    char(2) OUTPUT, 
 @LangDesc1    char(22) OUTPUT, 
 @LangDesc2    char(22) OUTPUT, 
 --- MEDICAL, ASVAB DEPENDENT AND PRIOR SERVICE DATA 
 @LastFullMedicalDate   char(8) OUTPUT, 
 @LastASVABDate    char(8) OUTPUT, 
 @DependentCount   int OUTPUT, 
 @PriorService    char(1) OUTPUT, 
 --- RECRUITER SSN 
 @RecruiterSSN   char(9) OUTPUT, 
 --- ADDRESS DATA 
 @CurStreetAddress   char(29) OUTPUT, 
 @CurCityCode    char(4) OUTPUT,  
 @CurCityText    char(21) OUTPUT, 
 @CurCountyCode    char(3) OUTPUT, 
 @CurCountyText    char(36) OUTPUT, 
 @CurStateCode    char(2) OUTPUT, 
 @CurStateText   char(2) OUTPUT, 
 @CurZipcode    char(9) OUTPUT, 
 @HorStreetAddress   char(29) OUTPUT, 
 @HorCityCode    char(4) OUTPUT, 
 @HorCityText    char(21) OUTPUT, 
 @HorCountyCode    char(3) OUTPUT, 
 @HorCountyText    char(36) OUTPUT, 
 @HorStateCode    char(2) OUTPUT, 
 @HorStateText   char(2) OUTPUT, 
 @HorZipcode    char(9) OUTPUT, 
 --- COUNTRY AND MCC CODE 
 @Country   char(12) OUTPUT, 
 @RSSMCCCode   char(5) OUTPUT, 
 --- MEPCOM RACE/ETHNIC CODES 
 @MEPCOMEthnicCode  char(1) OUTPUT,  
 @MEPCOMRaceCode   char(1) OUTPUT, 
 @MEPCOMEthnicDesc  char(8) OUTPUT, 
 @MEPCOMRaceDesc   char(8) OUTPUT, 
 @AlienRegistra.onNumber char(9) OUTPUT 
AS 
 
DECLARE @DBID  INT 
DECLARE @DBNAME NVARCHAR(128) 
 
SELECT  
 @DBID = DB_ID(), 
 @DBNAME = DB_NAME() 
 
 
--- MAKE SURE THE PERSON EXISTS IN THE PERSON TABLE 
IF NOT EXISTS (SELECT P.PERSON_ID FROM PERSON P WHERE P.PERSON_ID = @PersonID) 
BEGIN 
 RAISERROR ('The Person does not exist in the PERSON table.', 16, 1, @DBID, @DBNAME) 
 RETURN 
END 
 
--- MAKE SURE THE PERSON EXISTS IN THE MARINE_CANDIDATE TABLE 
IF NOT EXISTS (SELECT MC.MARINE_CANDIDATE_ID FROM MARINE_CANDIDATE MC INNER JOIN PERSON P ON  
  (MC.MARINE_CANDIDATE_ID = P.PERSON_ID AND 
  P.PERSON_ID = @PersonID)) 
BEGIN 
 RAISERROR ('The Person does not exist in the MARINE_CANDIDATE table.', 16, 2, @DBID, @DBNAME) 
 RETURN 
END 
 
--- MAKE SURE THE PERSON EXISTS IN THE NWA TABLE 
IF NOT EXISTS (SELECT N.NWA_ID FROM NWA N INNER JOIN MARINE_CANDIDATE MC ON N.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID 
  INNER JOIN PERSON P ON  
   (MC.MARINE_CANDIDATE_ID = P.PERSON_ID AND 
   P.PERSON_ID = @PersonID)) 
BEGIN 
 RAISERROR ('The Person does not exist in the NWA table.', 16, 3, @DBID, @DBNAME) 
 RETURN 
END 
 
 
--- MEPS DATA 
SELECT 
 @MepsSta.onID = MOL.MEPS_CODE, 
 @MepsIPAddress = MOL.MEPS_IP_ADDRESS, 
 @MepsIPAddressUser = MOL.MEPS_IPADDRESS_USER,  
 @MepsIPAddressPwd = MOL.MEPS_IPADDRESS_PWD 
FROM 
 MEPS_ORGANIZATION_LOOKUP MOL 
WHERE 
 MOL.MEPS_ORGANIZATION_ID = @MepsOrgID  
 
--- OTHER MEPS RECORD EXISTS 
SELECT 
 @OtherMEPSRecordExists = CASE 
     WHEN EXISTS (SELECT 1 FROM MEPS_SCHEDULE MS 
       WHERE MS.NWA_ID = @NWAID AND 
       MS.MEPS_ORGANIZATION_ID != @MEPSOrgID)  
     THEN 'Y' 
     ELSE 'N' 
     END 
 
--- EDUCATION DATA 
SELECT 
 @MaxEdLevel = CE.EDUCATION_LEVEL, 
 @MaxEdCode = CE.EDUCATION_CODE 
FROM 
 CANDIDATE_EDUCATION CE 
WHERE  
 CE.MARINE_CANDIDATE_ID = @PersonID AND 
 CE.SCHOOL_END_DATE = (SELECT MAX(CE1.SCHOOL_END_DATE) FROM CANDIDATE_EDUCATION CE1 
    WHERE CE1.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID) 
 
 
----------------------- 
--- LANGUAGE DATA  
----------------------- 
SELECT 
 @LangCode1 = CASE (SELECT COUNT(CL1.MARINE_CANDIDATE_ID) FROM CANDIDATE_LANGUAGE CL1  
    WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID AND 
    CL1.LANGUAGE_CODE < CL.LANGUAGE_CODE)  
   WHEN 0 THEN CL.LANGUAGE_CODE 
   ELSE @LangCode1 
   END, 
 @LangCode2 = CASE (SELECT COUNT(CL1.MARINE_CANDIDATE_ID) FROM CANDIDATE_LANGUAGE CL1  
    WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID AND 
    CL1.LANGUAGE_CODE < CL.LANGUAGE_CODE)  
   WHEN 1 THEN CL.LANGUAGE_CODE 
   ELSE @LangCode2 
   END 
FROM 
 CANDIDATE_LANGUAGE CL 
WHERE 
 CL.MARINE_CANDIDATE_ID = @PersonID 
 
SELECT 
 @LangCode1 = COALESCE(@LangCode1, SPACE(0)), 
 @LangCode2 = COALESCE(@LangCode2, SPACE(0)) 
 
IF @LangCode1 IS NOT NULL 
BEGIN 
 SELECT 
  @LangDesc1 = L.LANGUAGE_CODE_DESCRIPTION  
 FROM 
  LANGUAGE L 
 WHERE  
  L.LANGUAGE_CODE = @LangCode1 
 
 
 SELECT @LangDesc1 = COALESCE(@LangDesc1, SPACE(0)) 
END  
 
IF @LangCode2 IS NOT NULL 
BEGIN 
 SELECT 
  @LangDesc2 = L.LANGUAGE_CODE_DESCRIPTION  
 FROM 
  LANGUAGE L 
 WHERE  
  L.LANGUAGE_CODE = @LangCode2 
 
 
 SELECT @LangDesc2 = COALESCE(@LangDesc2, SPACE(0)) 
END  
 
 
--- MEDICAL, ASVAB DEPENDENT AND PRIOR SERVICE DATA 
SELECT 
 @LastFullMedicalDate = COALESCE(CONVERT(CHAR(8), (SELECT MAX(CME.MEDICAL_EXAM_DATE) FROM CANDIDATE_MEDICAL_EXAM CME 
        WHERE CME.MARINE_CANDIDATE_ID = @PersonID AND 
        CME.MEDICAL_EXAM_TYPE = 'FULL'), 112), '00000000'), 
 @LastASVABDate = COALESCE(CONVERT(CHAR(8), (SELECT MAX(CA.ASVAB_DATE) FROM CANDIDATE_ASVAB CA 
       WHERE CA.MARINE_CANDIDATE_ID = @PersonID), 112), '00000000'), 
 @DependentCount = (SELECT COUNT(CD.MARINE_CANDIDATE_ID) FROM CANDIDATE_DEPENDENT CD 
      WHERE CD.MARINE_CANDIDATE_ID = @PersonID), 
 @PriorService = CASE  
    WHEN EXISTS (SELECT 1 FROM CANDIDATE_PRIOR_SERVICE CPS  
      WHERE CPS.MARINE_CANDIDATE_ID = @PersonID) THEN 'Y' 
    ELSE 'N' 
   END 
 
 
 
--- RECRUITER SSN 
IF @RecruiterSSN IS NULL OR LEN(RTRIM(LTRIM(@RecruiterSSN))) = 0 
BEGIN 
 SELECT 
  @RecruiterSSN = P.SOCIAL_SECURITY_NUMBER 
 FROM 
  NWA N INNER JOIN PERSON P ON  
   (N.RECRUITER_OF_RECORD_ID = P.PERSON_ID AND 
   N.NWA_ID = @NWAID) 
END 
 
----------------------- 
--- ADDRESS DATA 
----------------------- 
 
--- RETRIEVE CUR ADDRESS 
IF (@CurStreetAddress IS NULL OR LEN(RTRIM(LTRIM(@CurStreetAddress))) = 0) OR 
 (@CurStateCode IS NULL OR LEN(RTRIM(LTRIM(@CurStateCode))) = 0) OR 
 (@CurZipcode IS NULL OR LEN(RTRIM(LTRIM(@CurZipcode))) = 0) 
BEGIN 
 SELECT 
  @CurStreetAddress = CUR.STREET_ADDRESS, 
  @CurCityCode = CUR.CITY_CODE,  
  @CurCityText = (SELECT TOP 1 GL.CITY_TEXT FROM GEO_LOCATION GL 
    WHERE GL.CITY_CODE = CUR.CITY_CODE AND 
    GL.COUNTY_CODE = CUR.COUNTY_CODE AND 
    GL.STATE_CODE = CUR.STATE_CODE),  
  @CurCountyCode = CUR.COUNTY_CODE, 
  @CurCountyText = (SELECT TOP 1 GL.COUNTY_TEXT FROM GEO_LOCATION GL 
    WHERE GL.COUNTY_CODE = CUR.COUNTY_CODE AND 
    GL.STATE_CODE = CUR.STATE_CODE), 
  @CurStateCode = CUR.STATE_CODE, 
  @CurStateText = (SELECT TOP 1 GL.STATE_TEXT FROM GEO_LOCATION GL 
    WHERE GL.STATE_CODE = CUR.STATE_CODE), 
  @CurZipcode = CUR.ZIPCODE 
 FROM 
  CANDIDATE_ADDRESS CUR  
 WHERE 
  CUR.MARINE_CANDIDATE_ID = @PersonID AND 
  CUR.ADDRESS_TYPE = 'C'  
END 
 
 
--- RETRIEVE HOR ADDRESS 
IF (@HorStreetAddress IS NULL OR LEN(RTRIM(LTRIM(@HorStreetAddress))) = 0) OR 
 (@HorStateCode IS NULL OR LEN(RTRIM(LTRIM(@HorStateCode))) = 0) OR 
 (@HorZipcode IS NULL OR LEN(RTRIM(LTRIM(@HorZipcode))) = 0) 
BEGIN 
 SELECT 
 
  @HorStreetAddress = HOR.STREET_ADDRESS, 
  @HorCityCode = HOR.CITY_CODE,  
  @HorCityText = (SELECT TOP 1 GL.CITY_TEXT FROM GEO_LOCATION GL 
    WHERE GL.CITY_CODE = HOR.CITY_CODE AND 
    GL.COUNTY_CODE = HOR.COUNTY_CODE AND 
    GL.STATE_CODE = HOR.STATE_CODE),  
  @HorCountyCode = HOR.COUNTY_CODE, 
  @HorCountyText = (SELECT TOP 1 GL.COUNTY_TEXT FROM GEO_LOCATION GL 
    WHERE GL.COUNTY_CODE = HOR.COUNTY_CODE AND 
    GL.STATE_CODE = HOR.STATE_CODE), 
  @HorStateCode = HOR.STATE_CODE, 
  @HorStateText = (SELECT TOP 1 GL.STATE_TEXT FROM GEO_LOCATION GL 
    WHERE GL.STATE_CODE = HOR.STATE_CODE), 
  @HorZipcode = HOR.ZIPCODE 
 FROM 
  CANDIDATE_ADDRESS HOR 
 WHERE 
  HOR.MARINE_CANDIDATE_ID = @PersonID AND 
  HOR.ADDRESS_TYPE = 'H' 
END 
 
  
--- RETRIEVE COUNTRY OF ORIGIN 
IF @Country IS NULL OR LEN(LTRIM(RTRIM(@Country))) = 0 
BEGIN 
 --SELECT 
 -- @Country = C.COUNTRY_DESCRITION 
 --FROM  
 -- COUNTRY C INNER JOIN MARINE_CANDIDATE MC ON 
 --  (C.COUNTRY_CODE = MC.COUNTRY_OF_ORIGIN AND 
 --  MC.MARINE_CANDIDATE_ID = @PersonID) 
 SELECT 
  @Country = G.COUNTRY_DESCRIPTION 
 FROM  
  GEO_LOCATION G INNER JOIN MARINE_CANDIDATE MC ON 
   (G.STATE_CODE = MC.COUNTRY_OF_ORIGIN AND 
   MC.MARINE_CANDIDATE_ID = @PersonID) 
 
 SELECT @Country = COALESCE(@Country, SPACE(0)) 
END  
 
--- RETRIEVE RSS MCC CODE 
IF @RSSMCCCode IS NULL OR LEN(LTRIM(RTRIM(@RSSMCCCode))) = 0 
BEGIN 
 SELECT  
  @RSSMCCCode = RO.MCC_CODE 
 FROM 
  RECRUITING_ORGANIZATION RO INNER JOIN NWA N ON 
   (RO.ORGANIZATION_ID = N.ORGANIZATION_OF_RECORD_ID AND 
   N.NWA_ID = @NWAID) 
 
 SELECT @RSSMCCCode = COALESCE(@RSSMCCCode, SPACE(0)) 
END  
 
--- RETRIEVE MEPCOM RACE/ETHNIC CODES 
IF (@MEPCOMEthnicCode IS NULL OR LEN(LTRIM(RTRIM(@MEPCOMEthnicCode))) = 0) OR 
 (@MEPCOMRaceCode IS NULL OR LEN(LTRIM(RTRIM(@MEPCOMRaceCode))) = 0) 
BEGIN 
 SELECT  
  @MEPCOMEthnicCode = MC.MEPCOM_ETHNIC_CODE, 
  @MEPCOMRaceCode = MC.MEPCOM_RACE_CODE 
 FROM  
  MARINE_CANDIDATE MC  
 WHERE  
  MC.MARINE_CANDIDATE_ID = @PersonID 
 
 SELECT  
  @MEPCOMEthnicCode = COALESCE(@MEPCOMEthnicCode, SPACE(0)), 
  @MEPCOMRaceCode = COALESCE(@MEPCOMRaceCode, SPACE(0)) 
END  
 
 
--- RETRIEVE MEPCOM RACE/ETHNIC DESCRIPTIONS 
IF (@MEPCOMEthnicDesc IS NULL OR LEN(LTRIM(RTRIM(@MEPCOMEthnicDesc))) = 0) 
BEGIN 
 SELECT  
  @MEPCOMEthnicDesc = MEC.ETHNIC_CATEGORY_DESC 
 FROM  
  MEPCOM_ETHNIC_CATEGORY MEC 
 WHERE  
  MEC.ETHNIC_CATEGORY_CODE = @MEPCOMEthnicCode 
 
 SELECT @MEPCOMEthnicDesc = COALESCE(@MEPCOMEthnicDesc, SPACE(0)) 
END 
 
IF (@MEPCOMRaceDesc IS NULL OR LEN(LTRIM(RTRIM(@MEPCOMRaceDesc))) = 0) 
BEGIN 
 SELECT  
  @MEPCOMRaceDesc = MRC.RACE_CATEGORY_DESC 
 FROM  
  MEPCOM_RACE_CATEGORY MRC 
 WHERE  
  MRC.RACE_CATEGORY_CODE = @MEPCOMRaceCode 
 
 SELECT @MEPCOMRaceDesc = COALESCE(@MEPCOMRaceDesc, SPACE(0)) 
END 
 
--- RETRIEVE ALIEN REGISTRATION NUMBER 
IF (@AlienRegistra.onNumber IS NULL OR LEN(LTRIM(RTRIM(@AlienRegistra.onNumber))) = 0)  
BEGIN 
 IF EXISTS (SELECT 1 FROM ALIEN_REGISTRATION WHERE MARINE_CANDIDATE_ID = @PersonID) 
 BEGIN 
  SELECT  
   @AlienRegistra.onNumber = ARN 
  FROM  
   ALIEN_REGISTRATION 
  WHERE 
   MARINE_CANDIDATE_ID = @PersonID  
 END 
 
 SET @AlienRegistra.onNumber = COALESCE(@AlienRegistra.onNumber, SPACE(0)) 
END]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>