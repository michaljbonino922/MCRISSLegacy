<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateP.FromOssPac]" directorySegmentName="seg_12" id="BB588044-5B07-A641-23E9-89D947A56415">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@NwaGuidId   uniqueiden..er, 
 @OldRecP.Date  date.me, 
 @PFT_DATE   date.me, 
 @PFT_HEIGHT   decimal(4,2), 
 @PFT_WEIGHT   int, 
 @PFT_BODY_FAT_PCT .oat, 
 @PFT_RUN_MINUTES int, 
 @PFT_RUN_SECONDS int, 
 @PFT_PULLUPS  int, 
 @PFT_HANG   int, 
 @PFT_CRUNCHES  int, 
 @PFT_SCORE   int, 
 @USER_LOGIN   varchar(50), 
 @AmmoCanLi.        int = null, 
 @PFT_PLANK_MINUTES int = null, 
 @PFT_PLANK_SECONDS int = null, 
 @PFT_PUSHUPS  int = null, 
 @ScoreRankId  char(1) = null 
    
AS 
BEGIN 
 
 -- STEP 1: Start the transac.on 
 BEGIN TRANSACTION 
  
 DECLARE @NWA_ID int; 
 DECLARE @P._ID int; 
  
 SELECT @NWA_ID = NWA_ID  
 FROM dbo.NWA  
 WHERE rowguid = @NwaGuidId 
  
 SELECT TOP 1 @P._ID = PFT_ID 
 FROM dbo.P. 
 WHERE  
  NWA_ID =  @NWA_ID 
  AND YEAR(PFT_DATE) = YEAR(@OldRecP.Date) 
  AND MONTH(PFT_DATE) = MONTH(@OldRecP.Date) 
  AND DAY(PFT_DATE) = DAY(@OldRecP.Date) 
 ORDER BY  PFT_ID DESC 
  
 -- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
 IF @P._ID IS NOT NULL 
 BEGIN 
  -- if already exists.  UPDATE. 
   
  IF @PFT_HEIGHT IS NOT NULL AND @PFT_WEIGHT IS NOT NULL 
  BEGIN 
   UPDATE [dbo].[PFT] 
   SET 
    PFT_DATE =  @PFT_DATE, 
    PFT_HEIGHT =  @PFT_HEIGHT, 
    PFT_WEIGHT =  @PFT_WEIGHT, 
    PFT_BODY_FAT_PCT =  @PFT_BODY_FAT_PCT, 
    PFT_RUN_MINUTES =  @PFT_RUN_MINUTES, 
    PFT_RUN_SECONDS =  @PFT_RUN_SECONDS, 
    PFT_PULLUPS =  @PFT_PULLUPS, 
    PFT_PUSHUPS =  @PFT_PUSHUPS, 
    PFT_HANG =  @PFT_HANG, 
    PFT_CRUNCHES =  @PFT_CRUNCHES, 
    PFT_PLANK_MINUTES =  @PFT_PLANK_MINUTES, 
    PFT_PLANK_SECONDS =  @PFT_PLANK_SECONDS, 
    PFT_SCORE =  @PFT_SCORE, 
    ScoreRankId = @ScoreRankId, 
    USER_LOGIN =  @USER_LOGIN, 
    UPDATE_DATE =  GETDATE() 
   WHERE 
    PFT_ID = @P._ID 
  END 
   
  IF @AmmoCanLi. IS NOT NULL 
  BEGIN 
   UPDATE [dbo].[PFT] 
   SET 
    PFT_DATE =  @PFT_DATE, 
    AmmoCanLi. = @AmmoCanLi., 
    USER_LOGIN =  @USER_LOGIN, 
    UPDATE_DATE =  GETDATE() 
   WHERE 
    PFT_ID = @P._ID 
  END 
    
 END 
 ELSE 
 BEGIN 
  -- if does not exist.  INSERT. 
  INSERT INTO [dbo].[PFT] 
           ([NWA_ID] 
           ,[PFT_DATE] 
           ,[PFT_HEIGHT] 
           ,[PFT_WEIGHT] 
           ,[PFT_BODY_FAT_PCT] 
           ,[PFT_RUN_MINUTES] 
           ,[PFT_RUN_SECONDS] 
           ,[PFT_PULLUPS] 
     ,[PFT_PUSHUPS] 
           ,[PFT_HANG] 
           ,[PFT_CRUNCHES] 
           ,[PFT_SCORE] 
           ,[AmmoCanLi.] 
     ,[PFT_PLANK_MINUTES] 
           ,[PFT_PLANK_SECONDS] 
           ,[ScoreRankId] 
           ,[USER_LOGIN] 
           ,[UPDATE_DATE] 
           ,[rowguid]) 
  VALUES 
     ( 
   @NWA_ID, 
   @PFT_DATE, 
   @PFT_HEIGHT, 
   @PFT_WEIGHT, 
   @PFT_BODY_FAT_PCT, 
   @PFT_RUN_MINUTES, 
   @PFT_RUN_SECONDS, 
   @PFT_PULLUPS, 
   @PFT_PUSHUPS, 
   @PFT_HANG, 
   @PFT_CRUNCHES, 
   @PFT_SCORE, 
   @AmmoCanLi., 
   @PFT_PLANK_MINUTES, 
   @PFT_PLANK_SECONDS, 
   @ScoreRankId, 
   @USER_LOGIN, 
   GETDATE(), 
   NEWID() 
     ) 
 END 
 
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
 
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
  
 -- STEP 4: If we reach this point, the commands completed successfully 
 --         Commit the transac.on.... 
 COMMIT TRANSACTION 
  
END]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>