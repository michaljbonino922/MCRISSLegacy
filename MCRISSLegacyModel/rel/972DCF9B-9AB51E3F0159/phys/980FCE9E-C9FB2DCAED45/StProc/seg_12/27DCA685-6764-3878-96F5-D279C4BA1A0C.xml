<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[TestSearchLeads_FilterAndPage]" directorySegmentName="seg_12" id="27DCA685-6764-3878-96F5-D279C4BA1A0C">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:42:37 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[( 
 @OrgID int = 0, 
 @RecruiterID uniqueiden..er = null, 
 @LastName varchar(15) = null, 
 @FirstName varchar(15) = null, 
 @SSN varchar(9) = null, 
 @MOS int = 0, 
 @RUC int = 0, 
 @Status int = 0,  
 @Disposi.on int = 0,  
 @QSN varchar(10) = null, 
 @SortColumnNumber int, 
 @ColumnSortOrder bit = 1, 
 @startRowIndex int, 
 @maximumRows int, 
 @maxTotalRowsToSort int 
) 
AS 
 
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
declare @totalrows int 
declare @specialMOSID int 
declare @isRecruiterFirstPageSearch bit 
 
--DECLARE @OrgID int 
--SET @OrgID = 28 
 
--DECLARE @RecruiterID uniqueiden..er 
--SET @RecruiterID = 'C6C5434E-E57D-4362-8342-E65C48568DB8' 
 
--DECLARE @LastName varchar(15) 
--SET @LastName = @LastName 
 
--DECLARE @FirstName varchar(15) 
--SET @FirstName = @FirstName 
 
--DECLARE @SSN varchar(9) 
--SET @SSN = @SSN 
 
--DECLARE @MOS int 
--SET @MOS = @MOS 
 
--DECLARE @RUC int 
--SET @RUC = @RUC 
 
--DECLARE @Status int 
--SET @Status = @Status 
 
--DECLARE @Disposi.on int 
--SET @Disposi.on = @Disposi.on 
 
--DECLARE @QSN varchar(10) 
--SET @QSN = @QSN 
 
--DECLARE @SortColumnNumber int 
--SET @SortColumnNumber = @SortColumnNumber 
 
--DECLARE @ColumnSortOrder bit 
--SET @ColumnSortOrder = @ColumnSortOrder 
 
--DECLARE @startRowIndex int 
--SET @startRowIndex = @startRowIndex 
 
--DECLARE @maximumRows int 
--SET @maximumRows = @maximumRows 
 
--DECLARE @maxTotalRowsToSort int 
--SET @maxTotalRowsToSort = @maxTotalRowsToSort 
 
set @specialMOSID = 931 --('8999') 
 
--Since most common search is by recruiter only, we make that speedy 
if @RecruiterID is NOT NULL and @LastName is NULL and @FirstName is NULL and @SSN is null and 
 @MOS=0 and @RUC=0 and @Status=0 and @Disposi.on=0 and @QSN is NULL 
set @isRecruiterFirstPageSearch = 1 
else 
set @isRecruiterFirstPageSearch = 0 
 
--Get the count.  Split out speedy Recruiter search. 
IF @isRecruiterFirstPageSearch = 1 
BEGIN 
SELECT @totalrows = COUNT(*) FROM 
 [dbo].[Recruit] recruit 
 INNER JOIN [dbo].[Person] p on recruit.PersonID = p.PersonID 
 INNER JOIN [dbo].[RecruitCurrentLead] rcl on rcl.RecruitID = recruit.RecruitID 
 INNER JOIN [dbo].[Lead] l on rcl.LeadID = l.LeadID 
WHERE 
 l.AssignedRecruiterID = @RecruiterID 
END 
ELSE 
BEGIN 
--Less speedy.  We want the count so that we can know whether or not sor.ng/paging will cripple the search 
SELECT @totalrows = COUNT(*) FROM 
 [dbo].[Recruit] recruit 
 INNER JOIN [dbo].[Person] p on recruit.PersonID = p.PersonID 
 INNER JOIN [dbo].[RecruitCurrentLead] rcl on rcl.RecruitID = recruit.RecruitID 
 INNER JOIN [dbo].[Lead] l on rcl.LeadID = l.LeadID  
 INNER JOIN [dbo].[LeadStatusDisposi.on] lsd on lsd.LeadID = l.LeadID 
 INNER JOIN [dbo].[StatusDisposi.on] sd on sd.StatusDisposi.onID = lsd.StatusDisposi.onID 
 INNER JOIN [dbo].[Status] st on st.StatusID = sd.StatusID 
 LEFT OUTER JOIN [dbo].[Disposi.on] dis on dis.Disposi.onID = sd.Disposi.onID 
 LEFT OUTER JOIN [dbo].[MOS] mos on MOSID = l.PrimaryMOSID 
 LEFT OUTER JOIN [dbo].[RUC] on [RUC].RUCID = l.PresentRUCID 
 LEFT OUTER JOIN [dbo].[Recruiter] recruiter on recruiter.RecruiterID = l.AssignedRecruiterID 
 LEFT OUTER JOIN [dbo].[ApplicantPackage] ap on ap.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[QSN] q on q.QSNID = ap.QSNID 
 LEFT JOIN [dbo].[vwOrgUnitIDs] orgs ON l.AtachedPSRSSID = orgs.root 
 LEFT JOIN [dbo].[PSROrgUnit] orgHQ ON orgHQ.PSROrgUnitID = orgs.HQ 
 LEFT JOIN [dbo].[PSROrgUnit] orgRegion ON orgRegion.PSROrgUnitID = orgs.Region 
 LEFT JOIN [dbo].[PSROrgUnit] orgRS ON orgRs.PSROrgUnitID = orgs.RS 
 LEFT JOIN [dbo].[PSROrgUnit] orgRSS ON orgRss.PSROrgUnitID = orgs.RSS 
WHERE   
 (p.LastName like @LastName + '%' OR @LastName IS NULL)  
 and (p.FirstName Like @FirstName + '%' or (@FirstName IS NULL)) 
 and (p.SSN = @SSN or @SSN IS NULL) 
 and (mos.MOSID = @MOS or (@MOS IS NULL) or (@MOS = 0)) 
 and ([RUC].RUCID = @RUC or @RUC IS NULL or @RUC = 0) 
 and (st.StatusID = @Status or @Status IS NULL or @Status = 0) 
 and (dis.Disposi.onID = @Disposi.on or @Disposi.on IS NULL or @Disposi.on = 0 ) 
 and (q.SerialNumber = @QSN or @QSN IS NULL)     
 and ( --hide unworkable leads unless searching by .rst/last, ssn, or speci.cally unworkable 
    (@LastName IS NOT NULL and @FirstName IS NOT NULL) 
    or @SSN IS NOT NULL 
    or (st.StatusID = @Status and st.Descrip.on = 'Unworkable')  
    or (st.Descrip.on = 'Unworkable' and l.Veri.edUnworkable_UserID IS NULL) 
    or st.Descrip.on != 'Unworkable'  --shows all leads that are not unworkable 
    or lsd.StatusDisposi.onID IS NULL 
  ) 
 AND ( recruiter.RecruiterID = @RecruiterID OR (@RecruiterID IS NULL) ) 
 AND 
  ( orgRSS.PSROrgUnitID = @OrgID 
   OR orgRS.PSROrgUnitID = @OrgID 
   OR orgRegion.PSROrgUnitID = @OrgID 
   OR orgHQ.PSROrgUnitID = @OrgID 
  ) 
END 
 
--If no leads return quickly 
IF @totalrows = 0 
RETURN 
ELSE 
--If count is less than @maxTotalRowsToSort, we'll sort and page.  
IF @totalrows < @maxTotalRowsToSort 
BEGIN 
declare @WorkingResultSet as TABLE ( 
 LeadID uniqueiden..er, 
 FirstName varchar(100), 
 LastName varchar(100), 
 Rank varchar(100), 
 PMOS varchar(100), 
 Status varchar(100), 
 Disposi.on varchar(100), 
 RE_Code varchar(100), 
 Reserve_ECC varchar(100), 
 EAS date.me, 
 RUC varchar(100), 
 Telephone varchar(100), 
 Email varchar(100), 
 City varchar(100), 
 State varchar(100), 
 Zip varchar(100), 
 SSN varchar(15), 
 Recruiter varchar(100) 
) 
 
--remember recruiter search is split out for speed 
IF @isRecruiterFirstPageSearch = 1 
BEGIN 
INSERT INTO @WorkingResultSet 
SELECT 
 l.LeadID as LeadID, 
 p.FirstName as FirstName, 
 p.LastName as LastName, 
 rank.Abbr as RANK, 
 mos.Descrip.on as PMOS, 
 st.Descrip.on as Status, 
 dis.Descrip.on as Disposi.on, 
 l.ReEnlistmentCode as RE_Code, 
 l.DateRECC as Reserve_ECC, 
 l.DateEndAc.veService as EAS, 
 [RUC].Descrip.on as RUC, 
 ph.PrimaryPhone as Telephone, 
 ema.Email as Email, 
 ci.es.Name as City, 
 states.Name as State,  
 addr.ZipCode as Zip, 
 p.SSN as SSN, 
 ISNULL(rp.Title, '') + ' ' + rp.lastName as Recruiter 
FROM  
 [dbo].[Recruit] recruit 
 INNER JOIN [dbo].[Person] p on recruit.PersonID = p.PersonID 
 INNER JOIN [dbo].[RecruitCurrentLead] rcl on rcl.RecruitID = recruit.RecruitID 
 INNER JOIN [dbo].[Lead] l on rcl.LeadID = l.LeadID  
 LEFT OUTER JOIN [dbo].[MOS] mos on MOSID = l.PrimaryMOSID 
 LEFT OUTER JOIN [dbo].[PayGrade] pg on pg.PayGradeID = l.PayGradeID 
 LEFT OUTER JOIN [dbo].[Rank] rank on rank.GradeID = pg.PayGradeID and  
   ((l.PrimaryMOSID = @specialMOSID and rank.SpecialMOSID = @specialMOSID) or 
    (l.PrimaryMOSID <> @specialMOSID and rank.SpecialMOSID is null)) 
 LEFT OUTER JOIN [dbo].[LeadStatusDisposi.on] lsd on lsd.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[StatusDisposi.on] sd on sd.StatusDisposi.onID = lsd.StatusDisposi.onID 
 LEFT OUTER JOIN [dbo].[Status] st on st.StatusID = sd.StatusID 
 LEFT OUTER JOIN [dbo].[Disposi.on] dis on dis.Disposi.onID = sd.Disposi.onID 
 LEFT OUTER JOIN [dbo].[RUC] on [RUC].RUCID = l.PresentRUCID 
 LEFT OUTER JOIN [dbo].[EmailAddress] ema on ema.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[LeadPhones] ph on ph.LeadID = l.leadID 
 LEFT OUTER JOIN [dbo].[Address] addr on addr.LeadID = l.LeadID 
 LEFT OUTER JOIN [USMC].[vwCi.es] ci.es on ci.es.Code = addr.CityID and ci.es.CountyCode = addr.CountyID and ci.es.StateCode = addr.StateID 
 LEFT OUTER JOIN [USMC].[vwStatesWithTerritories] states on states.Code = addr.StateID 
 LEFT OUTER JOIN [dbo].[Recruiter] recruiter on recruiter.RecruiterID = l.AssignedRecruiterID 
 LEFT OUTER JOIN [dbo].[Person] rp on rp.PersonID = recruiter.PersonID 
 LEFT OUTER JOIN [dbo].[ApplicantPackage] ap on ap.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[QSN] q on q.QSNID = ap.QSNID 
 LEFT JOIN [dbo].[vwOrgUnitIDs] orgs ON l.AtachedPSRSSID = orgs.root 
 LEFT JOIN [dbo].[PSROrgUnit] orgHQ ON orgHQ.PSROrgUnitID = orgs.HQ 
 LEFT JOIN [dbo].[PSROrgUnit] orgRegion ON orgRegion.PSROrgUnitID = orgs.Region 
 LEFT JOIN [dbo].[PSROrgUnit] orgRS ON orgRs.PSROrgUnitID = orgs.RS 
 LEFT JOIN [dbo].[PSROrgUnit] orgRSS ON orgRss.PSROrgUnitID = orgs.RSS 
WHERE   
 recruiter.RecruiterID = @RecruiterID 
 and ema.EmailAddressTypeID = 1 
 and ( --hide unworkable leads unless searching by .rst/last, ssn, or speci.cally unworkable 
    (@LastName IS NOT NULL and @FirstName IS NOT NULL) 
    or @SSN IS NOT NULL 
    or (st.StatusID = @Status and st.Descrip.on = 'Unworkable')  
    or (st.Descrip.on = 'Unworkable' and l.Veri.edUnworkable_UserID IS NULL) 
    or st.Descrip.on != 'Unworkable'  --shows all leads that are not unworkable 
    or lsd.StatusDisposi.onID IS NULL 
  ) 
 AND 
  ( orgRSS.PSROrgUnitID = @OrgID 
   OR orgRS.PSROrgUnitID = @OrgID 
   OR orgRegion.PSROrgUnitID = @OrgID 
   OR orgHQ.PSROrgUnitID = @OrgID 
  ) 
END 
ELSE 
--non-recruiter search 
BEGIN 
INSERT INTO @WorkingResultSet 
SELECT 
 l.LeadID as LeadID, 
 p.FirstName as FirstName, 
 p.LastName as LastName, 
 rank.Abbr as RANK, 
 mos.Descrip.on as PMOS, 
 st.Descrip.on as Status, 
 dis.Descrip.on as Disposi.on, 
 l.ReEnlistmentCode as RE_Code, 
 l.DateRECC as Reserve_ECC, 
 l.DateEndAc.veService as EAS, 
 [RUC].Descrip.on as RUC, 
 ph.PrimaryPhone as Telephone, 
 ema.Email as Email, 
 ci.es.Name as City, 
 states.Name as State,  
 addr.ZipCode as Zip, 
 p.SSN as SSN, 
 ISNULL(rp.Title, '') + ' ' + rp.lastName as Recruiter 
FROM  
 [dbo].[Recruit] recruit 
 INNER JOIN [dbo].[Person] p on recruit.PersonID = p.PersonID 
 INNER JOIN [dbo].[RecruitCurrentLead] rcl on rcl.RecruitID = recruit.RecruitID 
 INNER JOIN [dbo].[Lead] l on rcl.LeadID = l.LeadID  
 LEFT OUTER JOIN [dbo].[MOS] mos on MOSID = l.PrimaryMOSID 
 LEFT OUTER JOIN [dbo].[PayGrade] pg on pg.PayGradeID = l.PayGradeID 
 LEFT OUTER JOIN [dbo].[Rank] rank on rank.GradeID = pg.PayGradeID and  
   ((l.PrimaryMOSID = @specialMOSID and rank.SpecialMOSID = @specialMOSID) or 
    (l.PrimaryMOSID <> @specialMOSID and rank.SpecialMOSID is null)) 
 LEFT OUTER JOIN [dbo].[LeadStatusDisposi.on] lsd on lsd.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[StatusDisposi.on] sd on sd.StatusDisposi.onID = lsd.StatusDisposi.onID 
 LEFT OUTER JOIN [dbo].[Status] st on st.StatusID = sd.StatusID 
 LEFT OUTER JOIN [dbo].[Disposi.on] dis on dis.Disposi.onID = sd.Disposi.onID 
 LEFT OUTER JOIN [dbo].[RUC] on [RUC].RUCID = l.PresentRUCID 
 LEFT OUTER JOIN [dbo].[EmailAddress] ema on ema.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[LeadPhones] ph on ph.LeadID = l.leadID 
 LEFT OUTER JOIN [dbo].[Address] addr on addr.LeadID = l.LeadID 
 LEFT OUTER JOIN [USMC].[vwCi.es] ci.es on ci.es.Code = addr.CityID and ci.es.CountyCode = addr.CountyID and ci.es.StateCode = addr.StateID 
 LEFT OUTER JOIN [USMC].[vwStatesWithTerritories] states on states.Code = addr.StateID 
 LEFT OUTER JOIN [dbo].[Recruiter] recruiter on recruiter.RecruiterID = l.AssignedRecruiterID 
 LEFT OUTER JOIN [dbo].[Person] rp on rp.PersonID = recruiter.PersonID 
 LEFT OUTER JOIN [dbo].[ApplicantPackage] ap on ap.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[QSN] q on q.QSNID = ap.QSNID 
 LEFT JOIN [dbo].[vwOrgUnitIDs] orgs ON l.AtachedPSRSSID = orgs.root 
 LEFT JOIN [dbo].[PSROrgUnit] orgHQ ON orgHQ.PSROrgUnitID = orgs.HQ 
 LEFT JOIN [dbo].[PSROrgUnit] orgRegion ON orgRegion.PSROrgUnitID = orgs.Region 
 LEFT JOIN [dbo].[PSROrgUnit] orgRS ON orgRs.PSROrgUnitID = orgs.RS 
 LEFT JOIN [dbo].[PSROrgUnit] orgRSS ON orgRss.PSROrgUnitID = orgs.RSS 
WHERE   
 (p.LastName like @LastName + '%' OR @LastName IS NULL)  
 and (p.FirstName Like @FirstName + '%' or (@FirstName IS NULL)) 
 and (p.SSN = @SSN or @SSN IS NULL) 
 and (mos.MOSID = @MOS or (@MOS IS NULL) or (@MOS = 0)) 
 and ([RUC].RUCID = @RUC or @RUC IS NULL or @RUC = 0) 
 and (st.StatusID = @Status or @Status IS NULL or @Status = 0) 
 and (dis.Disposi.onID = @Disposi.on or @Disposi.on IS NULL or @Disposi.on = 0 ) 
 and (ema.EmailAddressTypeID = 1 or ema.EmailAddressTypeID IS NULL) 
 and (q.SerialNumber = @QSN or @QSN IS NULL)     
 and ( --hide unworkable leads unless searching by .rst/last, ssn, or speci.cally unworkable 
    (@LastName IS NOT NULL and @FirstName IS NOT NULL) 
    or @SSN IS NOT NULL 
    or (st.StatusID = @Status and st.Descrip.on = 'Unworkable')  
    or (st.Descrip.on = 'Unworkable' and l.Veri.edUnworkable_UserID IS NULL) 
    or st.Descrip.on != 'Unworkable'  --shows all leads that are not unworkable 
    or lsd.StatusDisposi.onID IS NULL 
  ) 
 AND ( recruiter.RecruiterID = @RecruiterID OR (@RecruiterID IS NULL) ) 
 AND 
  ( orgRSS.PSROrgUnitID = @OrgID 
   OR orgRS.PSROrgUnitID = @OrgID 
   OR orgRegion.PSROrgUnitID = @OrgID 
   OR orgHQ.PSROrgUnitID = @OrgID 
  ) 
END 
 
--use the working result set (generated by the recruiter or non-recruiter branches) to get correct sort and page 
 SELECT RowNum, @totalrows AS TotalRows, 
 LeadID, 
 FirstName, 
 LastName, 
 RANK, 
 PMOS, 
 Status, 
 Disposi.on, 
 RE_Code, 
 Reserve_ECC, 
 EAS, 
 RUC, 
 Telephone, 
 Email, 
 City, 
 State,  
 Zip, 
 SSN, 
 Recruiter 
FROM 
(SELECT  
 ROW_NUMBER() OVER ( ORDER BY  
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 1 THEN LastName END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 1 THEN LastName END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 2 THEN FirstName END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 2 THEN FirstName END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 3 THEN rank END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 3 THEN rank END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 4 THEN PMOS END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 4 THEN PMOS END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 5 THEN Status END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 5 THEN Status END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 6 THEN Disposi.on END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 6 THEN Disposi.on END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 7 THEN RE_CODE END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 7 THEN RE_CODE END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 8 THEN Reserve_ECC END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 8 THEN Reserve_ECC END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 9 THEN EAS END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 9 THEN EAS END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 10 THEN RUC END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 10 THEN RUC END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 11 THEN Telephone END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 11 THEN Telephone END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 12 THEN Email END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 12 THEN Email END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 13 THEN City END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 13 THEN City END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 14 THEN State END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 14 THEN State END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 15 THEN Zip END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 15 THEN Zip END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 16 THEN SSN END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 16 THEN SSN END END DESC, 
 
  CASE WHEN @ColumnSortOrder = 1 THEN CASE WHEN @SortColumnNumber = 17 THEN Recruiter END END ASC, 
  CASE WHEN @ColumnSortOrder = 0 THEN CASE WHEN @SortColumnNumber = 17 THEN Recruiter END END DESC, 
 
       CASE WHEN @ColumnSortOrder <> 0 and @ColumnSortOrder <> 1 and (@SortColumnNumber < 1 or @SortColumnNumber > 17) 
    THEN LastName END ASC 
 ) as RowNum, 
 * 
FROM  
 @WorkingResultSet 
) as Lead 
 WHERE @startRowIndex is null OR (RowNum BETWEEN @startRowIndex AND (@startRowIndex + @maximumRows) - 1) 
 Order By RowNum 
END 
ELSE 
--too many rows for e.cient sor.ng and paging, so we just get the top page of unsorted leads 
BEGIN 
SELECT TOP (@maximumRows) @totalrows AS TotalRows, 
 l.LeadID as LeadID, 
 p.FirstName as FirstName, 
 p.LastName as LastName, 
 rank.Abbr as RANK, 
 mos.Descrip.on as PMOS, 
 st.Descrip.on as Status, 
 dis.Descrip.on as Disposi.on, 
 l.ReEnlistmentCode as RE_Code, 
 l.DateRECC as Reserve_ECC, 
 l.DateEndAc.veService as EAS, 
 [RUC].Descrip.on as RUC, 
 ph.PrimaryPhone as Telephone, 
 ema.Email as Email, 
 ci.es.Name as City, 
 states.Name as State,  
 addr.ZipCode as Zip, 
 p.SSN as SSN, 
 ISNULL(rp.Title, '') + ' ' + rp.lastName as Recruiter 
FROM 
 [dbo].[Recruit] recruit 
 INNER JOIN [dbo].[Person] p on recruit.PersonID = p.PersonID 
 INNER JOIN [dbo].[RecruitCurrentLead] rcl on rcl.RecruitID = recruit.RecruitID 
 INNER JOIN [dbo].[Lead] l on rcl.LeadID = l.LeadID  
 LEFT OUTER JOIN [dbo].[MOS] mos on MOSID = l.PrimaryMOSID 
 LEFT OUTER JOIN [dbo].[PayGrade] pg on pg.PayGradeID = l.PayGradeID 
 LEFT OUTER JOIN [dbo].[Rank] rank on rank.GradeID = pg.PayGradeID and  
   ((l.PrimaryMOSID = @specialMOSID and rank.SpecialMOSID = @specialMOSID) or 
    (l.PrimaryMOSID <> @specialMOSID and rank.SpecialMOSID is null)) 
 LEFT OUTER JOIN [dbo].[LeadStatusDisposi.on] lsd on lsd.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[StatusDisposi.on] sd on sd.StatusDisposi.onID = lsd.StatusDisposi.onID 
 LEFT OUTER JOIN [dbo].[Status] st on st.StatusID = sd.StatusID 
 LEFT OUTER JOIN [dbo].[Disposi.on] dis on dis.Disposi.onID = sd.Disposi.onID 
 LEFT OUTER JOIN [dbo].[RUC] on [RUC].RUCID = l.PresentRUCID 
 LEFT OUTER JOIN [dbo].[EmailAddress] ema on ema.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[LeadPhones] ph on ph.LeadID = l.leadID 
 LEFT OUTER JOIN [dbo].[Address] addr on addr.LeadID = l.LeadID 
 LEFT OUTER JOIN [USMC].[vwCi.es] ci.es on ci.es.Code = addr.CityID and ci.es.CountyCode = addr.CountyID and ci.es.StateCode = addr.StateID 
 LEFT OUTER JOIN [USMC].[vwStatesWithTerritories] states on states.Code = addr.StateID 
 LEFT OUTER JOIN [dbo].[Recruiter] recruiter on recruiter.RecruiterID = l.AssignedRecruiterID 
 LEFT OUTER JOIN [dbo].[Person] rp on rp.PersonID = recruiter.PersonID 
 LEFT OUTER JOIN [dbo].[ApplicantPackage] ap on ap.LeadID = l.LeadID 
 LEFT OUTER JOIN [dbo].[QSN] q on q.QSNID = ap.QSNID 
 LEFT JOIN [dbo].[vwOrgUnitIDs] orgs ON l.AtachedPSRSSID = orgs.root 
 LEFT JOIN [dbo].[PSROrgUnit] orgHQ ON orgHQ.PSROrgUnitID = orgs.HQ 
 LEFT JOIN [dbo].[PSROrgUnit] orgRegion ON orgRegion.PSROrgUnitID = orgs.Region 
 LEFT JOIN [dbo].[PSROrgUnit] orgRS ON orgRs.PSROrgUnitID = orgs.RS 
 LEFT JOIN [dbo].[PSROrgUnit] orgRSS ON orgRss.PSROrgUnitID = orgs.RSS 
WHERE   
 (p.LastName like @LastName + '%' OR @LastName IS NULL)  
 and (p.FirstName Like @FirstName + '%' or (@FirstName IS NULL)) 
 and (p.SSN = @SSN or @SSN IS NULL) 
 and (mos.MOSID = @MOS or (@MOS IS NULL) or (@MOS = 0)) 
 and ([RUC].RUCID = @RUC or @RUC IS NULL or @RUC = 0) 
 and (st.StatusID = @Status or @Status IS NULL or @Status = 0) 
 and (dis.Disposi.onID = @Disposi.on or @Disposi.on IS NULL or @Disposi.on = 0 ) 
 and (q.SerialNumber = @QSN or @QSN IS NULL)     
 and ( --hide unworkable leads unless searching by .rst/last, ssn, or speci.cally unworkable 
    (@LastName IS NOT NULL and @FirstName IS NOT NULL) 
    or @SSN IS NOT NULL 
    or (st.StatusID = @Status and st.Descrip.on = 'Unworkable')  
    or (st.Descrip.on = 'Unworkable' and l.Veri.edUnworkable_UserID IS NULL) 
    or st.Descrip.on != 'Unworkable'  --shows all leads that are not unworkable 
    or lsd.StatusDisposi.onID IS NULL 
  ) 
 AND ( recruiter.RecruiterID = @RecruiterID OR (@RecruiterID IS NULL) ) 
 AND 
  ( orgRSS.PSROrgUnitID = @OrgID 
   OR orgRS.PSROrgUnitID = @OrgID 
   OR orgRegion.PSROrgUnitID = @OrgID 
   OR orgHQ.PSROrgUnitID = @OrgID 
  ) 
END]]></body>
<schema>CEC76C37-9D45-8E15-510C-CBE87FFE10F5</schema>
<database>0070DB58-AADF-159B-2831-3CD8EEAC6A57</database>
</StoredProcedureSqlServerv2k5>