<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertOrUpdateCollegePro.leUsingGuid]" directorySegmentName="seg_10" id="3C7FAC47-E2F1-D14E-708A-0B08FC4BE724">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@CollegePro.leID  uniqueiden..er, 
            @SchoolCode uniqueiden..er, 
            @FiscalYear int, 
            @BarronsIndex varchar(2), 
            @PriorityCode  smallint, 
         @NumMale smallint,  
         @NumFemale smallint, 
         @NumAfricanAmerican smallint, 
         @NumHispanic smallint, 
         @NumOther smallint, 
         @NumQCPMale smallint, 
         @NumQCPFemale smallint, 
         @NumQCPAfricanAmerican smallint, 
         @NumQCPHispanic smallint, 
         @NumQCPOther smallint, 
         @AvgAVT smallint, 
         @AvgSAT smallint, 
         @InStateCost numeric, 
         @OutOfStateCost numeric, 
         @DistanceToCollege varchar(20),  
         @TimeToCollegeInMinutes varchar(20), 
         @SizeOfFreshmanClass smallint, 
         @PercentLivingOnCampus smallint, 
         @PercentGradua.on smallint, 
         @UserLogin varchar(50) 
          
AS 
SET NOCOUNT ON 
 
DECLARE @SchoolCodeint int 
 
Select @SchoolCodeint  = School_Code FROM High_School hs where hs.rowguid = @SchoolCode 
 
--IMPORTANT NOTE: Add begin and end transac.on 
 IF EXISTS (SELECT '1' from [USMC].[CollegePro.le]  where CollegePro.leID = @CollegePro.leID 
                 and @CollegePro.leID IS NOT NULL) 
  
 
 
 --IMPORTANT NOTE: Add begin and end transac.on 
 -- then update the exisi.ng record 
  BEGIN  
  
   UPDATE [MCRISS].[USMC].[CollegePro.le] 
    SET  
   --cannot update the school_code   
    [BarronsIndex] = @BarronsIndex, 
    [PriorityCode] = @PriorityCode, 
       [NumMale] = @NumMale, 
        [NumFemale] = @NumFemale, 
        [NumAfricanAmerican] = @NumAfricanAmerican, 
        [NumHispanic] = @NumHispanic, 
        [NumOther] = @NumOther, 
        [NumQCPMale] = @NumQCPMale, 
        [NumQCPFemale] = @NumQCPFemale, 
        [NumQCPAfricanAmerican] = @NumQCPAfricanAmerican, 
        [NumQCPHispanic] = @NumQCPHispanic, 
        [NumQCPOther] = @NumQCPOther, 
        [AvgAVT] = @AvgAVT, 
        [AvgSAT] = @AvgSAT, 
        [InStateCost] = @InStateCost, 
        [OutOfStateCost] = @OutOfStateCost, 
        [DistanceToCollege] = @DistanceToCollege, 
        [TimeToCollegeInMinutes] = @TimeToCollegeInMinutes, 
        [SizeOfFreshmanClass] = @SizeOfFreshmanClass, 
        [PercentLivingOnCampus] = @PercentLivingOnCampus, 
        [PercentGradua.on] = @PercentGradua.on, 
        [UserLogin] = @UserLogin, 
        [UpdateDate] = GetDate() 
        
       WHERE  CollegePro.leID  = @CollegePro.leID  
 END  
   
 --- ELSE  PROCEED WITH INSERT 
   ELSE  
    BEGIN 
   
    INSERT INTO [MCRISS].[USMC].[CollegePro.le] 
          ([CollegePro.leID],[SCHOOL_CODE],[FiscalYear],[BarronsIndex],[PriorityCode], 
          [NumMale],[NumFemale],[NumAfricanAmerican],[NumHispanic],  
    [NumOther],[NumQCPMale],[NumQCPFemale],[NumQCPAfricanAmerican],[NumQCPHispanic], 
    [NumQCPOther],[AvgAVT],[AvgSAT],[InStateCost],[OutOfStateCost],[DistanceToCollege],  
    [TimeToCollegeInMinutes],[SizeOfFreshmanClass] ,[PercentLivingOnCampus], 
    [PercentGradua.on],[UserLogin] ,[UpdateDate]) 
            
          
    VALUES          
       (@CollegePro.leID,@SchoolCodeint, @FiscalYear, @BarronsIndex, @PriorityCode, 
       @NumMale, @NumFemale, @NumAfricanAmerican,  @NumHispanic,  @NumOther, 
          @NumQCPMale, @NumQCPFemale, @NumQCPAfricanAmerican, @NumQCPHispanic, @NumQCPOther, @AvgAVT,  
          @AvgSAT, @InStateCost, @OutOfStateCost, @DistanceToCollege, @TimeToCollegeInMinutes, 
   @SizeOfFreshmanClass, @PercentLivingOnCampus, @PercentGradua.on,  @UserLogin,   
   GetDate()) 
    
   
   
 END 
 -- insert smcr reserve unit 
 INSERT INTO [USMC].[CollegePro.leSMCRReserveUnit] 
   ([SMCRReserveUnitID], [CollegePro.leID], [UserLogin], [UpdateDate]) 
  SELECT [SMCRReserveUnitID], @CollegePro.leID, @UserLogin, GetDate() 
   FROM [USMC].[SMCRReserveUnit] 
   WHERE [Organiza.onID] = (Select [Organiza.onID] from [HIGH_SCHOOL] where [rowguid] = @SchoolCode) 
    AND [SMCRReserveUnitID]  
     not in( 
     SELECT [SMCRReserveUnitID] FROM [USMC].[CollegePro.leSMCRReserveUnit]  
        WHERE  [CollegePro.leID] = @CollegePro.leID) 
--- CLEAN UP 
SET NOCOUNT OFF]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>