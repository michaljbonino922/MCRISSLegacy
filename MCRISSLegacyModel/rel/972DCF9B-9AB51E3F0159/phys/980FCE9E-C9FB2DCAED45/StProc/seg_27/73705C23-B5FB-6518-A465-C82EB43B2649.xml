<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[UpdateOCSRecord]" directorySegmentName="seg_27" id="73705C23-B5FB-6518-A465-C82EB43B2649">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:49 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@OCSID    int   = 0, 
 @NWAID   int  = NULL, 
 @ScheduledShipDate date.me = NULL, 
 @PEBD   date.me = NULL, 
 @ShippedProgram  varchar(2) = NULL, 
 @Na.onalCallToService char(1)  = NULL, 
 --- @OCCR   char(1)  = NULL, 
 @TrainingType  varchar(8) = NULL, 
 @ClassIncrement  int   = NULL, 
 @FY   int, 
 @ReportDate  date.me = NULL, 
 @Company  char(1)  = NULL, 
 @Platoon  int  = NULL, 
 @ClassResult  char(1)  = NULL, 
 @ClassResultDate date.me = NULL, 
 @ClassDropReason varchar(6) = NULL, 
 @Ini.alDropReason varchar(6) = NULL, 
 @TrainingDropWeek int  = NULL, 
 @AcademicAverage .oat  = NULL, 
 @MilitarySkillsAverage .oat  = NULL, 
 @LeadershipAverage .oat  = NULL, 
 @ClassAverage  .oat  = NULL, 
 @ClassStanding  int  = NULL, 
 @No.ceOfEligibility char(1)  = NULL, 
 @Airline  varchar(25)  = NULL, 
 @FlightNumber  varchar(10)  = NULL, 
 @ArrivalDate  date.me = NULL, 
 @GovPov   char(1)  = NULL, 
 @ClassComments  varchar(250) = NULL, 
 @DisplayRecord  char(1)  = 'Y', 
 @NROTCFlag  int  = 0, 
 @UserLogin  varchar(15)  
AS 
 
SET NOCOUNT ON 
 
DECLARE @UpdateCounter   int 
DECLARE @PersonID   int 
DECLARE @DBID    int 
DECLARE @DBNAME   sysname 
DECLARE @CurrentDate  date.me 
DECLARE @ErrMsg   varchar(100) 
 
DECLARE @OCSClassID   int 
DECLARE @OCSClassNumber  int 
DECLARE @OCSTrainingTypeCode  varchar(8) 
 
DECLARE @DropReason  varchar(6) 
 
--- INITIALIZE VARIABLES 
SELECT 
 @DBID   = DB_ID(),  
 @DBNAME  = DB_NAME(), 
 @CurrentDate  = GETDATE(), 
 @UpdateCounter  = 1  
 
 
--- DEFINE THE OCS TRAINING TYPE CODE AND THE OCS CLASS NUMBER 
SELECT  
 @OCSTrainingTypeCode = @TrainingType, 
 @OCSClassNumber  = @ClassIncrement 
 
--- RETRIEVE THE OCS CLASS ID 
SET @OCSClassID = COALESCE((SELECT CLASS_ID FROM OCS_CLASS WHERE TRAINING_TYPE_CODE = @TrainingType AND CLASS_NUMBER = @ClassIncrement AND @FY = FISCAL_YEAR),  
    (SELECT OCS_CLASS_ID FROM OCS WHERE OCS_ID = @OCSID)) 
 
 
 
IF @OCSClassID IS NULL 
BEGIN 
 SET @ErrMsg = 'Invalid Class ID.' 
 RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
 
--- DEFINE THE DROP REASON AND 
--- SET THE DISPLAY RECORD FLAG 
SELECT @DropReason = COALESCE(@ClassDropReason, @Ini.alDropReason), @DisplayRecord = 'Y' 
--    CASE 
--    WHEN @DisplayRecord NOT IN ('Y', 'N') OR @ScheduledShipDate IS NULL THEN 'N' 
--    ELSE @DisplayRecord 
--    END 
 
 
IF EXISTS (SELECT 1 FROM OCS WHERE OCS_ID = @OCSID) 
BEGIN 
 --- UPDATE OCS DATA 
 UPDATE  
  OCS 
 SET  
  SCHEDULED_SHIP_DATE  = COALESCE(@ScheduledShipDate, SCHEDULED_SHIP_DATE), 
  PEBD    = COALESCE(@PEBD, PEBD), 
  --- FISCAL_YEAR  = @FY, 
  OCS_CLASS_ID   = @OCSClassID,  
  REPORT_DATE   = COALESCE(@ReportDate, REPORT_DATE), 
  CLASS_RESULT_CODE  = COALESCE(@ClassResult, CLASS_RESULT_CODE), 
  CLASS_RESULT_DATE  = COALESCE(@ClassResultDate, CLASS_RESULT_DATE), 
  CLASS_STANDING   = COALESCE(@ClassStanding, CLASS_STANDING), 
  CLASS_AVERAGE   = COALESCE(@ClassAverage, CLASS_AVERAGE),  
  DROP_REASON   = COALESCE(@DropReason, DROP_REASON),  
  TRAINING_DROP_WEEK = @TrainingDropWeek, 
  ACADEMIC_AVERAGE  = COALESCE(@AcademicAverage, ACADEMIC_AVERAGE),  
  MILITARY_SKILLS_AVERAGE = COALESCE(@MilitarySkillsAverage, MILITARY_SKILLS_AVERAGE),  
  LEADERSHIP_AVERAGE  = COALESCE(@LeadershipAverage, LEADERSHIP_AVERAGE),  
  COMPANY   = COALESCE(@Company, COMPANY),  
  PLATOON   = COALESCE(@Platoon, PLATOON),  
  COMPONENT_CODE   = COALESCE(@ShippedProgram, COMPONENT_CODE), 
  NOTICE_OF_ELIGIBILITY  = COALESCE(@No.ceOfEligibility, NOTICE_OF_ELIGIBILITY), 
  AIRLINE   = COALESCE(@Airline, AIRLINE), 
  FLIGHT_NUMBER   = COALESCE(@FlightNumber, FLIGHT_NUMBER), 
  ARRIVAL_DATE  = COALESCE(@ArrivalDate, ARRIVAL_DATE),  
  GOV_POV   = COALESCE(@GovPov, GOV_POV), 
  CLASS_COMMENTS   = COALESCE(@ClassComments, CLASS_COMMENTS),  
  DISPLAY_RECORD  = COALESCE(@DisplayRecord, DISPLAY_RECORD), 
  USER_LOGIN   = @UserLogin,  
  UPDATE_DATE   = GETDATE() 
 WHERE  
  OCS_ID    = @OCSID 
 END  
ELSE 
BEGIN 
 --- INSERT OCS DATA 
 INSERT INTO OCS  
  (NWA_ID, SCHEDULED_SHIP_DATE, --- FISCAL_YEAR,  
  PEBD, OCS_CLASS_ID, REPORT_DATE,   
  CLASS_RESULT_CODE, CLASS_RESULT_DATE, CLASS_STANDING, CLASS_AVERAGE, DROP_REASON, TRAINING_DROP_WEEK,  
  ACADEMIC_AVERAGE, MILITARY_SKILLS_AVERAGE, LEADERSHIP_AVERAGE, COMPANY, PLATOON, COMPONENT_CODE,  
  NOTICE_OF_ELIGIBILITY, AIRLINE, FLIGHT_NUMBER, ARRIVAL_DATE, GOV_POV, CLASS_COMMENTS,  
  DISPLAY_RECORD, USER_LOGIN, UPDATE_DATE)     
 VALUES  
  (@NWAID, @ScheduledShipDate, --- @FY,  
  @PEBD, @OCSClassID, @ReportDate,  
  @ClassResult, @ClassResultDate, @ClassStanding, @ClassAverage, @DropReason, @TrainingDropWeek,  
  @AcademicAverage, @MilitarySkillsAverage, @LeadershipAverage, @Company, @Platoon, @ShippedProgram,  
  @No.ceOfEligibility, @Airline, @FlightNumber, @ArrivalDate, @GovPov, @ClassComments,  
  @DisplayRecord, @UserLogin, GETDATE())  
 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
 
 IF @@ROWCOUNT = 0 
 BEGIN 
  SET @ErrMsg = 'The OCS record was not added.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
END 
 
IF @@ERROR != 0  
BEGIN 
 SET @ErrMsg = 'An error occured ' + CASE COALESCE(@OCSID, 0) WHEN 0 THEN 'inser.ng' ELSE 'upda.ng' END + ' the OCS record.' 
 RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
IF @NWAID IS NOT NULL AND @NROTCFlag != 1 
BEGIN 
 EXEC sp_UpdateO.cerComponentCode 
  @NWAID    = @NWAID, 
  @O.cerComponentCode  = @ShippedProgram, 
  @Na.onalCallToService = @Na.onalCallToService, 
  --- @OCCR   = @OCCR, 
  @UserLogin  = @UserLogin 
 
 
 IF @@ERROR != 0  
 BEGIN 
  SET @ErrMsg = 'An error occured upda.ng the shipped program.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
SET NOCOUNT OFF]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>