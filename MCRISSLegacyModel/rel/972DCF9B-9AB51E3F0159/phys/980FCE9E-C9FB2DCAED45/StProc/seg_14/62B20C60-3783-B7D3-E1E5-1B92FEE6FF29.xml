<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetProspectPhysicalIst]" directorySegmentName="seg_14" id="62B20C60-3783-B7D3-E1E5-1B92FEE6FF29">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ProspectID uniqueiden..er = null, 
 @ID uniqueiden..er = null 
 
AS 
BEGIN 
  
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 CREATE TABLE #Ist  
 ( 
  ID uniqueiden..er NOT NULL, 
  ProspectID uniqueiden..er NOT NULL, 
  TestDate date.me NOT NULL, 
  Height decimal(4,2) NULL, 
  Weight int NULL, 
  RunTimeMinute int NULL, 
  RunTimeSecond int NULL, 
  PuHang int NULL, 
  Crunch int NULL, 
  Pullup int NULL, 
  Pushup int NULL, 
  Hang int NULL, 
  AmmoCanLi. int NULL, 
  PlankMinute int NULL, 
  PlankSecond int NULL, 
  Note varchar(255) NULL, 
  MinDepWeight  varchar(3) NULL, 
  MaxDepWeight varchar(3) NULL, 
  MinShipWeight varchar(3) NULL, 
  MaxShipWeight varchar(3) NULL, 
  OverMaxWgt5Pct varchar(3) NULL, 
  OverMaxWgt10Pct varchar(3) NULL, 
  Gender char(1) NULL, 
  DateOfBirth date.me NULL, 
  Age int NULL, 
  HasPriorService bit NULL, 
  LookupHeight int NULL 
 ) 
 
 
 IF @ProspectID IS NOT NULL 
 BEGIN 
  INSERT INTO #Ist 
  SELECT  
     py.ID 
    ,py.ProspectID 
    ,py.TestDate 
    ,py.Height 
    ,py.Weight 
    ,py.RunTimeMinute 
    ,py.RunTimeSecond 
    ,py.PuHang 
    ,py.Crunch 
    ,py.PullUp 
    ,py.PushUp 
    ,py.Hang 
    ,py.AmmoCanLi. 
    ,py.PlankMinute 
    ,py.PlankSecond 
    ,py.Note 
    ,NULL AS MinDepWeight 
    ,NULL AS MaxDepWeight 
    ,NULL AS MinShipWeight 
    ,NULL AS MaxShipWeight 
    ,NULL AS OverMaxWgt5Pct 
    ,NULL AS OverMaxWgt10Pct 
    ,P.Gender 
    ,P.DateOfBirth 
    ,CASE WHEN  
    DATEADD(YEAR, DATEDIFF(YEAR, P.DateOfBirth, GETDATE()), P.DateOfBirth) >= GETDATE() 
     THEN  
    DATEDIFF(YEAR, P.DateOfBirth, GETDATE()) - 1  
     ELSE 
    DATEDIFF(YEAR, P.DateOfBirth, GETDATE()) 
     END as Age 
     ,NULL as HasPriorService 
     ,ROUND(py.Height,0) 
  FROM  
   USMC.ProspectPhysicalIst py 
   INNER JOIN USMC.Prospect pr  
    ON pr.ProspectId = py.ProspectID 
   INNER JOIN USMC.Person p  
    ON p.PersonId = pr.PersonId 
  WHERE 
   py.ProspectID = @ProspectID 
  ORDER BY  
   py.TestDate Desc, py.LastUpdateDate desc 
 
 END 
 ELSE IF @ID IS NOT NULL 
 BEGIN 
  INSERT INTO #Ist 
  SELECT  
     py.ID 
    ,py.ProspectID 
    ,py.TestDate 
    ,py.Height 
    ,py.Weight 
    ,py.RunTimeMinute 
    ,py.RunTimeSecond 
    ,py.PuHang 
    ,py.Crunch 
    ,py.PullUp 
    ,py.PushUp 
    ,py.Hang 
    ,py.AmmoCanLi. 
    ,py.PlankMinute 
    ,py.PlankSecond 
    ,py.Note 
    ,NULL AS MinDepWeight 
    ,NULL AS MaxDepWeight 
    ,NULL AS MinShipWeight 
    ,NULL AS MaxShipWeight 
    ,NULL AS OverMaxWgt5Pct 
    ,NULL AS OverMaxWgt10Pct 
    ,P.Gender 
    ,P.DateOfBirth 
    ,CASE WHEN  
    DATEADD(YEAR, DATEDIFF(YEAR, P.DateOfBirth, GETDATE()), P.DateOfBirth) >= GETDATE() 
     THEN  
    DATEDIFF(YEAR, P.DateOfBirth, GETDATE()) - 1  
     ELSE 
    DATEDIFF(YEAR, P.DateOfBirth, GETDATE()) 
     END as Age 
     ,NULL as HasPriorService 
     ,ROUND(py.Height,0) 
  FROM  
   USMC.ProspectPhysicalIst py 
   INNER JOIN USMC.Prospect pr  
    ON pr.ProspectId = py.ProspectID 
   INNER JOIN USMC.Person p  
    ON p.PersonId = pr.PersonId 
  WHERE 
   py.ID = @ID 
  ORDER BY py.TestDate Desc, py.LastUpdateDate desc 
 END 
 
 DECLARE @PriorServiceID uniqueiden..er 
 
 SELECT Top 1 
  @PriorServiceID = pps.ID 
 FROM 
  USMC.ProspectPriorService pps 
  INNER JOIN #IST s 
   ON pps.ProspectID = s.ProspectID 
 WHERE 
  ServiceID = 4 -- has to be Marine  
    
 IF @PriorServiceID IS NOT NULL 
 BEGIN 
  UPDATE #IST 
  SET HasPriorService = 1 
 END 
 ELSE -- NO Prior Service as a Marine 
 BEGIN 
  UPDATE #IST 
  SET HasPriorService = 0 
 END 
 
  
 UPDATE #IST 
 SET  
  MinDepWeight =  
   CASE  
    WHEN t.HasPriorService = 0 Then hws.MinDepWgt 
    ELSE hws.PriSrvMinDepWgt 
   END, 
  MaxDepWeight =  
   CASE  
    WHEN t.HasPriorService = 0 Then  
     CASE 
      WHEN Age >= 17 AND Age <= 20 THEN MaxDepWgtUnder21  
      WHEN Age >= 21 AND Age <= 30 THEN MaxDepWgtUnder31  
      WHEN Age >= 31 AND Age <= 35 THEN MaxDepWgtUnder36  
     END  
    ELSE hws.PriSrvMaxDepWgt 
   END, 
  MinShipWeight =  
   CASE  
    WHEN t.HasPriorService = 0 Then CAST(hws.MinDepWgt as varchar(3)) 
    ELSE 'N/A' 
      END, 
  MaxShipWeight =  
   CASE  
    WHEN t.HasPriorService = 0 Then CAST(hws.MaxShipWgt as varchar(3)) 
    ELSE 'N/A' 
      END, 
  OverMaxWgt5Pct =  
   CASE  
    WHEN t.HasPriorService = 0 Then CAST(hws.ShipWgtOver5Pct as varchar(3)) 
    ELSE 'N/A' 
      END, 
  OverMaxWgt10Pct =  
   CASE  
    WHEN t.HasPriorService = 0 Then CAST(hws.ShipWgtOver10Pct as varchar(3)) 
    ELSE 'N/A' 
      END 
 FROM  
  #IST t 
  INNER JOIN PROSPECTING.USMC.HeightWeightStandard2 hws 
   ON t.Gender = hws.Gender AND t.LookupHeight = hws.Height 
  
 SELECT * FROM #Ist ORDER BY TestDate Desc 
  
 DROP TABLE #Ist 
 
   
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>