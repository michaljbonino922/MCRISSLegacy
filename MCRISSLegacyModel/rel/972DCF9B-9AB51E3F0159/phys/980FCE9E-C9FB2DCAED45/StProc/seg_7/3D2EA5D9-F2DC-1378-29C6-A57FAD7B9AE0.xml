<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdatePersonAddress]" directorySegmentName="seg_7" id="3D2EA5D9-F2DC-1378-29C6-A57FAD7B9AE0">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ID uniqueidentifier, 
 @PersonID   uniqueidentifier, 
 @PersonAddressTypeId smallint, 
 @StreetAddress1  varchar(75), 
 @StreetAddress2  varchar(75)=null, 
 @City    varchar(30)=null, 
 @County    varchar(50)=null, 
 @State       varchar(2)=null, 
 @ZipCode            varchar(9)=null, 
 @CITY_CODE          varchar(4)=null, 
 @COUNTY_CODE        varchar(3)=null, 
 @STATE_CODE         varchar(2)=null, 
    @La.tude   int = null, 
 @Longitude   int = null, 
 @GeoCodeDate  date.me = null, 
 --@LastUpdateDate  date.me, 
 @LastUpdateUserId uniqueidentifier 
 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT PersonAddressId FROM PersonAddress WHERE PersonAddressId = @ID) 
BEGIN 
 -- if @intCount > 0, then the Employee already exists.  UPDATE. 
 UPDATE 
   PersonAddress 
  SET 
   PersonId=@PersonId, 
   PersonAddressTypeId=@PersonAddressTypeId, 
   Street1=@StreetAddress1, 
   Street2=@StreetAddress2, 
   City=@City, 
   County=@County, 
   State=@State, 
   ZipCode=@ZipCode, 
   La.tude=@La.tude, 
   Longitude=@Longitude, 
   CITY_CODE=@CITY_CODE, 
   COUNTY_CODE=@COUNTY_CODE, 
   STATE_CODE=@STATE_CODE, 
   GeoCodeDate=@GeoCodeDate, 
   LastUpdateDate=GETDATE(), 
   LastUpdateUserId=@LastUpdateUserId 
  WHERE  
   PersonAddressId = @ID 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Employee does not exist.  INSERT. 
 INSERT INTO PersonAddress (PersonAddressId, 
      PersonId, 
      PersonAddressTypeId, 
      Street1, 
      Street2, 
      City, 
      County, 
      State, 
      ZipCode, 
      CITY_CODE, 
      COUNTY_CODE, 
      STATE_CODE, 
      La.tude, 
      Longitude, 
      GeoCodeDate, 
      LastUpdateDate, 
      LastUpdateUserId) 
    VALUES (@ID, 
      @PersonId, 
      @PersonAddressTypeId, 
      @StreetAddress1, 
      @StreetAddress2, 
      @City, 
      @County, 
      @State, 
      @ZipCode, 
      @CITY_CODE, 
      @COUNTY_CODE, 
      @STATE_CODE, 
      @La.tude, 
      @Longitude, 
      @GeoCodeDate, 
      GETDATE(), 
      @LastUpdateUserId) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>