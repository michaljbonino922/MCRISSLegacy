<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateProspectDependent]" directorySegmentName="seg_7" id="C02CBEB3-9E54-BC6E-49C9-60B42CA24767">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ID      uniqueidentifier, 
 @ProspectID    uniqueidentifier, 
 @FirstName    varchar(30), 
 @LastName    varchar(20), 
 @MiddleName    varchar(20) = NULL, 
 @Su.xCode    varchar(5) = NULL, 
 @DateOfBirth   date.me= NULL, 
 @DependentType   varchar(2), 
 @LastUpdateUserID  uniqueidentifier 
AS 
 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT ProspectDependentId FROM ProspectDependent WHERE ProspectDependentId = @ID) 
BEGIN 
 -- if @intCount > 0, then the prospect dependent already exists.  UPDATE. 
 UPDATE 
   ProspectDependent 
  SET     
   ProspectId = @ProspectID, 
   FirstName  = @FirstName, 
   LastName   = @LastName, 
   MiddleName = @MiddleName, 
   Su.xCode = @Su.xCode, 
   DependentType = @DependentType,   
   DateOfBirth = @DateOfBirth,  
   LastUpdateDate = GETDATE(),     
   LastUpdateUserId = @LastUpdateUserID 
  WHERE  
   ProspectDependentId = @ID 
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the prospect dependent does not exist.  INSERT. 
 INSERT INTO ProspectDependent( 
    ProspectDependentId, 
    ProspectId, 
    FirstName, 
    LastName, 
    MiddleName, 
    Su.xCode, 
    DependentType, 
    DateOfBirth, 
    LastUpdateDate, 
    LastUpdateUserId)      
  VALUES ( 
    @ID,  
    @ProspectID,  
    @FirstName, 
    @LastName, 
    @MiddleName, 
    @Su.xCode, 
    @DependentType, 
    @DateOfBirth, 
    GETDATE(), 
    @LastUpdateUserID) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>