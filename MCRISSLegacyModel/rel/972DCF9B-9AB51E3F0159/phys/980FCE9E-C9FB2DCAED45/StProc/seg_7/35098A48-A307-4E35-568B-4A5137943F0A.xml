<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[InsertUpdateIRTCard]" directorySegmentName="seg_7" id="35098A48-A307-4E35-568B-4A5137943F0A">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@cardID    uniqueidentifier, 
 @datePrepared  date.me, 
 @sector    varchar(3), 
 @frequency   varchar(100), 
 @forFY    varchar(4), 
 @recruiterID  uniqueidentifier, 
 @recruiterRankName varchar(60), 
 @hours    varchar(50), 
 @lastUpdateUser  uniqueidentifier, 
 @orgID    int, 
 @cardNameDesc  varchar(80), 
 @sectorID   uniqueidentifier 
AS 
BEGIN 
 
-- STEP 1: Start the transac.on 
BEGIN TRANSACTION 
 
-- STEP 2 & 3: Issue the data change statement(s), checking @@ERROR a.er each statement 
IF EXISTS(SELECT IrtCardID FROM [RSSOSS].[USMC].[IRTCard] WHERE IRTCardID = @cardID ) 
BEGIN 
 -- if @intCount > 0, then the Record already exists.  UPDATE. 
 UPDATE  
  [RSSOSS].[USMC].[IRTCard] 
    SET lastUpdateDate = GETDATE(), 
        lastUpdateUser = @lastUpdateUser, 
        DatePrepared = @DatePrepared, 
        Sector = @sector, 
        Frequency = @Frequency, 
        ForFY = @forFY, 
        RecruiterID = @recruiterID, 
        RecruiterRankName = @recruiterRankName, 
        [Hours] = @hours, 
        RssOrgID = @orgID, 
        SectorID = @sectorID         
 WHERE  
  IRTCardID = @cardID  
   
END 
ELSE 
BEGIN 
 -- if @intCount = 0, then the Record does not exist.  INSERT. 
 INSERT INTO [RSSOSS].[USMC].[IRTCard] 
           ( 
   IRTCardID, 
   DatePrepared, 
            Sector, 
            Frequency, 
            ForFY, 
            RecruiterID, 
            RecruiterRankName, 
            [Hours], 
            LastUpdateDate, 
            LastUpdateUser, 
            RssOrgID, 
            CardNameDesc, 
            SectorID 
   ) 
     VALUES 
           (  
   @cardID, 
   @DatePrepared, 
            @Sector, 
            @Frequency, 
            @ForFY, 
            @RecruiterID, 
            @RecruiterRankName, 
            @hours, 
            GetDate(), 
            @LastUpdateUser, 
            @orgID, 
            @cardNameDesc, 
            @sectorID 
             ) 
END 
 
-- Rollback the transac.on if there were any errors 
IF @@ERROR <> 0 
 BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('Error occurred while performing the change.', 16, 1) 
    RETURN 
 END 
 
-- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
IF @@ROWCOUNT > 1 
BEGIN 
    -- Rollback the transac.on 
    ROLLBACK TRANSACTION 
 
    -- Raise an error and return 
    RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
    RETURN 
END 
  
-- STEP 4: If we reach this point, the commands completed successfully 
--         Commit the transac.on.... 
COMMIT TRANSACTION 
 
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>