<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetEnlistedMEPSView]" directorySegmentName="seg_5" id="0C278124-E0A9-E8D5-0127-A6807485BC96">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[( 
 @Star.ngRow INT, 
 @PageSize INT, 
 @ScheduleDate DATETIME, 
 @OrgID INT, 
 @SortBy INT, 
 @FilterBy BIT 
) 
AS 
 
--This will return one more row that they asked for so that they know if there is another page of data. 
DECLARE @LastRow INT 
SET @LastRow = @star.ngRow + @PageSize 
 
DECLARE @prevProcessingDate DATETIME = MCRISS.dbo.GetPrevBusinessDay(@ScheduleDate); 
 
-- Get data .ltered by MEPS_ORGANIZATION_ID and PROCESSING_DATE 
CREATE TABLE #MEPSView_Temp1 
 (SCHEDULE_ID int NULL 
 ,NWA_ID int NULL 
 ,MEPS_ORGANIZATION_ID int NULL 
 ,PROCESSING_STATUS varchar(30) NULL 
 ,PROCESSING_NOTES varchar(250) NULL 
 ,[MENTAL RESULT] varchar(5) NULL 
 ,[CONTRACT] varchar(3) NULL 
 ,SHIP varchar(3) NULL 
 ,LODGING_REQUIRED char(1) NULL 
 ,TRANSPORTATION_REQUIRED char(1) NULL 
 ,PERSON_ID int NULL 
 ,PROJECTED_SHIP_MONTH int 
 ,RS varchar(45) 
 ,RSS varchar(45) 
 ) 
 
INSERT INTO #MEPSView_Temp1 
SELECT 
 ms.SCHEDULE_ID,  
 ms.NWA_ID, 
 ms.MEPS_ORGANIZATION_ID,  
 ps.PROCESSING_STATUS_DESCRIPTION, 
 npn.NWA_PROCESSING_NOTES AS PROCESSING_NOTES,  
 CASE   
  WHEN ms.ASVAB = 'Y' THEN 'ASVAB' 
  WHEN ms.SPECIAL_EXAM = 'Y' THEN ms.SPECIAL_EXAM_TYPE 
  ELSE SPACE(0) 
 END AS [MENTAL RESULT], 
 CASE ms.[CONTRACT] 
  WHEN 'Y' THEN 'YES' 
  ELSE 'NO' 
 END AS [CONTRACT], 
 CASE ms.[SHIP]  
  WHEN 'Y' THEN 'YES' 
  ELSE 'NO' 
 END AS SHIP, 
 ms.LODGING_REQUIRED, 
 ms.TRANSPORTATION_REQUIRED, 
 n.MARINE_CANDIDATE_ID, 
 n.PROJECTED_SHIP_MONTH,  
 rs.[NAME] AS RS, 
 rss.[NAME] AS RSS 
FROM MEPS_SCHEDULE ms WITH (NOLOCK)  
 INNER JOIN NWA n ON ms.NWA_ID = n.NWA_ID 
 INNER JOIN dbo.NWA_PROCESSING_NOTES npn ON npn.NWA_ID = n.NWA_ID 
 INNER JOIN PROCESSING_STATUS ps ON ms.PROCESSING_STATUS = ps.PROCESSING_STATUS_CODE 
 INNER JOIN [USMC].[vwRecrui.ngOrgIDs] vw ON n.ORGANIZATION_OF_RECORD_ID = vw.root 
 INNER JOIN RECRUITING_ORGANIZATION rs ON vw.RS = rs.ORGANIZATION_ID 
 --INNER JOIN RECRUITING_ORGANIZATION rss ON vw.RSS = rss.ORGANIZATION_ID 
 INNER JOIN RECRUITING_ORGANIZATION rss  ON n.ORGANIZATION_OF_RECORD_ID = rss.ORGANIZATION_ID 
 LEFT JOIN dbo.MEPS_PROJECTION_TYPE mpt ON mpt.ID = ms.PROJECTION_TYPE_ID 
WHERE  
 (MS.PROCESSING_DATE = @ScheduleDate  
 --OR (mpt.MIRS_CODE = 'T' AND MS.PROCESSING_DATE = @prevProcessingDate) 
 )  
 AND 
 ( 
  (@FilterBy = 0 AND MS.MEPS_ORGANIZATION_ID = @OrgID) OR  
  ( 
   @FilterBy = 1 AND  
   (vw.RS = @OrgID OR vw.RSS = @OrgID OR vw.District = @OrgID OR vw.Region = @OrgID OR vw.HQ = @OrgID) 
  ) 
 )  
 
-- Get addi.onal data needed for sor.ng 
CREATE TABLE #MEPSView_Temp2 
 (SCHEDULE_ID int NULL 
 ,NWA_ID int NULL 
 ,MEPS_ORGANIZATION_ID int NULL 
 ,PROCESSING_STATUS varchar(30) NULL 
 ,PROCESSING_NOTES varchar(250) NULL 
 ,[MENTAL RESULT] varchar(5) NULL 
 ,[CONTRACT] varchar(3) NULL 
 ,SHIP varchar(3) NULL 
 ,LODGING_REQUIRED char(1) NULL 
 ,TRANSPORTATION_REQUIRED char(1) NULL 
 ,PERSON_ID int NULL 
 ,PROJECTED_SHIP_MONTH int 
 ,RS varchar(45) 
 ,RSS varchar(45) 
 -- New Fields: 
 ,PERSON_NAME varchar(62) NULL 
 ,SSN varchar(9) NULL 
 ,GENDER_CODE char (1) 
 ,MEPS_NAME varchar(20) 
 ,CATEGORY_CODE varchar(15) 
 ,STATUS_DESCRIPTION varchar(40) 
 ,DISPOSITION_DESCRIPTION varchar(40) 
 ) 
 
INSERT INTO #MEPSView_Temp2 
SELECT 
 t1.*, 
 RTRIM(P.LAST_NAME) + SPACE(1) + RTRIM(P.FIRST_NAME) + SPACE(1) + COALESCE(P.LEGAL_MIDDLE_NAME, SPACE(0)) AS PERSON_NAME, 
 p.SOCIAL_SECURITY_NUMBER, 
 mc.GENDER_CODE,  
 mol.MEPS_NAME, 
 CASE cs.STATUS_TYPE 
  WHEN 'E' THEN  
   CASE n.CATEGORY_CODE   
    WHEN 'R' THEN 'Regular' 
    WHEN 'G' THEN 'Reserve-Ground' 
    WHEN 'A' THEN 'Reseve-Air' 
    WHEN 'P' THEN 'Prior-Service' 
    WHEN 'O' THEN 'President''s Own' 
    ELSE SPACE(0) 
   END  
  WHEN 'O' THEN COALESCE(cc.COMPONENT_DESCRIPTION, SPACE(0)) 
  ELSE SPACE(0) 
 END AS CATEGORY_CODE, 
 sd.STATUS_DESCRIPTION, 
 sd.DISPOSITION_DESCRIPTION 
FROM 
 #MEPSView_Temp1 t1 
 INNER JOIN NWA n ON t1.NWA_ID = n.NWA_ID 
 INNER JOIN MARINE_CANDIDATE mc ON t1.PERSON_ID = mc.MARINE_CANDIDATE_ID 
 INNER JOIN PERSON p ON t1.PERSON_ID = p.PERSON_ID 
 INNER JOIN MEPS_ORGANIZATION_LOOKUP mol ON t1.MEPS_ORGANIZATION_ID = mol.MEPS_ORGANIZATION_ID 
 INNER JOIN CANDIDATE_STATUS cs ON cs.CANDIDATE_STATUS_ID = dbo.GetMaxStatusIDByE.ec.veDate(t1.NWA_ID,@ScheduleDate) 
 INNER JOIN STATUS_DISPOSITION sd ON  (CS.STATUS_TYPE = SD.STATUS_TYPE AND CS.STATUS_CODE = SD.STATUS_CODE AND CS.DISPOSITION_CODE = SD.DISPOSITION_CODE) 
 LEFT OUTER JOIN COMPONENT_CODE cc ON n.OFFICER_COMPONENT_CODE = cc.COMPONENT_CODE 
 
 
-- Sort Data  
CREATE TABLE #MEPSView_Temp3 
 (RowNumber INT NULL 
 ,SCHEDULE_ID int NULL 
 ,NWA_ID int NULL 
 ,MEPS_ORGANIZATION_ID int NULL 
 ,PROCESSING_STATUS varchar(30) NULL 
 ,PROCESSING_NOTES varchar(250) NULL 
 ,[MENTAL RESULT] varchar(5) NULL 
 ,[CONTRACT] varchar(3) NULL 
 ,SHIP varchar(3) NULL 
 ,LODGING_REQUIRED char(1) NULL 
 ,TRANSPORTATION_REQUIRED char(1) NULL 
 ,PERSON_ID int NULL 
 ,PROJECTED_SHIP_MONTH int 
 ,RS varchar(45) 
 ,RSS varchar(45) 
 ,PERSON_NAME varchar(62) NULL 
 ,SSN varchar(9) NULL 
 ,GENDER_CODE char (1) 
 ,MEPS_NAME varchar(20) 
 ,CATEGORY_CODE varchar(15) 
 ,STATUS_DESCRIPTION varchar(40) 
 ,DISPOSITION_DESCRIPTION varchar(40) 
 ) 
 
IF @SortBy = 1 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.PERSON_NAME), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.PERSON_NAME 
IF @SortBy = 2 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.PROCESSING_STATUS), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.PROCESSING_STATUS 
IF @SortBy = 3 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.GENDER_CODE), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.GENDER_CODE 
IF @SortBy = 4 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.RS), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.RS 
IF @SortBy = 5 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.RSS), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.RSS 
IF @SortBy = 6 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.MEPS_NAME), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.MEPS_NAME 
IF @SortBy = 7 
 INSERT INTO #MEPSView_Temp3 
 SELECT ROW_NUMBER() OVER(Order By t2.STATUS_DESCRIPTION), t2.* 
 FROM #MEPSView_Temp2 t2  
 ORDER BY t2.STATUS_DESCRIPTION 
 
-- Limit data to current page 
CREATE TABLE #MEPSView_Temp4 
( 
  RowNumber INT NULL 
 ,SCHEDULE_ID int NULL 
 ,NWA_ID int NULL 
 ,MEPS_ORGANIZATION_ID int NULL 
 ,PROCESSING_STATUS varchar(30) NULL 
 ,PROCESSING_NOTES varchar(250) NULL 
 ,[MENTAL RESULT] varchar(5) NULL 
 ,[CONTRACT] varchar(3) NULL 
 ,SHIP varchar(3) NULL 
 ,LODGING_REQUIRED char(1) NULL 
 ,TRANSPORTATION_REQUIRED char(1) NULL 
 ,PERSON_ID int NULL 
 ,PROJECTED_SHIP_MONTH int 
 ,RS varchar(45) 
 ,RSS varchar(45) 
 ,PERSON_NAME varchar(62) NULL 
 ,SSN varchar(9) NULL 
 ,GENDER_CODE char (1) 
 ,MEPS_NAME varchar(20) 
 ,CATEGORY_CODE varchar(15) 
 ,STATUS_DESCRIPTION varchar(40) 
 ,DISPOSITION_DESCRIPTION varchar(40) 
 -- New Fields: 
 ,EDUCATION_LEVEL varchar(2) NULL 
 ,EDUCATION_CODE varchar(2) NULL 
 ,ASVAB_MEPS_ID int NULL 
 ,ASVAB_DATE date.me NULL 
 ,AFQT_SCORE int NULL 
 ,GT_SCORE int NULL 
 ,MEDICAL_MEPS_ID int NULL 
 ,MEDICAL_EXAM_DATE date.me NULL 
 ,MEDICAL_EXAM_TYPE varchar(4) NULL 
 ,LAST_MEPS varchar(20) NULL 
 ,BIQ BIT NULL DEFAULT(0) 
) 
 
INSERT intO #MEPSView_Temp4 
SELECT *, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL 
FROM #MEPSView_Temp3 
WHERE RowNumber >= @Star.ngRow AND RowNumber <= @LastRow 
 
-- Get the last of the data needed for display 
UPDATE #MEPSView_Temp4 
SET  
 EDUCATION_LEVEL = CE.EDUCATION_LEVEL, 
 EDUCATION_CODE = CE.EDUCATION_CODE 
FROM #MEPSView_Temp4 t4  
 INNER JOIN CANDIDATE_EDUCATION CE ON (t4.PERSON_ID = CE.MARINE_CANDIDATE_ID AND CE.SCHOOL_END_DATE = (SELECT MAX(CE2.SCHOOL_END_DATE) FROM CANDIDATE_EDUCATION CE2 WHERE CE2.MARINE_CANDIDATE_ID = t4.PERSON_ID)) 
 
UPDATE #MEPSView_Temp4 
SET 
 ASVAB_MEPS_ID = CA.MEPS_ORGANIZATION_ID, 
 ASVAB_DATE = CA.ASVAB_DATE, 
 AFQT_SCORE = CA.AFQT_SCORE, 
 GT_SCORE = CA.GT_SCORE 
FROM #MEPSView_Temp4 t4  
 INNER JOIN CANDIDATE_ASVAB CA ON (t4.PERSON_ID = CA.MARINE_CANDIDATE_ID AND CA.ASVAB_DATE = dbo.GetMaxASVABDate(CA.MARINE_CANDIDATE_ID)) 
 
UPDATE #MEPSView_Temp4 
SET 
 MEDICAL_MEPS_ID = CME.MEPS_ORGANIZATION_ID, 
 MEDICAL_EXAM_DATE = CME.MEDICAL_EXAM_DATE, 
 MEDICAL_EXAM_TYPE = CME.MEDICAL_EXAM_TYPE 
FROM #MEPSView_Temp4 t4  
 INNER JOIN CANDIDATE_MEDICAL_EXAM CME ON (t4.PERSON_ID = CME.MARINE_CANDIDATE_ID AND CME.MEDICAL_EXAM_DATE = dbo.GetMaxMedicalExamDate(t4.PERSON_ID, NULL)) 
 
UPDATE #MEPSView_Temp4 
SET 
 LAST_MEPS =  
 CASE  
  WHEN DATEDIFF(DAY, t4.MEDICAL_EXAM_DATE, t4.ASVAB_DATE) >= 0 THEN  
   mepsASVAB.MEPS_NAME 
  ELSE  
   mepsMed.MEPS_NAME 
 END 
FROM #MEPSView_Temp4 t4  
 INNER JOIN MEPS_ORGANIZATION_LOOKUP mepsASVAB ON t4.ASVAB_MEPS_ID = mepsASVAB.MEPS_ORGANIZATION_ID 
 INNER JOIN MEPS_ORGANIZATION_LOOKUP mepsMed ON t4.MEDICAL_MEPS_ID = mepsMed.MEPS_ORGANIZATION_ID 
 
UPDATE #MEPSView_Temp4  
SET BIQ = 1 
FROM #MEPSView_Temp4 t4 
INNER JOIN USMC.BIQ_QUESTIONNAIRE BQ ON t4.PERSON_ID = BQ.MARINE_CANDIDATE_ID 
  
-- Return the data 
SELECT  RowNumber 
  ,SCHEDULE_ID 
  ,NWA_ID 
  ,MEPS_ORGANIZATION_ID 
  ,PROCESSING_STATUS 
  ,PROCESSING_NOTES 
  ,[MENTAL RESULT] 
  ,[CONTRACT] 
  ,SHIP 
  ,LODGING_REQUIRED 
  ,TRANSPORTATION_REQUIRED 
  ,PERSON_ID 
  ,PROJECTED_SHIP_MONTH 
  ,RS 
  ,RSS 
  ,PERSON_NAME 
  ,SSN 
  ,GENDER_CODE 
  ,MEPS_NAME 
  ,CATEGORY_CODE 
  ,STATUS_DESCRIPTION 
  ,DISPOSITION_DESCRIPTION 
  ,EDUCATION_LEVEL 
  ,EDUCATION_CODE 
  ,ASVAB_MEPS_ID 
  ,ASVAB_DATE 
  ,AFQT_SCORE 
  ,GT_SCORE 
  ,MEDICAL_MEPS_ID 
  ,MEDICAL_EXAM_DATE 
  ,MEDICAL_EXAM_TYPE 
  ,LAST_MEPS 
  ,BIQ 
FROM #MEPSView_Temp4 
 
SELECT COUNT(*) AS TOTAL FROM #MEPSView_Temp3 
 
-- clean up 
DROP TABLE #MEPSView_Temp1 
DROP TABLE #MEPSView_Temp2 
DROP TABLE #MEPSView_Temp3 
DROP TABLE #MEPSView_Temp4]]></body>
<schema>E9C4E37D-78A2-31F9-D580-7C2848ACFCB7</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>