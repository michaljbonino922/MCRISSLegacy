<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetOrgProgramAvailability]" directorySegmentName="seg_19" id="C01BB08E-4DA5-8879-531E-21C4394485A5">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@Organiza.onID  int, 
 @ProgramID  int, 
 @FiscalYear  int 
AS 
 
SET NOCOUNT ON 
 
DECLARE @OrgType varchar(3) 
SELECT @OrgType = ORGANIZATION_TYPE FROM RECRUITING_ORGANIZATION WHERE ORGANIZATION_ID = @Organiza.onId 
 
--- CREATE TEMP TABLE TO HANDLE ORGANIZATION DATA 
CREATE TABLE #ORG (ORG_ID INT NULL, ORG_TYPE VARCHAR(3) NULL, ASSIGNED_ORGANIZATION_ID INT NULL) 
 
--- INSERT THE @Organiza.onID INTO THE TEMP TABLE 
INSERT INTO #ORG (ORG_ID, ORG_TYPE, ASSIGNED_ORGANIZATION_ID) VALUES (@Organiza.onID, @OrgType, @Organiza.onID) 
 
IF @OrgType = 'H'  
BEGIN 
 --- FOR MCRC, INSERT DISTRICTS AND RSs INTO THE TEMP TABLE 
 INSERT INTO #ORG  
  (ORG_ID, ORG_TYPE, ASSIGNED_ORGANIZATION_ID)  
 SELECT 
  RO.ORGANIZATION_ID, RO.ORGANIZATION_TYPE,  
  CASE RO.ORGANIZATION_TYPE 
   WHEN 'D' THEN RO.ORGANIZATION_ID 
   ELSE (SELECT DIST.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP DIST WHERE DIST.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID) 
  END 
 FROM  
  RECRUITING_ORGANIZATION RO 
 WHERE  
  RO.ORGANIZATION_TYPE IN ('D', 'RS') 
END 
ELSE 
BEGIN 
 --- FOR OTHER ORG TYPES, INSERT THE CHILD ORG IDs INTO THE TEMP TABLE  
 INSERT INTO #ORG  
  (ORG_ID, ORG_TYPE, ASSIGNED_ORGANIZATION_ID)  
 SELECT 
  RO.ORGANIZATION_ID, RO.ORGANIZATION_TYPE, RO.ORGANIZATION_ID 
 FROM  
  RECRUITING_ORGANIZATION RO INNER JOIN ORGANIZATION_MAP OM ON  
   (OM.PARENT_ORGANIZATION_ID = @Organiza.onID AND 
   OM.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID) 
END 
 
--- RETURN THE DATA 
SELECT  
 O.ASSIGNED_ORGANIZATION_ID, 
 PP.PERIOD_CODE AS PERIOD,  
 PP.BEGIN_DATE,  
 PP.END_DATE, 
 COUNT(PA.PROGRAM_AVAILABILITY_ID) AS TOTAL, 
 COUNT(CASE WHEN PA.CONTRACT_ID IS NOT NULL THEN PA.PROGRAM_AVAILABILITY_ID END) AS CONTRACTED 
FROM  
 #ORG O INNER JOIN PROGRAM_AVAILABILITY PA ON  
  (PA.PROGRAM_ID = @ProgramID AND  
  O.ORG_ID = PA.ASSIGNED_ORGANIZATION_ID AND 
  PA.PROGRAM_AVAILABILITY_ID NOT IN (SELECT PROGRAM_AVAILABILITY_ID FROM REMOVED_PROGRAMS)) 
 INNER JOIN PROGRAM_PERIOD PP ON  
  (PA.PROGRAM_PERIOD_ID = PP.PROGRAM_PERIOD_ID AND 
  PP.FY = @FiscalYear) 
GROUP BY  
 O.ASSIGNED_ORGANIZATION_ID, PP.PERIOD_CODE, PP.BEGIN_DATE, PP.END_DATE 
 
--- CLEAN UP  
DROP TABLE #ORG  
SET NOCOUNT OFF]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>