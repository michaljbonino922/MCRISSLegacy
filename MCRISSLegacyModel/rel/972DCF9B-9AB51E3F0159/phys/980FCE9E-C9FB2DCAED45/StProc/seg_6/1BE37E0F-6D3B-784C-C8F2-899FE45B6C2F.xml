<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetWklyResultsMonthCum]" directorySegmentName="seg_6" id="1BE37E0F-6D3B-784C-C8F2-899FE45B6C2F">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:41:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@RecruiterID   uniqueidentifier = null, 
     @OrgID   int, 
     @Year   int, 
     @Month  int 
 
AS 
BEGIN 
  
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 CREATE TABLE #TEMP_WEEKLY_START_DATES ( 
  [StartDate] [date.me] NOT NULL, 
  [EndDate] [date.me] NOT NULL, 
  [ID] [int] IDENTITY(1,1) PRIMARY KEY 
  )  
 
 INSERT INTO #TEMP_WEEKLY_START_DATES 
 SELECT DISTINCT 
  wo.StartDate AS StartDate 
  ,wo.EndDate AS EndDate 
 FROM  
  USMC.WeeklyObjec.ve wo  
  INNER JOIN USMC.MonthlyObjec.ve mo ON mo.ID=wo.MonthlyObjec.veID 
  INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION ro ON ro.ORGANIZATION_ID = @OrgID 
 WHERE  
  mo.Organiza.onId=ro.rowguid 
  AND mo.Year=@Year 
  AND mo.Month=@Month 
 ORDER BY wo.StartDate 
  
 -- Here we calculate start and end dates for the selected week, that will be used later   
 DECLARE @StartDate date.me 
 DECLARE @EndDate date.me 
 
 SET @StartDate = (SELECT TOP 1 StartDate FROM #TEMP_WEEKLY_START_DATES ORDER BY ID); 
 SET @EndDate =   (SELECT TOP 1 EndDate   FROM #TEMP_WEEKLY_START_DATES ORDER BY ID DESC); 
   
 --- reset .me to 12:00:00 just in case it is not 
 SET  @StartDate = CAST( (STR(Year(@StartDate)) + '-' + STR(MONTH(@StartDate)) + '-' + STR(DAY(@StartDate)) ) AS date.me) 
 
 -- Make sure @EndDate is at 12:00:00 AM next day of @EndDate to make <@EndDate working  
 SET  @EndDate = CAST( (STR(Year(@EndDate)) + '-' + STR(MONTH(@EndDate)) + '-' + STR(DAY(@EndDate)) ) AS date.me) 
 SET  @EndDate = DATEADD(day, 1, @EndDate) 
 
 SELECT DISTINCT  
  mo.RecruiterID, 
  @StartDate AS StartDate, 
     @EndDate AS EndDate, 
  ro.ORGANIZATION_ID AS OrgId, 
  ro.[NAME] AS RssName 
 INTO #TEMP_WEEKLY_DATA 
 FROM  
  #TEMP_WEEKLY_START_DATES wsd 
  INNER JOIN USMC.WeeklyObjec.ve wo ON wo.StartDate = wsd.StartDate 
  INNER JOIN USMC.MonthlyObjec.ve mo ON mo.ID = wo.MonthlyObjec.veID 
  INNER JOIN MCRISS.dbo.RECRUITING_ORGANIZATION ro ON ro.ORGANIZATION_ID = @OrgID 
 WHERE  
  mo.Organiza.onId=ro.rowguid 
  AND mo.Year = @Year 
  AND mo.Month = @Month 
  AND mo.RecruiterID != '00000000-0000-0000-0000-000000000000' 
  AND (@RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND mo.RecruiterID = @RecruiterID)) 
  
 -- These are all the personnel belonging to this Rss regardless of whether they have performed any ac.vi.es 
 SELECT  
  (SELECT RANK_CODE + ' ' + LAST_NAME 
    FROM MCRISS.dbo.PERSON per 
    WHERE per.PERSON_ID = rp.RECRUITING_PERSON_ID ) AS RecruiterName, 
  rp.rowguid AS RecruiterID, 
  rp.RECRUITING_PERSON_ID AS RECRUITING_PERSON_ID 
 INTO #TEMP_RECRUITING_PERSONNEL 
 FROM  
  MCRISS.dbo.RECRUITING_PERSON rp  
  INNER JOIN #TEMP_WEEKLY_DATA wd 
   ON rp.rowguid = wd.RecruiterID 
 WHERE  
  rp.ORGANIZATION_ID = @OrgID 
  AND rp.TOUR_END_DATE IS NULL 
 
  
 
 -- This table is used to hold interviews scheduled for a prospect 
 SELECT *  
 INTO #TEMP_PROSPECT_INTERVIEWS 
 FROM  
 ( 
  SELECT  
   eo.CreatorId AS RecruiterID, 
   p.Ac.vity AS Ac.vity, 
   e.ID, 
   e.StartDate AS ProspectInterviewDate 
   ,s.SubjectId 
   ,ISNULL(n.NWA_DECLARED_DATE, '3000-1-1') AS NWA_DECLARED_DATE 
  FROM  
   #TEMP_WEEKLY_DATA wd 
   INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.CreatorId = wd.RecruiterID 
   INNER JOIN RSSOSS.USMC.Event e ON  e.ID = eo.EventId 
   INNER JOIN RSSOSS.USMC.EventSubject s on s.EventId = e.ID 
   INNER JOIN Prospec.ng.USMC.Prospect p ON s.SubjectId = p.ProspectId  
   INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
   INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
   LEFT OUTER JOIN MCRISS.dbo.NWA n ON n.rowguid = p.NwaId 
  WHERE  
   (InterviewOutcomeId=1 or InterviewOutcomeId=2) -- New Working Applicant or Follow-up 
   AND et.Type != 'Follow Up' 
   AND e.IsApproved = 1 
   AND (e.StartDate >= @StartDate AND e.StartDate < @EndDate) 
 ) AS TT1 
 WHERE 
  (ProspectInterviewDate < NWA_DECLARED_DATE OR ProspectInterviewDate > DATEADD(day, 90, NWA_DECLARED_DATE) ) -- events within 90 days of a.er NWA DECLARE date are not eligible  
  
 
 --- Get Interviews that are counted  
 SELECT *  
 INTO #CountedInterview 
 FROM 
 ( 
  SELECT *, RANK() over( par..on by SubjectId, Quo.ent order by Modulo, SecondsPassed) as MyRank  FROM 
  ( 
   SELECT  
    e.id, s.SubjectId, e.StartDate, 
    DATEDIFF(SECOND, Min(e.StartDate) OVER (PARTITION BY s.SubjectId), e.StartDate) as SecondsPassed, 
    DATEDIFF(day, Min(e.StartDate) OVER (PARTITION BY s.SubjectId), e.StartDate) / 91 as Quo.ent, 
    DATEDIFF(day, Min(e.StartDate) OVER (PARTITION BY s.SubjectId), e.StartDate) % 91 as Modulo  
   FROM  
    RSSOSS.USMC.Event e 
    INNER JOIN #TEMP_PROSPECT_INTERVIEWS ie ON e.ID = ie.ID 
    INNER JOIN RSSOSS.USMC.EventSubject s ON e.ID = s.EventId  
    INNER JOIN RSSOSS.USMC.EventOutcome oc ON e.ID = oc.EventId 
    INNER JOIN RSSOSS.USMC.EventType et ON e.EventTypeId = et.ID 
    INNER JOIN RSSOSS.USMC.EventOwners eo ON eo.EventID = e.ID 
    INNER JOIN #TEMP_WEEKLY_DATA wd ON eo.CreatorId = wd.RecruiterID 
   WHERE  
    e.IsApproved = 1 
    AND et.Type != 'Follow Up' 
    AND (oc.InterviewOutcomeId=1 or oc.InterviewOutcomeId=2) 
  ) AS T1 
 ) AS T2 
 WHERE 
  MyRank = 1 
 
 DELETE FROM #TEMP_PROSPECT_INTERVIEWS WHERE ID NOT IN (SELECT ID FROM #CountedInterview) 
  
 -- This table below is used later by func.ons that get processing data for an NWA 
 SELECT 
  rp.RecruiterID AS RecruiterID, 
  n.NWA_ID, 
  n.MARINE_CANDIDATE_ID, 
  n.NWA_DECLARED_DATE   
 INTO #TEMP_NWA_PROCESSING_DATA 
 FROM #TEMP_RECRUITING_PERSONNEL rp 
 INNER JOIN RSSOSS.USMC.vwMcrissNwa n ON rp.RECRUITING_PERSON_ID = n.RECRUITER_OF_RECORD_ID 
 WHERE n.NWA_DECLARED_DATE >= @StartDate AND n.NWA_DECLARED_DATE < @EndDate 
 
 SELECT  
  NULL AS TargetDate, 
  @StartDate AS StartDate, 
  DATEADD(day, -1, @EndDate) AS EndDate, 
  ( SELECT COUNT(ProspectInterviewDate)  
   FROM #TEMP_PROSPECT_INTERVIEWS 
   WHERE  
    Ac.vity IN ('TC','OT','AC','HV','DC') 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND RecruiterID = @RecruiterID)) 
 
  ) AS Interview, 
 
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN  MCRISS.dbo.CANDIDATE_STATUS cs  
     ON CS.NWA_ID = N.NWA_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND CS.STATUS_CODE = 'A'  
    AND CS.DISPOSITION_CODE IN ('F','DH') 
  ) AS Nwa, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND EXISTS 
     (SELECT MARINE_CANDIDATE_ID FROM MCRISS.dbo.CANDIDATE_ASVAB asvab 
      WHERE  
       asvab.MARINE_CANDIDATE_ID = n.MARINE_CANDIDATE_ID 
     )   
   
  ) AS Mt, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_ASVAB asvab 
     ON n.MARINE_CANDIDATE_ID = asvab.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND asvab.AFQT_SCORE >=31 
    AND asvab.GT_SCORE >= 80 
  ) AS Mq, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_ASVAB asvab 
     ON n.MARINE_CANDIDATE_ID = asvab.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND ( asvab.AFQT_SCORE < 31 OR asvab.GT_SCORE < 80) 
  ) AS Munq, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND EXISTS 
     (SELECT MARINE_CANDIDATE_ID FROM MCRISS.dbo.CANDIDATE_MEDICAL_EXAM  cme 
      WHERE  
       cme.MARINE_CANDIDATE_ID = n.MARINE_CANDIDATE_ID 
     ) 
  ) AS Pt, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_MEDICAL_EXAM cme  
     ON n.MARINE_CANDIDATE_ID = cme.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND cme.MEDICAL_EXAM_TYPE='FULL'  
    AND cme.MEDICAL_DISPOSITION='Q' 
  ) AS Pq, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_MEDICAL_EXAM cme  
     ON n.MARINE_CANDIDATE_ID = cme.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND cme.MEDICAL_EXAM_TYPE='FULL' 
    AND cme.MEDICAL_DISPOSITION='D' 
  ) AS Punq, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_MEDICAL_EXAM cme  
     ON n.MARINE_CANDIDATE_ID = cme.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND cme.MEDICAL_EXAM_TYPE='CONS'  
    AND cme.CONSULTATION_TYPE='C' 
  ) AS Cons, 
   
  ( SELECT Count(dis.nct n.NWA_ID)  
   FROM   
    #TEMP_NWA_PROCESSING_DATA AS n  
    INNER JOIN MCRISS.dbo.CANDIDATE_ASVAB asvab 
     ON n.MARINE_CANDIDATE_ID = asvab.MARINE_CANDIDATE_ID 
    INNER JOIN MCRISS.dbo.CANDIDATE_MEDICAL_EXAM cme  
     ON n.MARINE_CANDIDATE_ID = cme.MARINE_CANDIDATE_ID 
   WHERE 
    ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND n.RecruiterID = @RecruiterID)) 
    AND asvab.AFQT_SCORE >=31 
    AND asvab.GT_SCORE >= 80 
    AND asvab.ASVAB_DATE >= @StartDate AND asvab.ASVAB_DATE < @EndDate 
    AND cme.MEDICAL_EXAM_TYPE='FULL'  
    AND cme.MEDICAL_DISPOSITION='Q' 
  ) AS MpQual, 
   
  ( SELECT Count(dis.nct mi.NWA_ID) 
   FROM   
    MCRISS.dbo.MIContract AS mi  
    INNER JOIN MCRISS.dbo.NWA AS n  
     ON mi.NWA_ID = n.NWA_ID  
    LEFT JOIN  MCRISS.dbo.Contract c on c.NWA_ID = n.NWA_ID 
    INNER JOIN #TEMP_RECRUITING_PERSONNEL rp  
     ON rp.RECRUITING_PERSON_ID = n.RECRUITER_OF_RECORD_ID 
   WHERE  
    (mi.CONTRACT_BEGIN_DATE >= @StartDate AND mi.CONTRACT_BEGIN_DATE < @EndDate) 
    AND ( @RecruiterID IS NULL OR (@RecruiterID IS NOT NULL AND rp.RecruiterID = @RecruiterID)) 
 
  ) AS Contract 
   
 
 DROP TABLE #TEMP_WEEKLY_DATA 
 DROP TABLE #TEMP_PROSPECT_INTERVIEWS 
 DROP TABLE #TEMP_WEEKLY_START_DATES  
 DROP TABLE #TEMP_RECRUITING_PERSONNEL 
 DROP TABLE #TEMP_NWA_PROCESSING_DATA 
  
  
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>7220F1F8-DA6B-58D6-61AE-B77688E1C655</database>
</StoredProcedureSqlServerv2k5>