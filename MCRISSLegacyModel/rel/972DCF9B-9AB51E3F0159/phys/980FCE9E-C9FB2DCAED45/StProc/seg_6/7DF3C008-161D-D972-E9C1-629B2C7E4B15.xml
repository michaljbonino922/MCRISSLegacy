<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetMudData]" directorySegmentName="seg_6" id="7DF3C008-161D-D972-E9C1-629B2C7E4B15">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@OrgId int = NULL, 
 @Fips varchar(5) = NULL, 
 @ZipCode varchar(9) = NULL, 
 @RSId varchar(5) = NULL, 
 @RSSId varchar(7) = NULL, 
 @StateCode varchar(3) = NULL, 
 @CountyCode varchar(4) = NULL, 
 @IsPSROrgUnit bit = NULL  
 
AS 
 
SET NOCOUNT ON 
 
--- Create Orgs table 
CREATE TABLE #SUBORGS ( 
   ORG_ID int NOT NULL,  
   ORG_TYPE varchar(3),  
   USED bit NOT NULL 
   ) 
 
--- INDEX TEMP TABLE 
CREATE CLUSTERED INDEX idxSUBORGS ON #SUBORGS (ORG_ID) 
 
 
--- Create #IDS TABLES 
 CREATE TABLE #IDS (ORG_ID int NOT NULL) 
 
IF @OrgId IS NOT NULL  
BEGIN 
 
 -- Seed the temp table with the input OrgID 
 INSERT INTO  
  #SUBORGS 
 SELECT  
   [ORGANIZATION_ID] 
  ,[ORGANIZATION_TYPE] 
  ,0 
 FROM 
  [dbo].[RECRUITING_ORGANIZATION] WITH (NOLOCK) 
 WHERE 
  [ORGANIZATION_ID] = @OrgID 
  
 -- Con.nue processing un.l we have goten to the RS level 
 WHILE (SELECT COUNT(1) FROM #SUBORGS WHERE USED = 0) >= 1 
 BEGIN 
  -- Save all OrgIDs in the #SUBORGS table that we haven't goten children for yet. 
  INSERT INTO  
   #IDS  
  SELECT ORG_ID FROM  #SUBORGS WHERE USED = 0 
   
  -- Insert new children (with Used .ag = 0) into the #SUBORGS table. 
  INSERT INTO #SUBORGS 
  SELECT OM.CHILD_ORGANIZATION_ID, RO.ORGANIZATION_TYPE, 0 
  FROM [dbo].[ORGANIZATION_MAP] OM WITH (NOLOCK) INNER JOIN #SUBORGS SO ON OM.PARENT_ORGANIZATION_ID = SO.ORG_ID AND SO.USED = 0 
   INNER JOIN [dbo].[RECRUITING_ORGANIZATION] RO ON OM.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID 
  WHERE 
   RO.ISOPEN = 'Y' 
   
  -- Set the USED .ag to 1 for the OrgIDs that we just processed. 
  UPDATE #SUBORGS 
  SET USED = 1 
  WHERE ORG_ID IN (SELECT * FROM #IDS) 
   
  -- No need to save the OrgIDs that we just got children for.  They will remain in the #SUBORGS table 
  -- and are now marked as used/processed. 
  DELETE FROM #IDS 
 END 
END 
ELSE 
BEGIN 
 
 --- Get all orgids to .lter later on by zipcodes, rssid, .ps, etc.. 
 INSERT INTO #SUBORGS(ORG_ID, USED) 
 SELECT  
  ORGANIZATION_ID, 1 
 FROM  
  [dbo].[RECRUITING_ORGANIZATION] 
END 
 
--- END IF ORG_ID IS NOT NULL 
 
 
 
CREATE TABLE #TEMP_RESULT 
( 
REGION VARCHAR(3) NOT NULL,  
DIST VARCHAR(3) NULL, 
RS VARCHAR(50) NULL, 
RSS VARCHAR(50) NULL, 
OSS VARCHAR(50) NULL, 
PSRSS VARCHAR(50) NULL, 
STATE_CODE VARCHAR(2) NULL, 
CITY_CODE VARCHAR(5) NULL, 
COUNTY_CODE VARCHAR(4) NULL, 
FIPS VARCHAR(5) NOT NULL, 
ZIP VARCHAR(9) NOT NULL, 
RSID VARCHAR(5) NULL, 
RSSID VARCHAR(5) NULL, 
OSSID VARCHAR(5) NULL, 
LAT FLOAT NULL, 
LONG FLOAT NULL, 
REG_ORG_ID VARCHAR(3) NULL, 
DIST_ORG_ID VARCHAR(3) NULL, 
RS_ORG_ID VARCHAR(4) NULL, 
RSS_ORG_ID VARCHAR(4) NULL, 
OSS_ORG_ID VARCHAR(4) NULL, 
PSRSS_ORG_ID VARCHAR(4) NULL, 
STATUS_ID VARCHAR(1) NULL 
) 
 
--- INDEX TEMP TABLE 
CREATE CLUSTERED INDEX idxTRZIP ON #TEMP_RESULT (ZIP) 
 
INSERT INTO #TEMP_RESULT(REGION,DIST,RS,RSS,OSS,PSRSS,STATE_CODE,CITY_CODE,COUNTY_CODE,FIPS,ZIP,RSID, 
      RSSID,OSSID,LAT,LONG,REG_ORG_ID,DIST_ORG_ID,RS_ORG_ID,RSS_ORG_ID,OSS_ORG_ID,PSRSS_ORG_ID,STATUS_ID) 
 
 
SELECT 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     MF.ASSIGNED_ORG_ID 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     USMC.GetRegIdByDist(MF.ASSIGNED_ORG_ID) 
    ELSE 
     OM2.PARENT_ORGANIZATION_ID 
   END 
  ELSE 
    OM2.PARENT_ORGANIZATION_ID 
  END AS REG_ORG_ID, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     NULL 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     MF.ASSIGNED_ORG_ID 
    ELSE 
     OM3.PARENT_ORGANIZATION_ID 
   END 
  ELSE 
    OM3.PARENT_ORGANIZATION_ID 
  END AS DIST_ORG_ID,  
 CASE WHEN RO.ORGANIZATION_TYPE = 'RSS' THEN 
   RO2.NAME 
 END AS RS_NAME,  
 CASE WHEN RO.ORGANIZATION_TYPE = 'RSS' THEN 
   RO.NAME + ' ' + RO.STATE_CODE 
 END AS RSS_NAME, 
 oss.NAME + ' ' + oss.STATE_CODE AS OSS_NAME, 
 psrss.Descrip.on AS PSRSS_NAME, 
 MF.STATE_CODE, 
 MF.CITY_CODE, 
 MF.COUNTY_CODE, 
 MF.FIPS, 
 MF.ZIP, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   NULL 
  ELSE 
   SUBSTRING(CAST(MU.MUD_ORG_NAME AS CHAR),2,2) + SUBSTRING(RO.MCC_CODE,1,3) 
 END AS RSID, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   NULL 
  ELSE 
   SUBSTRING(RO.MCC_CODE,1,5) 
 END AS RSSID, 
 SUBSTRING(oss.MCC_CODE,1,5) AS OSSID, 
 MF.LAT, 
 MF.LONG, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     MF.ASSIGNED_ORG_ID 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     USMC.GetRegIdByDist(MF.ASSIGNED_ORG_ID) 
    ELSE 
     OM2.PARENT_ORGANIZATION_ID 
   END 
  ELSE 
    OM2.PARENT_ORGANIZATION_ID 
  END AS REG_ORG_ID2, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     NULL 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     MF.ASSIGNED_ORG_ID 
    ELSE 
     OM3.PARENT_ORGANIZATION_ID 
   END 
  ELSE 
    OM3.PARENT_ORGANIZATION_ID 
  END AS DIST_ORG_ID2, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     NULL 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     NULL 
    ELSE 
     OM4.PARENT_ORGANIZATION_ID 
   END 
  ELSE 
    OM4.PARENT_ORGANIZATION_ID 
  END AS RS_ORG_ID2, 
 CASE 
  WHEN RO.ORGANIZATION_TYPE <> 'RSS' THEN 
   CASE  
    WHEN RO.ORGANIZATION_TYPE = 'R' THEN 
     NULL 
    WHEN RO.ORGANIZATION_TYPE = 'D' THEN 
     NULL 
    ELSE 
     RO.ORGANIZATION_ID 
   END 
  ELSE 
    RO.ORGANIZATION_ID 
  END AS RSS_ORG_ID2, 
 oss.ORGANIZATION_ID AS OSS_ORG_ID, 
 psrss.PSROrgUnitID AS PSRSS_ORG_ID, 
 MF.STATUS_ID 
FROM  
 [dbo].[MUD_FILE] MF WITH (NOLOCK)  
LEFT OUTER JOIN [dbo].[RECRUITING_ORGANIZATION] RO  
 ON MF.ASSIGNED_ORG_ID = RO.ORGANIZATION_ID 
LEFT OUTER JOIN [dbo].[ORGANIZATION_MAP] OM4  
 ON OM4.CHILD_ORGANIZATION_ID = RO.ORGANIZATION_ID 
LEFT OUTER JOIN [dbo].[ORGANIZATION_MAP] OM3  
 ON OM4.PARENT_ORGANIZATION_ID = OM3.CHILD_ORGANIZATION_ID 
LEFT OUTER JOIN [dbo].[ORGANIZATION_MAP] OM2  
 ON OM3.PARENT_ORGANIZATION_ID = OM2.CHILD_ORGANIZATION_ID 
LEFT OUTER JOIN [dbo].[RECRUITING_ORGANIZATION] RO2  
 ON OM4.PARENT_ORGANIZATION_ID = RO2.ORGANIZATION_ID 
LEFT OUTER JOIN [dbo].[MUD_USER_DATA] MU  
 ON OM3.PARENT_ORGANIZATION_ID = MU.ORG_ID 
LEFT OUTER JOIN [dbo].[RECRUITING_ORGANIZATION] oss  
 ON oss.ORGANIZATION_ID = MF.AssignedOSSOrgId 
LEFT OUTER JOIN [dbo].[PSROrgUnit]psrss 
 ON psrss.PSROrgUnitID  = MF.AssignedPSRSSOrgId 
WHERE 
 EXISTS (SELECT 1 FROM #SUBORGS SO WHERE SO.ORG_ID = MF.ASSIGNED_ORG_ID OR SO.ORG_ID = MF.AssignedOSSOrgId)  
 AND 
 MF.STATUS_ID IN ('A','I') 
 AND 
 (@Fips IS NULL OR FIPS = @Fips) 
 AND 
 (@ZipCode IS NULL OR ZIP = @ZipCode) 
 AND 
 ( 
  ((@STATECODE IS NULL) AND (@COUNTYCODE IS NULL)) 
  OR 
  (MF.STATE_CODE = @STATECODE AND MF.COUNTY_CODE = @COUNTYCODE)  
  OR 
  ( 
   @COUNTYCODE IS NULL AND MF.STATE_CODE = @STATECODE  
   AND  
   MF.COUNTY_CODE IN (SELECT DISTINCT COUNTY_CODE FROM [dbo].[MUD_GEO_LOCATION] WHERE STATE_CODE = @STATECODE) 
  ) 
  OR 
  ((@STATECODE IS NULL) AND (MF.COUNTY_CODE = @COUNTYCODE)) 
 ) 
 
--- RETURN FORMATTED DATA 
SELECT  
 CASE 
   WHEN REGION = '901' THEN 
  'E' 
   ELSE 
  'W' 
 END AS REGION, 
 MD.MUD_ORG_NAME AS DIST, 
 RS, 
 RSS, 
 OSS, 
 PSRSS, 
 GL.STATE_CODE, 
 GL.CITY_CODE, 
 GL.COUNTY_CODE, 
 UPPER(GL.STATE_TEXT) AS STATE_TEXT, 
 UPPER(GL.COUNTY_TEXT) AS COUNTY_TEXT, 
 FIPS, 
 ZIP, 
 RSID, 
 RSSID, 
 OSSID, 
 LAT, 
 LONG, 
 REG_ORG_ID, 
 DIST_ORG_ID, 
 RS_ORG_ID, 
 RSS_ORG_ID, 
 OSS_ORG_ID, 
 PSRSS_ORG_ID, 
 STATUS_ID 
FROM #TEMP_RESULT TR  
LEFT OUTER JOIN [dbo].[MUD_GEO_LOCATION] GL ON TR.STATE_CODE = GL.STATE_CODE AND TR.CITY_CODE = GL.CITY_CODE AND TR.COUNTY_CODE = GL.COUNTY_CODE 
LEFT OUTER JOIN [dbo].[MUD_USER_DATA] MD ON TR.DIST_ORG_ID = MD.ORG_ID 
WHERE 
 (@RSId IS NULL OR RSID = @RSId) 
 AND 
 (@RSSId IS NULL OR RSSID = @RSSId) 
ORDER BY 
 REGION, DIST, RS, RSS, STATE_TEXT, COUNTY_TEXT, FIPS, ZIP 
 
--- CLEAN UP 
 
  
DROP TABLE #IDS 
DROP TABLE #SUBORGS 
DROP TABLE #TEMP_RESULT 
 
SET NOCOUNT OFF]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>