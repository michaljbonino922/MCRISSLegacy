<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_GetRSMepsOrganiza.ons]" directorySegmentName="seg_20" id="E578BDCA-7D4D-B3D6-A43A-B351364624B1">
<sourceDDLFile>Appian.sql</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:57:48 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@ORGID int,  --- Organiza.on ID 
 @ORGTYPE varchar(10) --- This param will decide which query to use 
AS 
SET NOCOUNT ON 
 
IF @ORGTYPE = 'MEPS' 
BEGIN 
 SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE 
 FROM MEPS_RS_MAP M INNER JOIN RECRUITING_ORGANIZATION RS ON  
 (M.MEPS_ORG_ID = @ORGID AND  
 M.RS_ID = RS.ORGANIZATION_ID) 
 ORDER BY RS.NAME 
END 
 
IF @ORGTYPE = 'RS' 
BEGIN 
  
 SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE 
 FROM RECRUITING_ORGANIZATION RS 
 WHERE RS.ORGANIZATION_ID = @ORGID 
 AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
 AND RS.ISOPEN = 'Y' 
END 
 
IF @ORGTYPE = 'DISTRICT' 
BEGIN 
 (SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE 
  FROM RECRUITING_ORGANIZATION RS 
  WHERE ORGANIZATION_ID = @ORGID 
  AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
  AND RS.ISOPEN = 'Y') 
  
 UNION 
 (SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE 
  FROM RECRUITING_ORGANIZATION RS 
  WHERE ORGANIZATION_ID IN ( 
     -- This subquery will return child ID's of @ORGID 
    SELECT RSSUB.ORGANIZATION_ID 
    FROM RECRUITING_ORGANIZATION RSSUB  
    INNER JOIN ORGANIZATION_MAP OM ON (RSSUB.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID AND 
            OM.PARENT_ORGANIZATION_ID = @ORGID)) 
  AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
  AND RS.ISOPEN = 'Y' 
 ) 
 
 UNION 
 (SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE 
  FROM RECRUITING_ORGANIZATION RS 
  WHERE ORGANIZATION_ID IN (SELECT RSSUB.ORGANIZATION_ID 
       FROM RECRUITING_ORGANIZATION RSSUB 
       INNER JOIN ORGANIZATION_MAP OM ON (RSSUB.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID AND 
                   OM.PARENT_ORGANIZATION_ID IN (SELECT RSSUB2.ORGANIZATION_ID 
                 FROM RECRUITING_ORGANIZATION RSSUB2 
                INNER JOIN ORGANIZATION_MAP OM2 ON 
                 (RSSUB2.ORGANIZATION_ID = OM2.CHILD_ORGANIZATION_ID AND 
                    OM2.PARENT_ORGANIZATION_ID = @ORGID)))) 
 AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
 AND RS.ISOPEN = 'Y') 
 ORDER BY RS.NAME, RS.ORGANIZATION_TYPE, RS.ORGANIZATION_ID 
END 
 
IF @ORGTYPE = 'REGION' 
BEGIN 
 -- Create temp table to arrange mapping of each organiza.on 
 CREATE TABLE #RO_W_MAP 
  (RO_NAME VARCHAR(45), RO_ID INT, RO_TYPE VARCHAR(3), RO_REGID INT, RO_DISTID INT) 
 
 -- Insert Region and District Level into temp table 
 INSERT INTO #RO_W_MAP 
  (RO_NAME, RO_ID, RO_TYPE, RO_REGID, RO_DISTID) 
 ( 
  
 SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE, @ORGID, NULL 
 FROM RECRUITING_ORGANIZATION RS 
 WHERE ORGANIZATION_ID = @ORGID 
 AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
 AND RS.ISOPEN = 'Y' 
  
 UNION 
 SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE, @ORGID, RS.ORGANIZATION_ID 
 FROM RECRUITING_ORGANIZATION RS 
 WHERE ORGANIZATION_ID IN (SELECT RSSUB.ORGANIZATION_ID 
    FROM RECRUITING_ORGANIZATION RSSUB INNER JOIN ORGANIZATION_MAP OM ON 
    (RSSUB.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID AND 
     OM.PARENT_ORGANIZATION_ID = @ORGID)) 
 AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
 AND RS.ISOPEN = 'Y') 
  
 -- Insert RSs into temp table 
 INSERT INTO #RO_W_MAP 
  (RO_NAME, RO_ID, RO_TYPE, RO_REGID, RO_DISTID) 
 ( 
 SELECT RS.NAME, RS.ORGANIZATION_ID, RS.ORGANIZATION_TYPE, @ORGID, OM.PARENT_ORGANIZATION_ID 
 FROM RECRUITING_ORGANIZATION RS 
 INNER JOIN ORGANIZATION_MAP OM ON (RS.ORGANIZATION_ID = OM.CHILD_ORGANIZATION_ID) 
        AND ORGANIZATION_ID IN (SELECT RSSUB.ORGANIZATION_ID 
              FROM RECRUITING_ORGANIZATION RSSUB 
           INNER JOIN ORGANIZATION_MAP OM2 ON (RSSUB.ORGANIZATION_ID = OM2.CHILD_ORGANIZATION_ID AND 
                        OM2.PARENT_ORGANIZATION_ID IN (SELECT RSSUB2.ORGANIZATION_ID 
                    FROM RECRUITING_ORGANIZATION RSSUB2 
                   INNER JOIN ORGANIZATION_MAP OM3 ON 
                    (RSSUB2.ORGANIZATION_ID = OM3.CHILD_ORGANIZATION_ID AND 
                OM3.PARENT_ORGANIZATION_ID = @ORGID)))) 
 AND RS.ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
 AND RS.ISOPEN = 'Y') 
 
 --Return the contents of the temp table RO_W_MAP 
 SELECT RO_NAME, RO_ID, RO_TYPE 
 FROM #RO_W_MAP 
 GROUP BY RO_REGID, RO_DISTID, RO_ID, RO_NAME, RO_TYPE 
 ORDER BY RO_REGID, RO_DISTID, RO_NAME 
 
 --Cleanup 
 DROP TABLE #RO_W_MAP 
END 
 
IF @ORGTYPE = 'MCRC' 
BEGIN 
 -- Create temp table to arrange mapping of each organiza.on 
 CREATE TABLE #RO_MAP 
  (RO_NAME VARCHAR(45), RO_ID INT, RO_TYPE VARCHAR(3), RO_REGID INT, RO_DISTID INT) 
 
 INSERT INTO 
  #RO_MAP 
 SELECT 
  NAME, ORGANIZATION_ID, ORGANIZATION_TYPE, NULL, NULL 
 FROM 
  RECRUITING_ORGANIZATION 
 WHERE 
  ORGANIZATION_TYPE IN ('H', 'R', 'D', 'RS') 
  AND ISOPEN = 'Y' 
  
 UPDATE 
  #RO_MAP 
 SET 
  RO_REGID = CASE RO_TYPE 
   WHEN 'R' THEN 
    RO_ID 
   WHEN 'D' THEN 
    (SELECT TOP 1 OM_D.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP OM_D 
     WHERE OM_D.CHILD_ORGANIZATION_ID = RO_ID) 
   WHEN 'RS' THEN 
    (SELECT TOP 1 OM_D.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP OM_D 
     INNER JOIN ORGANIZATION_MAP OM_RS ON OM_D.CHILD_ORGANIZATION_ID = OM_RS.PARENT_ORGANIZATION_ID 
     WHERE OM_RS.CHILD_ORGANIZATION_ID = RO_ID) 
  END, 
  RO_DISTID = CASE RO_TYPE 
   WHEN 'R' THEN 
    NULL 
   WHEN 'D' THEN 
    RO_ID 
   WHEN 'RS' THEN 
    (SELECT TOP 1 OM_RS.PARENT_ORGANIZATION_ID FROM ORGANIZATION_MAP OM_RS 
     WHERE OM_RS.CHILD_ORGANIZATION_ID = RO_ID) 
  END 
  
 SELECT RO_NAME, RO_ID, RO_TYPE 
 FROM #RO_MAP 
 GROUP BY RO_REGID, RO_DISTID, RO_ID, RO_NAME, RO_TYPE 
 ORDER BY RO_REGID, RO_DISTID, RO_NAME 
 
 DROP TABLE #RO_MAP 
END 
 
SET NOCOUNT OFF]]></body>
<schema>DD6CF638-A2EB-2E1B-FF13-422CA718DE2D</schema>
<database>EA42DEDC-DFC5-B775-3079-AD0E133F5E1D</database>
</StoredProcedureSqlServerv2k5>