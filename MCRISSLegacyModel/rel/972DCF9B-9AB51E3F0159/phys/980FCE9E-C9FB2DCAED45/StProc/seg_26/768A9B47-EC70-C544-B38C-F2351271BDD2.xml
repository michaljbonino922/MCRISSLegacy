<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[spTIMSExport]" directorySegmentName="seg_26" id="768A9B47-EC70-C544-B38C-F2351271BDD2">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:42 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[AS 
 
SET NOCOUNT ON 
SET ANSI_WARNINGS OFF 
 
 
DECLARE @PullDate date.me 
DECLARE @FromDate  date.me 
DECLARE @ToDate  date.me 
 
SET @PullDate = GETDATE() 
SET @FromDate  = DATEADD(DAY, -7, @PullDate) 
SET @ToDate  = DATEADD(DAY, 15, @PullDate) 
 
 
--- CREATE TEMP TABLE TO HOLD DATA 
CREATE TABLE #SHIPPER_EXPORT  
 ( 
 SSN CHAR(9),  
 LAST_NAME CHAR(20),  
 FIRST_NAME CHAR(20),  
 MIDDLE_NAME CHAR(20),  
 SUFFIX CHAR(5), 
 
 MARINE_CANDIDATE_ID INT,  
 DATE_OF_BIRTH DATETIME, 
 BIRTH_STATE_CODE VARCHAR(2), 
 CITIZENSHIP_CODE VARCHAR(2), 
 COUNTRY_OF_ORIGIN VARCHAR(3), 
 RACE_CODE CHAR(1), 
 ETHNIC_CODE CHAR(1), 
 MEPCOM_RACE_CODE CHAR(1),  
 MEPCOM_ETHNIC_CODE CHAR(1), 
 MARITAL_STATUS_CODE CHAR(1), 
 RELIGION_CODE VARCHAR(2), 
 VALID_DRIVERS_LICENSE CHAR(1), 
 DRIVERS_LICENSE_EXPIRATION DATETIME, 
 DRIVERS_LICENSE_NUMBER VARCHAR(20), 
 DRIVERS_LICENSE_STATE_CODE VARCHAR(2), 
 GENDER_CODE CHAR(1), 
 
 NWA_ID INT,  
 RSS_ID INT,  
 RSS_MCC varchar(5), 
 
 CONTRACT_ID INT,  
 COMP_CODE VARCHAR(2), 
 PADD DATETIME, 
 DUTY_PREFERENCE_CODE VARCHAR(10), 
 CONTRACT_BEGIN_DATE DATETIME, 
 PROJECTED_SHIP_DATE DATETIME, 
 TERM_OF_ENLISTMENT INT, 
 SOURCE_OF_ENTRY_CODE VARCHAR(4), 
 PROJECTED_TRAINING_ORG_ID INT, 
 
 SHIP_ID INT,  
 SHIP_DATE DATETIME, 
 AFADBD DATETIME, 
 PRESENT_GRADE_RANK_DATE DATETIME, 
 PEBD DATETIME, 
 TRAINING_ORGANIZATION_ID INT, 
 
 QSN CHAR(9), 
 QSN_RUC VARCHAR(5), 
 QSN_BONUS_CONTROL_NUMBER VARCHAR(20), 
 QSN_MOS VARCHAR(4), 
 QSN_MCC VARCHAR(3), 
 
 CUR_STREET_ADDRESS VARCHAR(50), 
 CUR_CITY_CODE VARCHAR(4), 
 CUR_CITY_TEXT VARCHAR(30), 
 CUR_COUNTY_CODE VARCHAR(3), 
 CUR_STATE_CODE VARCHAR(2), 
 CUR_ZIPCODE VARCHAR(9), 
 
 HOR_STREET_ADDRESS VARCHAR(50), 
 HOR_CITY_CODE VARCHAR(4), 
 HOR_COUNTY_CODE VARCHAR(3), 
 HOR_STATE_CODE VARCHAR(2), 
 HOR_ZIPCODE VARCHAR(9), 
 
 ASVAB_AFQT INT, 
 ASVAB_GT INT, 
 ASVAB_MM INT, 
 ASVAB_EL INT, 
 ASVAB_CL INT, 
 ASVAB_AR INT, 
 ASVAB_WK INT, 
 ASVAB_AS INT, 
 ASVAB_CS INT, 
 ASVAB_EI INT, 
 ASVAB_GS INT, 
 ASVAB_MC INT, 
 ASVAB_MK INT, 
 ASVAB_NO INT, 
 ASVAB_PC INT, 
 ASVAB_VE INT, 
 ASVAB_VERSION VARCHAR(3), 
 ASVAB_DATE DATETIME, 
 ASVAB_MEPS_MCC VARCHAR(3), 
 
 VISUAL_ACUITY_LEFT_CORR VARCHAR(10), 
 VISUAL_ACUITY_RIGHT_CORR VARCHAR(10), 
 VISUAL_ACUITY_LEFT_UNCORR VARCHAR(10),  
 VISUAL_ACUITY_RIGHT_UNCORR VARCHAR(10), 
 VISUAL_COLOR_CODE CHAR(1), 
 HEIGHT INT, 
 WEIGHT INT, 
 
 FOREIGN_LANGUAGE_CODE_1 VARCHAR(2), 
 FOREIGN_LANGUAGE_CODE_2 VARCHAR(2), 
 FOREIGN_LANGUAGE_CODE_3 VARCHAR(2), 
 FOREIGN_LANGUAGE_CODE_4 VARCHAR(2), 
 
 DEPENDENT_ID_1 INT, 
 DEPENDENT_RELATIONSHIP_1 VARCHAR(2), 
 DEPENDENT_DATE_OF_BIRTH_1 DATETIME, 
 DEPENDENT_LAST_NAME_1 VARCHAR(20), 
 DEPENDENT_FIRST_NAME_1 VARCHAR(30), 
 DEPENDENT_MIDDLE_NAME_1 VARCHAR(20), 
 DEPENDENT_SUFFIX_1 VARCHAR(5), 
 DEPENDENT_ID_2 INT, 
 DEPENDENT_RELATIONSHIP_2 VARCHAR(2), 
 DEPENDENT_DATE_OF_BIRTH_2 DATETIME, 
 DEPENDENT_LAST_NAME_2 VARCHAR(20), 
 DEPENDENT_FIRST_NAME_2 VARCHAR(30), 
 DEPENDENT_MIDDLE_NAME_2 VARCHAR(20), 
 DEPENDENT_SUFFIX_2 VARCHAR(5), 
 DEPENDENT_ID_3 INT, 
 DEPENDENT_RELATIONSHIP_3 VARCHAR(2), 
 DEPENDENT_DATE_OF_BIRTH_3 DATETIME, 
 DEPENDENT_LAST_NAME_3 VARCHAR(20), 
 DEPENDENT_FIRST_NAME_3 VARCHAR(30), 
 DEPENDENT_MIDDLE_NAME_3 VARCHAR(20), 
 DEPENDENT_SUFFIX_3 VARCHAR(5), 
 
 
 HOME_TELEPHONE varchar(10), 
 ARC INT, 
 ARC_DATE DATETIME, 
 DLAB INT, 
 DLAB_DATE DATETIME, 
 EDPT INT, 
 EDPT_DATE DATETIME, 
 HIGH_GRADE_COMPLETE VARCHAR(2), 
 EDUCATION_CERTIFICATION CHAR(1), 
 PRIOR_SERVICE_ENTRY_DATE DATETIME, 
 PRIOR_SERVICE_CODE VARCHAR(2), 
 FUTURE_TRAINING VARCHAR(3), 
 HIGH_SCHOOL_LAST_YEAR INT, 
 PEF_SKILL VARCHAR(4), 
 PEF_BONUS VARCHAR(4), 
 PEF_MCCF VARCHAR(4), 
 DISTRICT_CODE VARCHAR(2),  
 REFERRAL_COUNT INT, 
 RANK_CODE  VARCHAR(2), 
 PRIMARY_MOS_CODE  VARCHAR(4) 
 
 
 
 
 
 
 
 
 
 ) 
 
 
INSERT INTO #SHIPPER_EXPORT  
 ( 
 MARINE_CANDIDATE_ID,  
 NWA_ID,  
 CONTRACT_ID,  
 COMP_CODE, 
 PADD, 
 SHIP_ID,  
 SHIP_DATE, 
 RSS_ID) 
SELECT     
 N.MARINE_CANDIDATE_ID,  
 N.NWA_ID,  
 C.CONTRACT_ID,  
 C.COMPONENT_CODE AS COMP_CODE, 
 C.PROJECTED_SHIP_DATE AS PADD, 
 S.SHIP_ID,  
 S.SHIP_DATE, 
 N.ORGANIZATION_OF_RECORD_ID AS RSS_ID 
FROM   (SELECT *  
 FROM SHIPPER  
 WHERE SHIP_DATE BETWEEN @FromDate AND @PullDate 
   AND TRAINING_ORGANIZATION_ID IN (1, 2) ) AS S  
INNER JOIN CONTRACT C  
   ON S.CONTRACT_ID = C.CONTRACT_ID 
INNER JOIN NWA N  
   ON C.NWA_ID = N.NWA_ID 
 
 
INSERT INTO #SHIPPER_EXPORT  
 ( 
 MARINE_CANDIDATE_ID,  
 NWA_ID,  
 CONTRACT_ID,  
 COMP_CODE, 
 PADD, 
 SHIP_ID,  
 SHIP_DATE, 
 RSS_ID) 
SELECT     
 N.MARINE_CANDIDATE_ID,  
 N.NWA_ID,  
 C.CONTRACT_ID,  
 C.COMPONENT_CODE AS COMP_CODE, 
 C.PROJECTED_SHIP_DATE AS PADD, 
 NULL,  
 NULL, 
 N.ORGANIZATION_OF_RECORD_ID AS RSS_ID 
FROM   (SELECT *  
 FROM CONTRACT  
 WHERE PROJECTED_SHIP_DATE BETWEEN @FromDate AND @ToDate ) AS C  
LEFT OUTER JOIN #SHIPPER_EXPORT S 
   ON C.CONTRACT_ID = S.CONTRACT_ID 
INNER JOIN NWA N  
   ON C.NWA_ID = N.NWA_ID 
WHERE S.CONTRACT_ID IS NULL 
 
--- MCC DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 RSS_MCC = RSS.MCC_CODE 
FROM #SHIPPER_EXPORT SE  
INNER JOIN RECRUITING_ORGANIZATION RSS  
   ON SE.RSS_ID = RSS.ORGANIZATION_ID  
 
--- PERSON & MARINE CANDIDATE DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 LAST_NAME    = P.LAST_NAME, 
 MIDDLE_NAME   = P.LEGAL_MIDDLE_NAME, 
 FIRST_NAME   = P.FIRST_NAME, 
 SSN    = P.SOCIAL_SECURITY_NUMBER, 
 SUFFIX    = P.SUFFIX_CD, 
 
 DATE_OF_BIRTH    = MC.DATE_OF_BIRTH, 
 BIRTH_STATE_CODE  = LTRIM(MC.BIRTH_STATE), 
 CITIZENSHIP_CODE  = MC.CITIZENSHIP, 
 COUNTRY_OF_ORIGIN  = MC.COUNTRY_OF_ORIGIN, 
 RACE_CODE   = MC.RACE_CODE, 
 ETHNIC_CODE   = MC.ETHNIC_CODE, 
 MEPCOM_RACE_CODE   = MC.MEPCOM_RACE_CODE,  
 MEPCOM_ETHNIC_CODE   = MC.MEPCOM_ETHNIC_CODE,  
 MARITAL_STATUS_CODE  = MC.MARITAL_STATUS_CODE, 
 RELIGION_CODE   = MC.RELIGION_CODE, 
 VALID_DRIVERS_LICENSE  = CASE  
      WHEN MC.DRIVER_LICENSE_EXP IS NOT NULL AND  
       MC.DRIVER_LICENSE_NUM IS NOT NULL AND 
       MC.DRIVER_LICENSE_STATE IS NOT NULL  
      THEN 'Y' 
      ELSE 'N' 
      END, 
 DRIVERS_LICENSE_EXPIRATION = MC.DRIVER_LICENSE_EXP, 
 DRIVERS_LICENSE_NUMBER  = MC.DRIVER_LICENSE_NUM, 
 DRIVERS_LICENSE_STATE_CODE = MC.DRIVER_LICENSE_STATE, 
 GENDER_CODE   = MC.GENDER_CODE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN MARINE_CANDIDATE MC  
   ON AE.MARINE_CANDIDATE_ID = MC.MARINE_CANDIDATE_ID 
INNER JOIN PERSON P  
   ON AE.MARINE_CANDIDATE_ID = P.PERSON_ID 
 
--- CONTRACT DATA 
 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 COMP_CODE    = C.COMPONENT_CODE, 
 DUTY_PREFERENCE_CODE  = C.DUTY_PREFERENCE1, 
 CONTRACT_BEGIN_DATE  = C.CONTRACT_BEGIN_DATE, 
 PROJECTED_SHIP_DATE   = C.PROJECTED_SHIP_DATE, 
 TERM_OF_ENLISTMENT  = C.TERM_OF_ENLISTMENT, 
 SOURCE_OF_ENTRY_CODE  = C.SOURCE_OF_ENTRY_CODE, 
 PROJECTED_TRAINING_ORG_ID  = C.PROJECTED_TRAINING_ORG_ID  
FROM 
 #SHIPPER_EXPORT AE INNER JOIN CONTRACT C ON AE.CONTRACT_ID = C.CONTRACT_ID 
 
--- SHIPPER DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 AFADBD    = S.AFADBD, 
 PRESENT_GRADE_RANK_DATE  = S.PAY_GRADE_ED_DATE, 
 PEBD    = S.PAY_ENTRY_BASE_DATE, 
 SHIP_DATE   = S.SHIP_DATE, 
 TRAINING_ORGANIZATION_ID = S.TRAINING_ORGANIZATION_ID 
FROM 
 #SHIPPER_EXPORT AE INNER JOIN SHIPPER S ON AE.SHIP_ID = S.SHIP_ID 
 
--- QSN DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 QSN    = QSN.QSN_ID, 
 QSN_RUC    = QSN.RUC, 
 QSN_BONUS_CONTROL_NUMBER = QSN.BONUS_CONTROL_NUMBER, 
 QSN_MOS    = QSN.MOS, 
 QSN_MCC    = QSN.MCC_CODE 
FROM 
 #SHIPPER_EXPORT AE INNER JOIN QSN ON AE.CONTRACT_ID = QSN.CONTRACT_ID 
 
--- CURRENT ADDRESS DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 CUR_CITY_CODE   = CUR.CITY_CODE, 
 CUR_CITY_TEXT   = GL.CITY_TEXT, 
 CUR_COUNTY_CODE  = CUR.COUNTY_CODE, 
 CUR_STATE_CODE   = CUR.STATE_CODE, 
 CUR_ZIPCODE   = CUR.ZIPCODE, 
 CUR_STREET_ADDRESS  = CUR.STREET_ADDRESS 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_ADDRESS CUR  
   ON (AE.MARINE_CANDIDATE_ID = CUR.MARINE_CANDIDATE_ID AND 
 CUR.ADDRESS_TYPE = 'C') 
LEFT OUTER JOIN GEO_LOCATION GL  
   ON (CUR.STATE_CODE = GL.STATE_CODE AND 
 CUR.COUNTY_CODE = GL.COUNTY_CODE AND 
 CUR.CITY_CODE = GL.CITY_CODE) 
 
--- HOR ADDRESS DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 HOR_CITY_CODE   = HOR.CITY_CODE, 
 HOR_COUNTY_CODE  = HOR.COUNTY_CODE, 
 HOR_STATE_CODE   = HOR.STATE_CODE, 
 HOR_ZIPCODE   = HOR.ZIPCODE, 
 HOR_STREET_ADDRESS  = HOR.STREET_ADDRESS 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_ADDRESS HOR  
   ON  (AE.MARINE_CANDIDATE_ID = HOR.MARINE_CANDIDATE_ID AND 
 HOR.ADDRESS_TYPE = 'H') 
 
--- ASVAB DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 ASVAB_AFQT  = CA.AFQT_SCORE, 
 ASVAB_GT  = CA.GT_SCORE, 
 ASVAB_MM  = CA.MM_SCORE, 
 ASVAB_EL  = CA.EL_SCORE, 
 ASVAB_CL  = CA.CL_SCORE, 
 ASVAB_AR  = CONVERT(INT,CA.AR_SUBTEST), 
 ASVAB_WK  = CONVERT(INT,CA.WK_SUBTEST), 
 ASVAB_AS  = CONVERT(INT,CA.AS_SUBTEST), 
 ASVAB_CS  = CONVERT(INT,CA.CS_SUBTEST), 
 ASVAB_EI  = CONVERT(INT,CA.EI_SUBTEST), 
 ASVAB_GS  = CONVERT(INT,CA.GS_SUBTEST), 
 ASVAB_MC  = CONVERT(INT,CA.MC_SUBTEST), 
 ASVAB_MK  = CONVERT(INT,CA.MK_SUBTEST), 
 ASVAB_NO  = CONVERT(INT,CA.NO_SUBTEST), 
 ASVAB_PC  = CONVERT(INT,CA.PC_SUBTEST), 
 ASVAB_VE  = CONVERT(INT,CA.VE_SUBTEST), 
 ASVAB_VERSION  = CA.VERSION, 
 ASVAB_DATE  = CA.ASVAB_DATE, 
 ASVAB_MEPS_MCC  = LTRIM(M.MCC_CODE) 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_ASVAB CA  
   ON  (AE.MARINE_CANDIDATE_ID = CA.MARINE_CANDIDATE_ID AND 
 CA.ASVAB_DATE = (SELECT MAX(CA1.ASVAB_DATE)  
    FROM CANDIDATE_ASVAB CA1 
    WHERE CA1.MARINE_CANDIDATE_ID = CA.MARINE_CANDIDATE_ID)) 
LEFT OUTER JOIN MEPS_ORGANIZATION_LOOKUP M  
ON CA.MEPS_ORGANIZATION_ID = M.MEPS_ORGANIZATION_ID 
 
--- MEDICAL EXAM DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 VISUAL_ACUITY_LEFT_CORR  = CME.LEFT_CORR_VISUAL_ACUITY, 
 VISUAL_ACUITY_RIGHT_CORR  = CME.RIGHT_CORR_VISUAL_ACUITY, 
 VISUAL_ACUITY_LEFT_UNCORR  = CME.LEFT_UNCORR_VISUAL_ACUITY,  
 VISUAL_ACUITY_RIGHT_UNCORR = CME.RIGHT_UNCORR_VISUAL_ACUITY, 
 VISUAL_COLOR_CODE   = CME.VISUAL_COLOR, 
 HEIGHT     = CME.HEIGHT, 
 WEIGHT     = CME.WEIGHT 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_MEDICAL_EXAM CME  
   ON (AE.MARINE_CANDIDATE_ID = CME.MARINE_CANDIDATE_ID AND 
 CME.MEDICAL_EXAM_TYPE = 'FULL' AND 
 CME.MEDICAL_EXAM_DATE = (SELECT MAX(CME1.MEDICAL_EXAM_DATE)                
     FROM CANDIDATE_MEDICAL_EXAM CME1 
     WHERE CME1.MARINE_CANDIDATE_ID = CME.MARINE_CANDIDATE_ID AND 
     CME1.MEDICAL_EXAM_TYPE = CME.MEDICAL_EXAM_TYPE)) 
 
--- FOREIGN LANGUAGE DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 FOREIGN_LANGUAGE_CODE_1 = (SELECT TOP 1 CL.LANGUAGE_CODE  
                                   FROM CANDIDATE_LANGUAGE CL  
       WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID  
       ORDER BY CL.LANGUAGE_CODE DESC), 
 FOREIGN_LANGUAGE_CODE_2 = (SELECT TOP 1 CL.LANGUAGE_CODE  
                                   FROM CANDIDATE_LANGUAGE CL  
       WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
      CL.LANGUAGE_CODE != (SELECT TOP 1 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
             WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
             ORDER BY CL1.LANGUAGE_CODE DESC) 
       ORDER BY CL.LANGUAGE_CODE DESC), 
 FOREIGN_LANGUAGE_CODE_3 = (SELECT TOP 1 CL.LANGUAGE_CODE  
                                  FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
     CL.LANGUAGE_CODE != (SELECT TOP 2 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
            WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
            ORDER BY CL1.LANGUAGE_CODE DESC) 
      ORDER BY CL.LANGUAGE_CODE DESC), 
 FOREIGN_LANGUAGE_CODE_4 = (SELECT TOP 1 CL.LANGUAGE_CODE  
                                  FROM CANDIDATE_LANGUAGE CL  
      WHERE CL.MARINE_CANDIDATE_ID = AE.MARINE_CANDIDATE_ID AND 
     CL.LANGUAGE_CODE != (SELECT TOP 3 CL1.LANGUAGE_CODE FROM CANDIDATE_LANGUAGE CL1 
            WHERE CL1.MARINE_CANDIDATE_ID = CL.MARINE_CANDIDATE_ID 
            ORDER BY CL1.LANGUAGE_CODE DESC) 
      ORDER BY CL.LANGUAGE_CODE DESC) 
FROM #SHIPPER_EXPORT AE  
 
 
create table #depn 
 ( 
 MARINE_CANDIDATE_ID INT, 
 DEPENDENT_ID INT, 
 DEPENDENT_TYPE VARCHAR(2), 
 DATE_OF_BIRTH DATETIME, 
 LAST_NAME VARCHAR(20), 
 FIRST_NAME VARCHAR(30), 
 MIDDLE_NAME VARCHAR(20), 
 SUFFIX_CD VARCHAR(5), 
 ) 
 
insert into #depn 
select  CD.MARINE_CANDIDATE_ID, 
 CD.DEPENDENT_ID, 
 CD.DEPENDENT_TYPE, 
 CD.DATE_OF_BIRTH, 
 CD.LAST_NAME, 
 CD.FIRST_NAME, 
 CD.MIDDLE_NAME, 
 CD.SUFFIX_CD 
FROM #SHIPPER_EXPORT AE 
INNER JOIN CANDIDATE_DEPENDENT CD 
   ON AE.MARINE_CANDIDATE_ID = CD.MARINE_CANDIDATE_ID 
 
--- DEPENDENT DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 DEPENDENT_ID_1   = CD1.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_1  = CD1.DEPENDENT_TYPE, 
 DEPENDENT_DATE_OF_BIRTH_1 = CD1.DATE_OF_BIRTH, 
 DEPENDENT_LAST_NAME_1   = CD1.LAST_NAME, 
 DEPENDENT_FIRST_NAME_1   = CD1.FIRST_NAME, 
 DEPENDENT_MIDDLE_NAME_1  = CD1.MIDDLE_NAME, 
 DEPENDENT_SUFFIX_1   = CD1.SUFFIX_CD, 
 DEPENDENT_ID_2   = CD2.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_2  = CD2.DEPENDENT_TYPE, 
 DEPENDENT_DATE_OF_BIRTH_2 = CD2.DATE_OF_BIRTH, 
 DEPENDENT_LAST_NAME_2   = CD2.LAST_NAME, 
 DEPENDENT_FIRST_NAME_2   = CD2.FIRST_NAME, 
 DEPENDENT_MIDDLE_NAME_2  = CD2.MIDDLE_NAME, 
 DEPENDENT_SUFFIX_2   = CD2.SUFFIX_CD, 
 DEPENDENT_ID_3   = CD3.DEPENDENT_ID, 
 DEPENDENT_RELATIONSHIP_3  = CD3.DEPENDENT_TYPE, 
 DEPENDENT_DATE_OF_BIRTH_3 = CD3.DATE_OF_BIRTH, 
 DEPENDENT_LAST_NAME_3   = CD3.LAST_NAME, 
 DEPENDENT_FIRST_NAME_3   = CD3.FIRST_NAME, 
 DEPENDENT_MIDDLE_NAME_3  = CD3.MIDDLE_NAME, 
 DEPENDENT_SUFFIX_3   = CD3.SUFFIX_CD 
FROM #SHIPPER_EXPORT AE  
LEFT OUTER JOIN #depn CD1  
  ON (AE.MARINE_CANDIDATE_ID = CD1.MARINE_CANDIDATE_ID AND 
      CD1.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID)  
     FROM #depn CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD1.MARINE_CANDIDATE_ID)) 
LEFT OUTER JOIN #depn CD2  
  ON (AE.MARINE_CANDIDATE_ID = CD2.MARINE_CANDIDATE_ID AND 
      CD2.DEPENDENT_ID > CD1.DEPENDENT_ID AND 
      CD2.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID) FROM #depn CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD2.MARINE_CANDIDATE_ID)) 
LEFT OUTER JOIN #depn CD3  
  ON (AE.MARINE_CANDIDATE_ID = CD3.MARINE_CANDIDATE_ID AND 
      CD3.DEPENDENT_ID > CD2.DEPENDENT_ID AND 
      CD3.DEPENDENT_ID = (SELECT MIN(CD.DEPENDENT_ID) FROM #depn CD 
     WHERE CD.MARINE_CANDIDATE_ID = CD3.MARINE_CANDIDATE_ID)) 
 
--- HOME TELEPHONE DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 HOME_TELEPHONE = LEFT(COALESCE(CT.AREA_CODE, SPACE(0)) + COALESCE(CT.TELEPHONE_NUMBER, SPACE(0)), 10) 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_TELEPHONE CT  
   ON (AE.MARINE_CANDIDATE_ID = CT.MARINE_CANDIDATE_ID AND 
       CT.TELEPHONE_TYPE = 'H') 
 
 
--- ARC DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 ARC   = ARC.SPECIAL_EXAM_SCORE, 
 ARC_DATE  = ARC.SPECIAL_EXAM_DATE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_SPECIAL_EXAM ARC  
   ON (AE.MARINE_CANDIDATE_ID = ARC.MARINE_CANDIDATE_ID AND 
       ARC.SPECIAL_EXAM_TYPE = 'ARC' AND 
       ARC.SPECIAL_EXAM_DATE = (SELECT MAX(ARC1.SPECIAL_EXAM_DATE)  
    FROM CANDIDATE_SPECIAL_EXAM ARC1 
    WHERE ARC1.MARINE_CANDIDATE_ID = ARC.MARINE_CANDIDATE_ID AND 
     ARC1.SPECIAL_EXAM_TYPE = ARC.SPECIAL_EXAM_TYPE)) 
 
 
--- DLAB DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 DLAB   = DLAB.SPECIAL_EXAM_SCORE, 
 DLAB_DATE  = DLAB.SPECIAL_EXAM_DATE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_SPECIAL_EXAM DLAB  
   ON (AE.MARINE_CANDIDATE_ID = DLAB.MARINE_CANDIDATE_ID AND 
       DLAB.SPECIAL_EXAM_TYPE = 'DLAB' AND 
       DLAB.SPECIAL_EXAM_DATE = (SELECT MAX(DLAB1.SPECIAL_EXAM_DATE)  
     FROM CANDIDATE_SPECIAL_EXAM DLAB1 
     WHERE DLAB1.MARINE_CANDIDATE_ID = DLAB.MARINE_CANDIDATE_ID AND 
     DLAB1.SPECIAL_EXAM_TYPE = DLAB.SPECIAL_EXAM_TYPE)) 
 
--- EDPT DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 EDPT   = EDPT.SPECIAL_EXAM_SCORE, 
 EDPT_DATE  = EDPT.SPECIAL_EXAM_DATE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_SPECIAL_EXAM EDPT  
   ON (AE.MARINE_CANDIDATE_ID = EDPT.MARINE_CANDIDATE_ID AND 
       EDPT.SPECIAL_EXAM_TYPE = 'EDPT' AND 
       EDPT.SPECIAL_EXAM_DATE = (SELECT MAX(EDPT1.SPECIAL_EXAM_DATE)  
     FROM CANDIDATE_SPECIAL_EXAM EDPT1 
     WHERE EDPT1.MARINE_CANDIDATE_ID = EDPT.MARINE_CANDIDATE_ID AND 
     EDPT1.SPECIAL_EXAM_TYPE = EDPT.SPECIAL_EXAM_TYPE)) 
 
--- EDUCATION DATA 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 HIGH_GRADE_COMPLETE  = CE.EDUCATION_LEVEL, 
 EDUCATION_CERTIFICATION = CE.EDUCATION_CODE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_EDUCATION CE  
   ON (AE.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID AND 
       CE.SCHOOL_END_DATE = (SELECT MAX(CE1.SCHOOL_END_DATE)  
        FROM CANDIDATE_EDUCATION CE1 
        WHERE CE1.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID)) 
 
--- PRIOR SERVICE 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 PRIOR_SERVICE_ENTRY_DATE  = CPS.BEGIN_DATE, 
 PRIOR_SERVICE_CODE   = COALESCE(CPS.COMPONENT_CODE, 'NO') 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_PRIOR_SERVICE CPS  
   ON (AE.MARINE_CANDIDATE_ID = CPS.MARINE_CANDIDATE_ID AND 
       CPS.BEGIN_DATE = (SELECT MAX(CPS1.BEGIN_DATE)  
    FROM CANDIDATE_PRIOR_SERVICE CPS1 
    WHERE CPS1.MARINE_CANDIDATE_ID = CPS.MARINE_CANDIDATE_ID)) 
 
 
--- FUTURE TRAINING 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 FUTURE_TRAINING = LEFT(TRNG.MCC_CODE,3) 
FROM #SHIPPER_EXPORT AE  
INNER JOIN TRAINING_ORGANIZATION TRNG  
   ON COALESCE(AE.TRAINING_ORGANIZATION_ID, AE.PROJECTED_TRAINING_ORG_ID) = TRNG.TRAINING_ORGANIZATION_ID 
 
 
 
--- HIGH SCHOOL LAST YEAR  
UPDATE  
 #SHIPPER_EXPORT 
SET 
 HIGH_SCHOOL_LAST_YEAR = YEAR(CE.SCHOOL_END_DATE) 
FROM #SHIPPER_EXPORT AE  
INNER JOIN CANDIDATE_EDUCATION CE  
   ON (AE.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID AND 
       CE.EDUCATION_LEVEL = (SELECT MAX(CE1.EDUCATION_LEVEL)  
        FROM CANDIDATE_EDUCATION CE1 
        INNER JOIN HIGH_SCHOOL HS 
           ON (CE.SCHOOL_CODE = HS.SCHOOL_CODE AND  
        HS.SCHOOL_TYPE = 'HS') 
        WHERE CE1.MARINE_CANDIDATE_ID = CE.MARINE_CANDIDATE_ID)) 
 
 
 
create table #progs 
 ( 
 contract_id int, 
 program_code varchar(4), 
 program_type varchar(4) 
 ) 
 
insert into #progs 
select  pa.contract_id, 
 pg.program_code, 
 pg.program_type 
from  #SHIPPER_EXPORT AE  
INNER JOIN  PROGRAM_AVAILABILITY PA  
   ON AE.CONTRACT_ID = PA.CONTRACT_ID 
INNER JOIN PROGRAM PG  
   ON PA.PROGRAM_ID = PG.PROGRAM_ID 
 
--- PEF SKILL 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 PEF_SKILL = PA.PROGRAM_CODE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN  #progs PA  
   ON AE.CONTRACT_ID = PA.CONTRACT_ID 
WHERE PA.PROGRAM_TYPE IN ('MEOP', 'QEP', 'EOP') 
 
 
--- PEF BONUS 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 PEF_BONUS = PA.PROGRAM_CODE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN  #progs PA  
   ON AE.CONTRACT_ID = PA.CONTRACT_ID 
WHERE PA.PROGRAM_TYPE = 'EBP' 
 
--- PEF MCCF 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 PEF_MCCF = PA.PROGRAM_CODE 
FROM #SHIPPER_EXPORT AE  
INNER JOIN  #progs PA  
   ON AE.CONTRACT_ID = PA.CONTRACT_ID 
WHERE PA.PROGRAM_TYPE = 'MCCF' 
 
 
--- DISTRICT CODE AND REFERRAL COUNT 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 DISTRICT_CODE = (SELECT CASE DIST.ORGANIZATION_ID 
     WHEN 903 THEN  '01'                
     WHEN 904 THEN  '04'                
     WHEN 905 THEN  '06'                
     WHEN 906 THEN  '08'                
     WHEN 907 THEN  '09'                
     WHEN 908 THEN  '12'                
     ELSE SPACE(0) 
     END  
    FROM RECRUITING_ORGANIZATION DIST  
     INNER JOIN ORGANIZATION_MAP RS ON DIST.ORGANIZATION_ID = RS.PARENT_ORGANIZATION_ID 
     INNER JOIN ORGANIZATION_MAP RSS ON  
      (RS.CHILD_ORGANIZATION_ID = RSS.PARENT_ORGANIZATION_ID AND 
      RSS.CHILD_ORGANIZATION_ID = AE.RSS_ID)),  
 REFERRAL_COUNT = (SELECT CASE  
     WHEN COUNT(R.DEP_CONTRACT_ID) < 10 THEN '0' + CONVERT(CHAR(1), COUNT(R.DEP_CONTRACT_ID)) 
     ELSE CONVERT(CHAR(2), COUNT(R.DEP_CONTRACT_ID)) 
     END 
    FROM REFERRAL R WHERE R.DEP_CONTRACT_ID = AE.CONTRACT_ID) 
FROM 
 #SHIPPER_EXPORT AE  
 
 
 
--- RANK CODE AND PRIMARY MOS CODE 
--- Spoke with GySgt Calvanese 
---    Reservists get '9971' 
---    Regulars with any program get '9971' 
---    Regular open get '9900' 
UPDATE 
 #SHIPPER_EXPORT 
SET 
 --- SET RANK_CODE BASED ON REFERRAL COUNT 
 RANK_CODE = CASE  
   WHEN REFERRAL_COUNT >= 2 THEN 'E2' 
   ELSE 'E1' 
   END, 
 PRIMARY_MOS_CODE = CASE  
    WHEN LEN(QSN) > 0 THEN '9971' 
    WHEN LEN(PEF_SKILL) != 0 OR  
         LEN(PEF_BONUS) != 0 OR  
         LEN(PEF_MCCF) != 0  
         THEN '9971' 
    ELSE '9900' 
    END 
 
 
 
 
 
 
SELECT * FROM #SHIPPER_EXPORT 
ORDER BY COALESCE(SHIP_DATE,PADD) 
 
DROP TABLE #depn 
DROP TABLE #progs 
DROP TABLE #SHIPPER_EXPORT]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>