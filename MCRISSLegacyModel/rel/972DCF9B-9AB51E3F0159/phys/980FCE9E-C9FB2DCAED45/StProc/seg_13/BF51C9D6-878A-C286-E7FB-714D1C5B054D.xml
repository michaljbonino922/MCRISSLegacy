<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[SavePhysicalFitnessTest]" directorySegmentName="seg_13" id="BF51C9D6-878A-C286-E7FB-714D1C5B054D">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:43 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[( 
 @ID uniqueiden..er, 
 @NWAID int, 
 @PFTTypeID int, 
 @Date date.me, 
 @RunMinutes int, 
 @RunSeconds int, 
 @Pullups int = null, 
 @Hang.me int = null, 
 @Crunches int, 
 @IsPassing bit, 
 @AmmoCanLi. int = null, 
 @AmmoCanLi.Date date.me = null, 
 @PlankMinutes int = null, 
 @PlankSeconds int = null, 
 @Pushups int = null 
) 
AS 
BEGIN 
 
 BEGIN TRANSACTION 
  
 IF EXISTS(SELECT ID FROM [USMC].[PhysicalFitnessTest] WHERE [ID] = @ID) 
 BEGIN 
  
  IF(@Date IS NULL AND @RunMinutes = 0 AND @RunSeconds = 0 AND COALESCE(@Pullups,0) = 0 AND COALESCE(@Hang.me,0) = 0 AND COALESCE(@Crunches,0) = 0) 
  BEGIN 
   DELETE FROM [USMC].[PhysicalFitnessTest] WHERE [ID] = @ID 
  END 
  ELSE 
  BEGIN 
   UPDATE 
    [USMC].[PhysicalFitnessTest] 
   SET  
    [NWAID] = @NWAID, 
    [PFTTypeID] = @PFTTypeID, 
    [Date] = @Date, 
    [RunMinutes] = @RunMinutes, 
    [RunSeconds] = @RunSeconds, 
    [Pullups] = @Pullups, 
    [Pushups] = @Pushups, 
    [Hang.me] = @Hang.me, 
    [Crunches] = @Crunches, 
    [PlankMinutes] = @PlankMinutes, 
    [PlankSeconds] = @PlankSeconds, 
    [IsPassing] = @IsPassing, 
    [AmmoCanLi.] = @AmmoCanLi. 
   WHERE  
    [ID] = @ID 
  END 
 END 
 ELSE 
 BEGIN 
  INSERT INTO [USMC].[PhysicalFitnessTest]  
  ( 
   [ID], 
   [NWAID], 
   [PFTTypeID], 
   [Date], 
   [RunMinutes], 
   [RunSeconds], 
   [Pullups], 
   [Pushups], 
   [Hang.me], 
   [Crunches], 
   [PlankMinutes], 
   [PlankSeconds], 
   [IsPassing], 
   [AmmoCanLi.] 
  ) 
  VALUES  
  ( 
   @ID, 
   @NWAID, 
   @PFTTypeID, 
   @Date, 
   @RunMinutes, 
   @RunSeconds, 
   @Pullups, 
   @Pushups, 
   @Hang.me, 
   @Crunches, 
   @PlankMinutes, 
   @PlankSeconds, 
   @IsPassing, 
   @AmmoCanLi. 
  ) 
  
 END 
  
 -- Rollback the transac.on if there were any errors 
 IF @@ERROR <> 0 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
  
  -- Raise an error and return 
  RAISERROR ('Error occurred while performing the change.', 16, 1) 
  RETURN 
 END 
  
 -- Rollback the transac.on if the number of rows changed does not meet our expecta.on... 
 IF @@ROWCOUNT > 1 
 BEGIN 
  -- Rollback the transac.on 
  ROLLBACK TRANSACTION 
  
  -- Raise an error and return 
  RAISERROR ('An unexpected number of rows were changed.', 16, 1) 
  RETURN 
 END 
  
 -- If we reach this point, the commands completed successfully. 
 COMMIT TRANSACTION 
END]]></body>
<schema>72379847-5555-B149-4E45-17F849103A51</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>