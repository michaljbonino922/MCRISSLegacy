<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetHSCCVisitCardRows]" directorySegmentName="seg_13" id="2C99B28B-E2C4-55EA-3793-D8790B049383">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[(  
 @OrgId uniqueiden..er = null, 
 @Ac.onDatedStart date.me = null, 
 @Ac.onDatedEnd date.me =  null, 
 @DateCreatedStart date.me = null, 
 @DateCreatedEnd date.me = null, 
 @RecruiterId uniqueiden..er = null, 
 @SchoolYear int = null 
) 
AS 
 
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED 
  
 DECLARE @Organiza.onID int  
  
 SELECT @Organiza.onID = ORGANIZATION_ID FROM MCRISS.DBO.RECRUITING_ORGANIZATION WHERE rowguid = @orgid   
  
 SELECT 
  rp.RECRUITING_PERSON_ID,  
  rp.rowguid, 
  rp.RANK_CODE, 
  rcrtr.LAST_NAME, 
  rcrtr.FIRST_NAME, 
  rcrtr.LEGAL_MIDDLE_NAME 
 INTO #Recrui.ngPerson 
 FROM [MCRISS].[dbo].[RECRUITING_PERSON] rp  
 INNER JOIN [MCRISS].[dbo].[PERSON] rcrtr ON rp.RECRUITING_PERSON_ID = rcrtr.PERSON_ID  
 WHERE ((rp.RowGuid = @RecruiterId AND @RecruiterId IS NOT NULL) OR (@RecruiterId IS NULL)) 
 
  
 DECLARE @SchoolYearStartDate date.me 
 DECLARE @SchoolYearEndDate date.me 
 
 SET @SchoolYearStartDate = Convert(date.me, str(@SchoolYear-1)+'/7/1', 101)  
 SET @SchoolYearEndDate =   Convert(date.me, str(@SchoolYear)+'/6/30', 101) 
  
 SELECT DISTINCT hs.* 
 INTO #SchoolList 
 FROM  
  MCRISS.dbo.High_School hs 
  INNER JOIN MCRISS.USMC.vwDecendentRecrui.ngOrgs c 
   ON hs.ORGANIZATION_ID = c.decendent  
 
 WHERE  
  (ORGANIZATION_ID = @Organiza.onID OR c.Parent = @Organiza.onID) 
  AND (  
    E.ec.ve_Date IS NULL OR 
    ( E.ec.ve_Date IS NOT NULL AND 
      ((  hs.DELETED <> 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate) OR 
       (  hs.DELETED = 'Y' AND E.ec.ve_Date <= @SchoolYearEndDate AND UPDATE_DATE >= @SchoolYearStartDate) 
      ) 
    ) 
   ) 
  AND hs.School_Type <> 'COL' and hs.School_Type <> '4Y' 
 
     
 /************************************************************************* 
 *** Insert new school visit cards for the school year if it is not there 
 *************************************************************************/ 
 INSERT INTO RSSOSS.[USMC].[HSCCVisitCard] 
           ([ID] 
           ,[DatePrepared] 
           ,[School_Code] 
           ,[School_Year] 
           ) 
    SELECT  
  NEWID(), 
  @SchoolYearStartDate, 
  hs.School_Code, 
  @SchoolYear 
   
 FROM  
  #SchoolList hs 
  INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp 
   ON hs.School_Code = hsp.School_Code and hsp.School_Year = @SchoolYear 
  LEFT OUTER JOIN RSSOSS.USMC.HSCCVisitCard vc 
   ON hs.School_Code = vc.School_Code AND vc.School_Year = @SchoolYear     
 WHERE  
  vc.School_year IS NULL  
  
 
 -- Find all events with subject id of pro.le id and earliest future ac.on date 
 SELECT Pro.leId,  EventID, StartDATE,EventType,  EventTypeOther 
 INTO #Event 
 FROM 
 ( 
  SELECT Rank() OVER (Par..on BY Pro.leId Order by StartDate) as RecRank 
  ,* 
  FROM 
  (  
   SELECT hsp.rowguid as Pro.leId, e.Id as EventID, e.StartDATE,et.[Type] as EventType, e.EventTypeOther 
   FROM  
    #SchoolList hs 
    INNER JOIN MCRISS.dbo.HIGH_SCHOOL_PROFILE hsp 
     ON hs.School_Code = hsp.School_Code and hsp.School_Year = @SchoolYear 
    INNER JOIN RSSOSS.USMC.EventSubject es  
     ON es.SubjectID = hsp.rowguid 
    INNER JOIN RSSOSS.USMC.Event e  
     ON e.Id = es.EventId AND  e.EventSourceId = 19 
    inner join RSSOSS.USMC.EventType et on et.ID = e.EventTypeId 
  
   WHERE  
    e.StartDate >= GETDATE() 
  ) t1 
 ) t2 
 WHERE RecRank =  1 
     
 
 CREATE TABLE #HSCCVisitCard 
 (   
   ApplicantAssetID uniqueiden..er 
  ,ApplicantAssetName VARCHAR(300) 
  ,CardID uniqueiden..er 
  ,SchoolID uniqueiden..er 
  ,CreateDate DATETIME 
  ,RecruiterId uniqueiden..er 
  ,Recruiter VARCHAR(300) 
  ,RecruiterShortName VARCHAR(300) 
  ,SchoolYear int 
  ,EventID uniqueiden..er 
  ,EventType varchar(300) 
  ,EventTypeOther varchar(300) 
  ,NextScheduledEvent date.me 
 ) 
  
  
 INSERT INTO #HSCCVisitCard 
 SELECT 
   prf.rowguid AS ApplicantAssetID,  
   hs.HIGHSCHOOL_NAME  + '-' + cast(prf.SCHOOL_YEAR as varchar(5)) AS ApplicantAssetName, 
   prf.rowguid AS CardId, 
   hs.rowguid AS SchoolId, 
   hsv.DatePrepared AS CreateDate,    
   rp.rowguid AS RecruiterID, 
   COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
   COALESCE(RTRIM(rp.LAST_NAME), SPACE(0))  + SPACE(1) +  
   COALESCE(RTRIM(rp.FIRST_NAME), SPACE(0)) + SPACE(1) +  
   COALESCE(RTRIM(rp.LEGAL_MIDDLE_NAME), SPACE(0)) AS Recruiter, 
   COALESCE(RTRIM(rp.RANK_CODE), SPACE(0)) + SPACE(1)  +  
    COALESCE(RTRIM(rp.LAST_NAME), SPACE(0)) AS RecruiterShortName, 
   prf.SCHOOL_YEAR AS SchoolYear, 
   hse.EventID, 
   hse.EventType, 
   hse.EventTypeOther, 
   hse.StartDate AS NextScheduledEvent 
    
 FROM  
  #SchoolList hs 
  INNER JOIN [MCRISS].[dbo].[HIGH_SCHOOL_PROFILE] prf  
   ON hs.SCHOOL_CODE = prf.SCHOOL_CODE AND prf.School_Year = @SchoolYear 
  LEFT OUTER JOIN [RSSOSS].[USMC].HSCCVisitCard hsv  
   ON hs.SCHOOL_CODE = hsv.School_Code AND hsv.School_Year = prf.SCHOOL_YEAR 
  LEFT OUTER JOIN #Event hse 
   ON hse.Pro.leId = prf.rowguid 
  LEFT OUTER JOIN #Recrui.ngPerson rp  
   ON prf.RECRUITER_ID = rp.RECRUITING_PERSON_ID  
               
 WHERE 
  (prf.rowguid IS NOT NULL)  
  AND  ( LEFT(hsv.DatePrepared,11) >= Coalesce(@DateCreatedStart, LEFT(hsv.DatePrepared,11)) )  
  AND  ( LEFT(hsv.DatePrepared,11) <= Coalesce(@DateCreatedEnd, LEFT(hsv.DatePrepared,11)) )   
  AND (rp.RowGuid = @RecruiterId OR @RecruiterId IS NULL)  
  AND (prf.SCHOOL_YEAR = @SchoolYear OR @SchoolYear IS NULL)  
   
  
 IF (@Ac.onDatedStart is null and @Ac.onDatedEnd is null) 
   SELECT  DISTINCT *  
   FROM #HSCCVisitCard        
  ORDER BY ApplicantAssetName ASC 
 ELSE 
  SELECT DISTINCT hv.*  
  FROM #HSCCVisitCard hv 
  INNER JOIN [RSSOSS].[USMC].EventSubject es ON es.SubjectID = hv.CardID  
  INNER JOIN RSSOSS.USMC.Event e ON e.id = es.even.d AND e.EventSourceId = 19 
  WHERE  
   ((LEFT(e.StartDate,11) >= Coalesce(@Ac.onDatedStart, LEFT(e.StartDate,11))) 
   AND (LEFT(e.StartDate,11) <= Coalesce(@Ac.onDatedEnd, LEFT(e.StartDate,11)))  ) 
  --( (e.StartDate >= @Ac.onDatedStart OR @Ac.onDatedStart IS NULL) AND 
  -- (e.startDate < @Ac.onDatedEnd OR @Ac.onDatedEnd IS NULL) )             
  ORDER BY ApplicantAssetName ASC      
 
 DROP TABLE #HSCCVisitCard 
 DROP TABLE #Recrui.ngPerson 
 DROP TABLE #SchoolList 
 DROP TABLE #Event]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>