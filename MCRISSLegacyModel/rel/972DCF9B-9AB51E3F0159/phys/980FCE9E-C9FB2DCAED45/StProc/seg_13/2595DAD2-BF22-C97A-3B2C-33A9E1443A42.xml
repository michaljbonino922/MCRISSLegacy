<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[sp_AddNWAO.cer]" directorySegmentName="seg_13" id="2595DAD2-BF22-C97A-3B2C-33A9E1443A42">
<sourceDDLFile>create MCRISS script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 19:28:41 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@LastName   varchar(20), 
 @FirstName   varchar(20), 
 @MiddleName   varchar(20), 
 @Su.x    varchar(5), 
 @SSN    char(9), 
 @DateOfBirth   date.me, 
 @Gender    char(1), 
 @Organiza.onOfRecordID  int, 
 @Recrui.ngPersonID  int, 
 @NWADeclaredDate  date.me, 
 @Ini.alContact   date.me, 
 @O.cerComponentCode  varchar(2), 
 @ShipMission   int, 
 @BachGradYear   int, 
 @BachGradMonth   int, 
 @SourceCode   varchar(10), 
 @Ac.vityCode   varchar(2), 
 @ReferrerSSN   char(9)  = NULL, 
 @PPC    varchar(8) = NULL, 
 @CompletedEduca.onLevel varchar(2), 
 @CompletedEduca.onCode  char(1), 
 @CompletedSchoolCode  int, 
 @CompletedSchoolEndDate  date.me, 
 @CompletedProjectedTier  int   = NULL,  
 @CurrentEduca.onLevel  varchar(2) = NULL, 
 @CurrentEduca.onCode  char(1)  = NULL, 
 @CurrentSchoolCode  int  = NULL, 
 @CurrentMajor   varchar(2) = NULL, 
 @ProjectedGradDate  date.me  = NULL, 
 @GPA    .oat  = NULL, 
 @CumGPA    .oat  = NULL, 
 @CurrentProjectedTier  int   = NULL,  
 @RaceCode   char(1), 
 @EthnicCode   varchar(2), 
 @MEPCOMRaceCode   char(1), 
 @MEPCOMEthnicCode  char(1), 
 @MaritalStatusCode  char(1), 
 @ReligionCode   varchar(2),   
 @CountryOfOrigin  varchar(3), 
 @Ci.zenship   varchar(2), 
 @ProfessedExamType  varchar(1) = NULL, 
 @ExamDate   date.me = NULL, 
 @ExamScore   .oat  = NULL, 
 @ExamScore2   int   = NULL, 
 @ExamScore3   int  = NULL, 
 @CurStreetAddress  varchar(50) = NULL, 
 @CurStateCode   varchar(2) = NULL, 
 @CurCountyCode   varchar(3) = NULL, 
 @CurCityCode   varchar(4) = NULL, 
 @CurZipcode   varchar(9) = NULL, 
 @CurAC    varchar(4) = NULL, 
 @CurTelephoneNumber  varchar(10) = NULL, 
 @HorStreetAddress  varchar(50) = NULL, 
 @HorStateCode   varchar(2) = NULL, 
 @HorCountyCode   varchar(3) = NULL, 
 @HorCityCode   varchar(4) = NULL, 
 @HorZipcode   varchar(9) = NULL, 
 @HorAC    varchar(4) = NULL, 
 @HorTelephoneNumber  varchar(10) = NULL, 
 @EmailAddress   varchar(50) = NULL,  
 @WaiverNote   varchar(50) = NULL, 
 @Addi.onalTelephoneType char(1)  = NULL, 
 @Addi.onalAC   varchar(4)  = NULL, 
 @Addi.onalTelephoneNumber varchar(10)  = NULL, 
 @StatusType   char(1), 
 @StatusCode   varchar(10), 
 @Disposi.onCode  varchar(20), 
 @StatusE.ec.veDate  date.me, 
 @MissionMonth   int, 
 @MissionYear   int, 
 @OCSClass   varchar(8), 
 @OCSClassFY   int, 
 @OCSClassIncrement  int, 
 @Na.onalCallToService  char(1), 
 @UserLogin   varchar(15), 
 @NWAID    int OUTPUT, 
 @PersonID   int OUTPUT 
AS 
 
DECLARE @UpdateCounter INT 
 
DECLARE @DBID   INT 
DECLARE @DBNAME  SYSNAME 
DECLARE @CurrentDate DATETIME 
 
DECLARE @ErrMsg  varchar(100) 
 
SET NOCOUNT ON 
 
--- INITIALIZE VARIABLES 
SELECT  
 @CurrentDate = GETDATE(), 
 @DBID   = DB_ID(),  
 @DBNAME  = DB_NAME(), 
 @UpdateCounter  = 1 
 
--- update the PERSON table and retrieve the new PersonID 
EXEC sp_UpdatePerson 
 @PersonID    = 0, 
 @SocialSecurityNumber  = @SSN, 
 @FirstName   = @FirstName, 
 @LegalMiddleName  = @MiddleName, 
 @LastName   = @LastName, 
 @Su.xCD   = @Su.x, 
 @UserLogin   = @UserLogin, 
 @ID    = @PersonID OUTPUT 
 
IF @@ERROR != 0  
BEGIN 
 RAISERROR ('An error occurred adding the NWA person record.', 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
--- INCREMENT THE UPDATE COUNTER 
SET @UpdateCounter = @UpdateCounter + 1 
 
--- update the MARINE_CANDIDATE table 
EXEC sp_UpdateMarineCandidate  
 @PersonID    = @PersonID, 
 @MaritalStatusCode  = @MaritalStatusCode, 
 @RaceCode     = @RaceCode, 
 @EthnicCode     = @EthnicCode, 
 @MEPCOMRaceCategoryCode  = @MEPCOMRaceCode, 
 @MEPCOMEthnicCategoryCode = @MEPCOMEthnicCode, 
 @GenderCode     = @Gender, 
 @ReligionCode     = @ReligionCode, 
 @Popula.onGroupCode    = NULL, 
 @DateOfBirth     = @DateOfBirth, 
 @Ci.zenship     = @Ci.zenship, 
 @CountryOfOrigin    = @CountryOfOrigin,  
 @DriverLicenseState    = NULL, 
 @DriverLicenseNum    = NULL, 
 @DriverLicenseExp    = NULL, 
 @InterviewDate    = NULL, 
 @UserLogin    = @UserLogin 
 
IF @@ERROR != 0 
BEGIN 
 RAISERROR ('An error occurred adding the NWA marine candidate record.', 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
--- INCREMENT THE UPDATE COUNTER 
SET @UpdateCounter = @UpdateCounter + 1 
 
--- update the NWA table and retrieve the NWAID 
EXEC sp_UpdateNWA 
 @PersonID   = @PersonID, 
 @NWAID    = 0, 
 @NWADeclaredDate  = @NWADeclaredDate, 
 @NWADateStartedWorking  = @Ini.alContact, 
 @ParentalConsent  = NULL, 
 @ProjectedShipMonth  = NULL, 
 @NWALogNotes   = @WaiverNote, 
 @ProjectProgramChoice1  = NULL, 
 @ProjectProgramChoice2  = NULL, 
        @ProjectProgramChoice3  = NULL, 
 @Ac.vityCode    = @Ac.vityCode, 
 @SourceCode    = @SourceCode, 
 @SourceCodeDual   = NULL, 
 @RecruiterofRecordID   = @Recrui.ngPersonID, 
 @Organiza.onofRecordID = @Organiza.onOfRecordID, 
 @WorkingRecruiterID   = @Recrui.ngPersonID, 
 @CategoryCode   = NULL, 
 @Educa.onLevel   = @CompletedEduca.onLevel, 
 @Educa.onCode   = @CompletedEduca.onCode, 
 @PPC     = @PPC, 
 @CompChangeFlag   = NULL, 
 @BachGradYear   = @BachGradYear, 
 @BachGradMonth   = @BachGradMonth, 
 @O.cerComponentCode  = @O.cerComponentCode, 
 @Na.onalCallToService = @Na.onalCallToService, 
 @ShipMission   = @ShipMission, 
 @EmailAddress  = @EmailAddress, 
 @UserLogin   = @UserLogin, 
 @ID    = @NWAID OUTPUT 
 
IF @@ERROR != 0  
BEGIN 
 RAISERROR ('An error occurred adding the NWA record.', 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
--- INCREMENT THE UPDATE COUNTER 
SET @UpdateCounter = @UpdateCounter + 1 
 
--- if there is a completed educa.on record, update the CANDIDATE_EDUCATION table with the completed educa.on data 
IF @CompletedSchoolCode IS NOT NULL AND @CompletedEduca.onLevel IS NOT NULL 
BEGIN 
 --- update the CANDIDATE_EDUCATION table with the completed educa.on data 
 EXEC sp_UpdateCandidateEduca.on  
  @PersonID    = @PersonID, 
  @SchoolEndDate    = @CompletedSchoolEndDate, 
  @Educa.onLevel   = @CompletedEduca.onLevel, 
  @Educa.onCode    = @CompletedEduca.onCode, 
  @SchoolCode    = @CompletedSchoolCode, 
  @CivilianEduca.onMajorCode   = NULL, 
  @Veri.ca.on     = 'PENDING', 
  @GPA    = NULL, 
  @CumGPA    = NULL,  
  @ProjectedGradDate  = NULL, 
  @ProjectedTier   = @CompletedProjectedTier, 
  @UserLogin    = @UserLogin 
 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the completed educa.on.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
--- if there is a current educa.on record, update the CANDIDATE_EDUCATION table with the current educa.on data 
IF @CurrentSchoolCode IS NOT NULL AND @CurrentEduca.onLevel IS NOT NULL 
BEGIN 
 EXEC sp_UpdateCandidateEduca.on  
  @PersonID    = @PersonID, 
  @SchoolEndDate    = NULL, 
  @Educa.onLevel   = @CurrentEduca.onLevel, 
  @Educa.onCode    = @CurrentEduca.onCode, 
  @SchoolCode    = @CurrentSchoolCode, 
  @CivilianEduca.onMajorCode   = NULL, 
  @Veri.ca.on     = 'PENDING', 
  @GPA    = @GPA, 
  @CumGPA    = @CumGPA,  
  @ProjectedGradDate  = @ProjectedGradDate, 
  @ProjectedTier   = @CurrentProjectedTier, 
  @UserLogin    = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the current educa.on.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
--- PROFESSED EXAM DATA 
IF @ProfessedExamType IS NOT NULL AND @ExamDate IS NOT NULL 
BEGIN 
 --- update the PROFESSED_EXAM table 
 EXEC sp_UpdateCandidateProfessedExam 
  @PersonID   = @PersonID, 
  @ProfessedExamType = @ProfessedExamType, 
  @ExamDate   = @ExamDate, 
  @ExamEnteredDate  = @CurrentDate, 
  @ExamScore   = @ExamScore, 
  @ExamScore2   = @ExamScore2, 
  @ExamScore3   = @ExamScore3, 
  @UserLogin   = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the professed exam.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
 
--- update the CANDIDATE_STATUS table 
EXEC sp_UpdateCandidateStatus 
 @NWAID    = @NWAID, 
 @StatusE.ec.veDate  = @StatusE.ec.veDate, 
 @StatusType   = @StatusType, 
 @StatusCode   = @StatusCode, 
 @Disposi.onCode  = @Disposi.onCode, 
 @UserLogin   = @UserLogin 
 
IF @@ERROR != 0  
BEGIN 
 RAISERROR ('An error occurred adding the status disposi.on record.', 16, @UpdateCounter, @DBID, @DBNAME) 
 RETURN 
END 
 
 
--- INCREMENT THE UPDATE COUNTER 
SET @UpdateCounter = @UpdateCounter + 1 
 
--- CURRENT ADDRESS DATA 
IF @CurStreetAddress IS NOT NULL AND @CurStateCode IS NOT NULL 
BEGIN 
 --- UPDATE CURRENT ADDRESS DATA 
 EXEC sp_UpdateCandidateAddress 
  @PersonID  = @PersonID, 
  @AddressType  = 'C', 
  @StreetAddress  = @CurStreetAddress, 
  @CityCode  = @CurCityCode, 
  @CountyCode  = @CurCountyCode, 
  @StateCode  = @CurStateCode, 
  @ZipCode  = @CurZipcode, 
  @UserLogin  = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the current address.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
--- HOR ADDRESS DATA 
IF @HorStreetAddress IS NOT NULL AND @HorStateCode IS NOT NULL 
BEGIN 
 --- UPDATE HOR ADDRESS DATA 
 EXEC sp_UpdateCandidateAddress 
  @PersonID  = @PersonID, 
  @AddressType  = 'H', 
  @StreetAddress = @HorStreetAddress, 
  @CityCode  = @HorCityCode, 
  @CountyCode  = @HorCountyCode, 
  @StateCode  = @HorStateCode, 
  @ZipCode  = @HorZipcode, 
  @UserLogin  = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the home of record address.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
IF @CurTelephoneNumber IS NOT NULL 
BEGIN 
 --- UPDATE CURRENT TELEPHONE DATA 
 EXEC sp_UpdateCandidateTelephone 
  @PersonID   = @PersonID, 
  @TelephoneType   = 'C', 
  @AreaCode   = @CurAC, 
  @TelephoneNumber  = @CurTelephoneNumber, 
  @UserLogin   = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the current telephone.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
 
IF @HorTelephoneNumber IS NOT NULL 
BEGIN 
 --- UPDATE HOR TELEPHONE DATA 
 EXEC sp_UpdateCandidateTelephone 
  @PersonID   = @PersonID, 
  @TelephoneType   = 'H', 
  @AreaCode   = @HorAC, 
  @TelephoneNumber  = @HorTelephoneNumber, 
  @UserLogin   = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  RAISERROR ('An error occurred adding the NWA home of record telephone.', 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
 
IF @Addi.onalTelephoneType IS NOT NULL AND @Addi.onalTelephoneNumber IS NOT NULL 
BEGIN 
 --- UPDATE ADDITIONAL TELEPHONE DATA 
 EXEC sp_UpdateCandidateTelephone 
  @PersonID   = @PersonID, 
  @TelephoneType   = @Addi.onalTelephoneType, 
  @AreaCode   = @Addi.onalAC, 
  @TelephoneNumber  = @Addi.onalTelephoneNumber, 
  @UserLogin   = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  DECLARE @TelephoneTypeDesc varchar(50) 
 
  --- RETRIEVE THE TELEPHONE TYPE    
  SELECT @TelephoneTypeDesc = COALESCE(TT.TELEPHONE_TYPE, 'addi.onal') FROM TELEPHONE_TYPE TT  
  WHERE TT.TELEPHONE_TYPE_CODE = @Addi.onalTelephoneType 
 
 
  SET @ErrMsg = 'An error occurred adding the ' + @TelephoneTypeDesc + ' telephone.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 END 
 
 --- INCREMENT THE UPDATE COUNTER 
 SET @UpdateCounter = @UpdateCounter + 1 
END 
 
IF @ReferrerSSN IS NOT NULL 
BEGIN 
 --- call sp_UpdateO.cerReferral so referrals can be deleted if necessary 
 EXEC sp_UpdateO.cerReferral   
  @NWAID   = @NWAID, 
  @ReferralType  = @SourceCode, 
  @ReferrerSSN = @ReferrerSSN, 
  @UserLogin  = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  SET @ErrMsg = 'An error occurred adding the referral data.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 
  --- INCREMENT THE UPDATE COUNTER 
  SET @UpdateCounter = @UpdateCounter + 1 
 END 
END 
 
--- UPDATE MISSION MONTH/YEAR 
IF COALESCE(@MissionMonth, 0) > 0 OR COALESCE(@MissionYear, 0) > 0 
BEGIN 
 
 EXEC sp_UpdateNWAO.cerMission 
  @NWAO.cerMissionID = 0, 
  @NWAID   = @NWAID, 
  @MissionMonth  = @MissionMonth, 
  @MissionYear  = @MissionYear, 
  @UserLogin  = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  SET @ErrMsg = 'An error occurred adding the Mission Month and Year data.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 
  --- INCREMENT THE UPDATE COUNTER 
  SET @UpdateCounter = @UpdateCounter + 1 
 END 
END 
 
 
--- UPDATE OCS CLASS ASSIGNMENT 
IF @OCSClass IS NOT NULL AND @OCSClassFY > 0 AND @OCSClassIncrement > 0 
BEGIN 
 EXEC sp_UpdateOCSClassAssignment 
  @OCSID    = 0, 
  @NWAID   = @NWAID, 
  @PEBD   = NULL, 
  @ShippedProgram  = NULL, 
  @TrainingType  = @OCSClass, 
  @ClassIncrement  = @OCSClassIncrement, 
  @FY   = @OCSClassFY, 
  @PreviousTrainingType = NULL, 
  @PreviousClassIncrement = NULL, 
  @PreviousFY  = NULL, 
  @UserLogin  = @UserLogin 
 
 IF @@ERROR != 0  
 BEGIN 
  SET @ErrMsg = 'An error occurred adding the OCS Class/Increment/FY data.' 
  RAISERROR (@ErrMsg, 16, @UpdateCounter, @DBID, @DBNAME) 
  RETURN 
 
  --- INCREMENT THE UPDATE COUNTER 
  SET @UpdateCounter = @UpdateCounter + 1 
 END 
END 
 
SET NOCOUNT OFF]]></body>
<schema>3925E19F-DC76-90A4-B892-D7A526C79632</schema>
<database>B007042D-D2E3-F83F-481F-CEB23B21CB30</database>
</StoredProcedureSqlServerv2k5>