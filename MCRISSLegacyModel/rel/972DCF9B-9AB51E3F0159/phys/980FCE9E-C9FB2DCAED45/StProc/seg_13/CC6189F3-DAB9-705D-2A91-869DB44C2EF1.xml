<?xml version = '1.0' encoding = 'UTF-8'?>
<StoredProcedureSqlServerv2k5 class="oracle.dbtools.crest.model.design.storage.sqlserver.v2k5.StoredProcedureSqlServerv2k5" name="[GetIMOBriefRecruiterAc.vi.esList_PJ]" directorySegmentName="seg_13" id="CC6189F3-DAB9-705D-2A91-869DB44C2EF1">
<sourceDDLFile>create ODSE script - MCRISS OTA.txt</sourceDDLFile>
<createdBy>MichalBonino</createdBy>
<createdTime>2024-04-29 23:43:55 UTC</createdTime>
<ownerDesignName>MCRISSLegacyModel</ownerDesignName>
<body><![CDATA[@RecruiterID   uniqueiden..er = null, 
    @OrgID   int = null, 
    @DateFrom date.me = null, 
    @DateTo date.me = null, 
    @IsApproved bit = 0 
 
AS 
BEGIN 
 
-- Just in case the proc failed at some point and did not delete the temp table 
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'tempdb..#myIMOTemp') AND type in (N'T', N'U')) 
DROP TABLE #myIMOTemp 
 
CREATE TABLE #myIMOTemp  
( 
[ID]  uniqueiden..er null ,  
[Name]  varchar(100) null,  
CardType  varchar(160) null,  
LastUpdateDate  DateTime null,  
Sector  varchar(12) null,  
Addi.onalGuid  uniqueiden..er null,  
PrimaryGuid  uniqueiden..er null, 
[Year]  int, 
[Type]  varchar(12) null 
) 
 
If @OrgID is null  
Set @OrgID=0 
 
INSERT INTO #myIMOTemp ([ID], [Name] , CardType , LastUpdateDate, Sector, Addi.onalGuid , PrimaryGuid ,[Year] ,[Type]) 
 
---  REMEMBER ->  EventSubject table subjectID guid relates to mul.ple types of objects, persons or a school ect.... 
 
 
---  GET PERSON RELATED EVENTS  --- 
SELECT DISTINCT  
                      E.ID,  
                      ESJ.SubjectName AS Name,  
                      ES.Name AS CardType,  
                      E.LastUpdateDate,  
                      RSSOSS.USMC.MapsSector.SectorDesignator AS Sector,  
                      USMC.Prospect.NwaId AS Addi.onalGuid,  
                      ESJ.SubjectId AS PrimaryGuid, 
                      0 as [Year], 
                      'EV' as [Type] 
FROM         USMC.PersonAddress INNER JOIN 
                      USMC.Prospect ON USMC.PersonAddress.PersonId = USMC.Prospect.PersonId INNER JOIN 
                      RSSOSS.USMC.MapsSectorZip ON USMC.PersonAddress.ZipCode = RSSOSS.USMC.MapsSectorZip.Zip INNER JOIN 
                      RSSOSS.USMC.MapsSector ON RSSOSS.USMC.MapsSectorZip.SectorID = RSSOSS.USMC.MapsSector.SectorID INNER JOIN 
                      RSSOSS.USMC.EventSubject AS ESJ ON USMC.Prospect.ProspectId = ESJ.SubjectId INNER JOIN 
                      RSSOSS.USMC.Event AS E INNER JOIN 
                      RSSOSS.USMC.EventSource AS ES ON E.EventSourceId = ES.ID INNER JOIN 
                      RSSOSS.USMC.EventType AS ET ON E.EventTypeId = ET.ID ON ESJ.EventId = E.ID                                            
 WHERE  
          E.Organiza.onId = @OrgID               
      AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
  WHERE E.ID = EV.EventId AND EV.Recrui.ngPersonId = @RecruiterId) OR Exists( 
         SELECT ID FROM [RSSOSS].[USMC].[EventOwners] eo  
         WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))) 
   
  UNION 
 
--  GET LIST SCHEDULING DATA  --- 
SELECT DISTINCT  
                         e.Id AS id, 
                         EventSubject.SubjectName AS Name,  
                         EventSource.Name AS CardType, 
                         e.LastUpdateDate,  
                         MapsSector.SectorDesignator AS Sector,  
                          null AS Addi.onalGuid, 
                         ie.ImportEventId AS primaryGuid, 
                         hsp.SCHOOL_YEAR AS [Year],                         
                         'EV' as [Type]                   
FROM            RSSOSS.USMC.MapsSectorZip INNER JOIN 
                         RSSOSS.USMC.MapsSector ON MapsSectorZip.SectorID = MapsSector.SectorID INNER JOIN 
                         MCRISS.dbo.HIGH_SCHOOL HS ON MapsSectorZip.Zip = SUBSTRING(HS.ZIP_CODE, 1, 5) INNER JOIN 
                         MCRISS.dbo.HIGH_SCHOOL_PROFILE AS hsp ON HS.SCHOOL_CODE = hsp.SCHOOL_CODE 
                         INNER JOIN USMC.ImportEvent ie ON ie.SchoolId = HS.rowguid  and hsp.School_Year = ie.Gradua.onYear 
                         INNER JOIN RSSOSS.USMC.EventSubject ON ie.ImportEventId = EventSubject.SubjectId INNER JOIN 
                         RSSOSS.USMC.Event e ON EventSubject.EventId = e.ID INNER JOIN 
                         RSSOSS.USMC.EventSource ON e.EventSourceId = EventSource.ID 
                         
WHERE  
      E.Organiza.onId = @OrgID 
     AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
          WHERE (E.ID = EV.EventId) AND EV.Recrui.ngPersonId = @RecruiterId) 
          OR Exists(Select  ID FROM [RSSOSS].[USMC].[EventOwners] eo  
    WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))) 
  UNION 
 
--  GET CONTACT DATA  --- 
SELECT DISTINCT  
                         e.Id AS id, 
                         EventSubject.SubjectName AS Name,  
                         EventSource.Name AS CardType, 
                         e.LastUpdateDate,  
                         MapsSector.SectorDesignator AS Sector,  
                          null AS Addi.onalGuid, 
                         cc.ID AS primaryGuid, 
                         cc.ForFY AS [Year],                         
                         'EV' as [Type]                   
FROM            RSSOSS.USMC.MapsSectorZip INNER JOIN 
                         RSSOSS.USMC.MapsSector ON MapsSectorZip.SectorID = MapsSector.SectorID INNER JOIN 
                        RSSOSS.USMC.CONTACTCARD cc ON MapsSectorZip.Zip = SUBSTRING(cc.WORK_ZIPCODE, 1, 5) 
                         INNER JOIN RSSOSS.USMC.EventSubject ON cc.ID = EventSubject.SubjectId INNER JOIN 
                         RSSOSS.USMC.Event e ON EventSubject.EventId = e.ID INNER JOIN 
                         RSSOSS.USMC.EventSource ON e.EventSourceId = EventSource.ID 
 
WHERE  
      E.Organiza.onId = @OrgID 
     AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
          WHERE (E.ID = EV.EventId) AND EV.Recrui.ngPersonId = @RecruiterId) 
          OR Exists(Select  ID FROM [RSSOSS].[USMC].[EventOwners] eo  
    WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))) 
  UNION 
 
 
 
--  GET TAKEONE DATA  --- 
SELECT DISTINCT  
                         null AS id, 
                         'Sector ' + ms.SectorDesignator + ' ' + 'TO ' + tc.FY AS Name,  
                         'TAKE ONE' AS CardType, 
                         tr.RestockDate,  
                         ms.SectorDesignator AS Sector,  
                         null AS Addi.onalGuid, 
                         tc.ID AS primaryGuid, 
                         tc.FY AS [Year],                         
                         'EV' as [Type]                   
FROM            RSSOSS.USMC.MapsSector ms INNER JOIN 
                RSSOSS.USMC.MapsSectorRecruiter mr  ON ms.SectorID = mr.SectorID INNER JOIN 
                RSSOSS.USMC.TAKEONECARD tc  ON ms.SectorID = tc.SectorID                        
                INNER JOIN RSSOSS.USMC.MapsSectorRecruiter msr ON tc.SectorID  = msr.SectorID  
                INNER JOIN  RSSOSS.USMC.TAKEONELOCATION tl on tl.TakeOneCardID = tc.ID 
                INNER JOIN  RSSOSS.USMC.TAKEONELOCATIONRESTOCK tr on tl.ID = tr.TakeOneLoca.onID 
                INNER JOIN MCRISS.DBO.RECRUITING_ORGANIZATION ro on ro.rowguid = ms.Recrui.ngOrganiza.onId               
 
WHERE  
      ro.Organiza.on_Id = @OrgID  
     AND (@RecruiterId is null or mr.Recrui.ngPersonId = @RecruiterId)   
  AND (LEFT(tr.RestockDate,11) >= Coalesce(@dateFrom, LEFT(tr.RestockDate,11))) 
  AND (LEFT(tr.RestockDate,11) <= Coalesce(@dateTo, LEFT(tr.RestockDate,11))) 
   
   
  UNION 
 
--  GET IRT DATA  --- 
SELECT DISTINCT  
                         e.Id AS id, 
                         EventSubject.SubjectName AS Name,  
                         EventSource.Name AS CardType, 
                         e.LastUpdateDate,  
                         ic.Sector,  
                          null AS Addi.onalGuid, 
                         ic.IRTCardId AS primaryGuid, 
                         ic.ForFY AS [Year],                         
                         'EV' as [Type]                   
FROM                     RSSOSS.USMC.IRTCARD ic INNER JOIN RSSOSS.USMC.EventSubject  
                         ON ic.IRTCardId = EventSubject.SubjectId INNER JOIN 
                         RSSOSS.USMC.Event e ON EventSubject.EventId = e.ID INNER JOIN 
                         RSSOSS.USMC.EventSource ON e.EventSourceId = EventSource.ID 
 
WHERE  
      E.Organiza.onId = @OrgID 
     AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
          WHERE (E.ID = EV.EventId) AND EV.Recrui.ngPersonId = @RecruiterId) 
          OR Exists(Select  ID FROM [RSSOSS].[USMC].[EventOwners] eo  
    WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))) 
   
   
UNION 
 
 
 
--  GET MEDIA DATA  --- 
SELECT DISTINCT  
                         e.Id AS id, 
                         EventSubject.SubjectName AS Name,  
                         EventSource.Name AS CardType, 
                         e.LastUpdateDate,  
                         MapsSector.SectorDesignator AS Sector,  
                          null AS Addi.onalGuid, 
                         mc.MediaCardId AS primaryGuid, 
                         mc.FY AS [Year],                         
                         'EV' as [Type]                   
FROM            RSSOSS.USMC.MapsSectorZip INNER JOIN 
                         RSSOSS.USMC.MapsSector ON MapsSectorZip.SectorID = MapsSector.SectorID INNER JOIN 
                        RSSOSS.USMC.MEDIACARD mc ON MapsSectorZip.Zip = SUBSTRING(mc.ZIP_CODE, 1, 5) 
                         INNER JOIN RSSOSS.USMC.EventSubject ON mc.MediaCardId = EventSubject.SubjectId INNER JOIN 
                         RSSOSS.USMC.Event e ON EventSubject.EventId = e.ID INNER JOIN 
                         RSSOSS.USMC.EventSource ON e.EventSourceId = EventSource.ID 
 
WHERE  
      E.Organiza.onId = @OrgID 
     AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
          WHERE (E.ID = EV.EventId) AND EV.Recrui.ngPersonId = @RecruiterId) 
          OR Exists(Select  ID FROM [RSSOSS].[USMC].[EventOwners] eo  
    WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))) 
   
 
 
UNION 
 
--  GET SCHOOL RELATED DATA  --- 
SELECT DISTINCT  
                         e.Id AS id, 
                         EventSubject.SubjectName AS Name,  
                         EventSource.Name AS CardType, 
                         e.LastUpdateDate,  
                         MapsSector.SectorDesignator AS Sector,  
                          null AS Addi.onalGuid, 
                         hsp.rowguid AS primaryGuid, 
                         hsp.SCHOOL_YEAR AS [Year],                         
                         'EV' as [Type]                   
FROM            RSSOSS.USMC.MapsSectorZip INNER JOIN 
                         RSSOSS.USMC.MapsSector ON MapsSectorZip.SectorID = MapsSector.SectorID INNER JOIN 
                         MCRISS.dbo.HIGH_SCHOOL ON MapsSectorZip.Zip = SUBSTRING(MCRISS.dbo.HIGH_SCHOOL.ZIP_CODE, 1, 5) INNER JOIN 
                         MCRISS.dbo.HIGH_SCHOOL_PROFILE AS hsp ON MCRISS.dbo.HIGH_SCHOOL.SCHOOL_CODE = hsp.SCHOOL_CODE INNER JOIN 
                         RSSOSS.USMC.EventSubject ON hsp.rowguid = EventSubject.SubjectId INNER JOIN 
                         RSSOSS.USMC.Event e ON EventSubject.EventId = e.ID INNER JOIN 
                         RSSOSS.USMC.EventSource ON e.EventSourceId = EventSource.ID 
 
WHERE  
      E.Organiza.onId = @OrgID 
     AND (@RecruiterId is null or Exists(SELECT ID FROM [RSSOSS].[USMC].[EventPersonVisibility] AS EV  
          WHERE (E.ID = EV.EventId) AND EV.Recrui.ngPersonId = @RecruiterId) 
          OR Exists(Select  ID FROM [RSSOSS].[USMC].[EventOwners] eo  
    WHERE eo.EventID = E.ID AND eo.OwnerID = @RecruiterId)) 
  AND (LEFT(e.LastUpdateDate,11) >= Coalesce(@dateFrom, LEFT(e.LastUpdateDate,11))) 
  AND (LEFT(e.LastUpdateDate,11) <= Coalesce(@dateTo, LEFT(e.LastUpdateDate,11))); 
   
--update #myIMOTemp Set Sector = 'OA' where Sector is null 
  
---  GET THE AGGREGATED DATA --- 
SELECT DISTINCT * FROM #myIMOTemp 
 
---  FINISHED WITH TEMP TABLE  --- 
DROP TABLE #myIMOTemp 
                    
 
END]]></body>
<schema>A5B5C85F-7BA3-158E-D5A2-943767AC9AE2</schema>
<database>5DE69EDC-7A85-C77A-928E-DB3F41DD97CF</database>
</StoredProcedureSqlServerv2k5>